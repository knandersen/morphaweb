{"mappings":"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,MAAA,KAAA,CAAA,aAAA,MAAA,CAAA,GAAA,EACA,MAAA,CAAA,CAAA,aAAA,CAAA,CAAA,EAAA,OAAA;SACA,EAAA,EAAA,MAAA,CAAA,OAAA,KAAA,CAAA,SACA,OAAA,CAAA,CAAA,eAAA,OAAA;SAEA,IAAA,CAAA,CAAA,eAAA,OAAA;AACA,CAAC,EAAD,IAAA,EAAA,QAAA,GAAA,CAAA;IACA,MAAA,CAAA,EAAA,AAAA,IAAA,AAAA,EAAA,MAAA,CAAA;Q,E,A,I,A,E,C,G,C,mB,G,C;Y,E,A,C,A,E,C,C,+B,M,E,O,E,mB,G,C;gB,M,C,c,C,O,E,C,a,C;oB,K,E,I;gB,C;gB,O,C,O,G,I,C,C;gBCNA,GAAA,CAAA,MAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,eAAA,AAAA,EAAA,CAAA,CAAA;gBACA,GAAA,CAAA,MAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,gBAAA,AAAA,EAAA,CAAA,CAAA;yB,sB,C,G,E,C;oB,M,C,G,I,G,C,U,G,G,G,C;wB,O,E,G;oB,C;gB,C;yB,e,C,Q,E,W,E,C;oB,E,I,Q,Y,W,G,K,C,G,C,S,C,C;gB,C;yB,iB,C,M,E,K,E,C;oB,G,C,G,C,C,G,C,E,C,G,K,C,M,E,C,G,C;wB,G,C,U,G,K,C,C;wB,U,C,U,G,U,C,U,I,K;wB,U,C,Y,G,I;wB,E,E,C,U,U,E,U,C,Q,G,I;wB,M,C,c,C,M,E,U,C,G,E,U;oB,C;gB,C;yB,Y,C,W,E,U,E,W,E,C;oB,E,E,U,E,iB,C,W,C,S,E,U;oB,E,E,W,E,iB,C,W,E,W;oB,M,C,W;gB,C;gBAEA,EAMA,AANA;;;;;;CAMA,AANA,EAMA,CACqBA,GAAAA,CAAAA,YAAAA,GAAAA,EAAAA,AAAAA,SAAAA,AAAAA,EAAAA,CAAAA,QAAAA,GAAAA,CAAAA;6BACjB,WAAA,GAAc,CAAd;wBAAc,eAAA,CAAA,IAAA,EAAA,WAAA;wBACV,EAIR,AAJQ;;;;KAIR,AAJQ,EAIR,CACQ,IAAA,CAAKC,IAAL,GAAY,IAAZ;wBACA,EAIR,AAJQ;;;;KAIR,AAJQ,EAIR,CACQ,IAAA,CAAKC,OAAL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AJ;4BACH,CAAA;wB,C;wB,C;4B,G,E,C;4BAKD,KAAA,EAAA,QAAA,CAAA,OAAA,GAAU,CAAV;gCACI,IAAA,CAAKtC,OAAL,GAAe,IAAf;gCACA,IAAA,CAAKD,IAAL,GAAY,IAAZ;gCAEA,IAAA,CAAKG,WAAL,GAAmB,IAAnB;gCACA,IAAA,CAAKD,QAAL,GAAgB,IAAhB;4BACH,CAAA;wB,C;wB,C;4B,G,E,C;4BAeD,KAAA,EAAA,QAAA,CAAA,QAAA,CAAS0D,MAAT,EAAiBC,OAAjB,EAA0BC,IAA1B,EAAgC,CAAhC;gCAAgC,GAAA,CAAA,KAAA,GAAA,IAAA;gCAC5B,EAAA,EAAIA,IAAI,KAAK,CAAb,OACI,MAAA,CAAO,GAAA,CAAIC,OAAJ,CAAY,QAAA,CAAAC,OAAO,EAAI,CAA9B;oCACI,KAAI,CAAChE,IAAL,CAAUiE,MAAV,CAAiBD,OAAjB,EAA0BJ,MAA1B,EAAkCC,OAAlC;gCACH,CAFM;qCAGJ,EAAA,EAAIC,IAAI,KAAK,CAAb,UACH,MAAA,CAAO,IAAA,CAAK9D,IAAL,CAAUkE,SAAV,CAAoBN,MAApB,EAA4BC,OAA5B;4BAEd,CAAA;wB,C;oB,C;oB,M,C,W;gB,C;gB,O,C,O,G,Y;gB,M,C,O,G,O,C,O;Y,E,A,C,A,E,C,C;Y,E,A,C,A,E,C,C,mB,M,E,O,E,mB,G,C;gB,C;yB,O,C,I,E,C;oB,E,E,M,C,M,K,C,a,M,C,M,C,Q,K,C,S,O,G,Q,C,O,C,G,E,C;wB,M,C,M,C,G;oB,C;yB,O,G,Q,C,O,C,G,E,C;wB,M,C,G,I,M,C,M,K,C,a,G,C,W,K,M,I,G,K,M,C,S,G,C,U,M,C,G;oB,C;oB,M,C,O,C,I;gB,C;gB,M,C,c,C,O,E,C,a,C;oB,K,E,I;gB,C;gB,O,C,O,G,I,C,C;gBC9YL,GAAA,CAAA,IAAA,GAAA,uBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,SAAA,AAAA,EAAA,CAAA,CAAA;yB,wB,C,Y,E,C;oB,E,E,M,C,O,K,C,W,M,C,I;oB,G,C,iB,G,G,C,O;oB,G,C,gB,G,G,C,O;oB,M,E,wB,G,Q,C,wB,C,W,E,C;wB,M,C,W,G,gB,G,iB;oB,C,E,Y;gB,C;yB,uB,C,G,E,W,E,C;oB,E,G,W,I,G,I,G,C,U,E,M,C,G;oB,E,E,G,K,I,I,O,C,G,M,C,W,M,C,G,K,C,W,M,C,C;wB,O,E,G;oB,C;oB,G,C,K,G,wB,C,W;oB,E,E,K,I,K,C,G,C,G,G,M,C,K,C,G,C,G;oB,G,C,M,G,C;oB,C;oB,G,C,qB,G,M,C,c,I,M,C,wB;oB,G,C,G,C,G,I,G,C,E,E,G,K,C,Y,M,C,S,C,c,C,I,C,G,E,G,G,C;wB,G,C,I,G,qB,G,M,C,wB,C,G,E,G,I,I;wB,E,E,I,K,I,C,G,I,I,C,G,G,M,C,c,C,M,E,G,E,I;6B,M,C,G,I,G,C,G;oB,C;oB,M,C,O,G,G;oB,E,E,K,E,K,C,G,C,G,E,M;oB,M,C,M;gB,C;yB,e,C,Q,E,W,E,C;oB,E,I,Q,Y,W,G,K,C,G,C,S,C,C;gB,C;yB,iB,C,M,E,K,E,C;oB,G,C,G,C,C,G,C,E,C,G,K,C,M,E,C,G,C;wB,G,C,U,G,K,C,C;wB,U,C,U,G,U,C,U,I,K;wB,U,C,Y,G,I;wB,E,E,C,U,U,E,U,C,Q,G,I;wB,M,C,c,C,M,E,U,C,G,E,U;oB,C;gB,C;yB,Y,C,W,E,U,E,W,E,C;oB,E,E,U,E,iB,C,W,C,S,E,U;oB,E,E,W,E,iB,C,W,E,W;oB,M,C,W;gB,C;yB,S,C,Q,E,U,E,C;oB,E,E,M,C,U,K,C,a,U,K,I,E,K,C,G,C,S,C,C;oB,Q,C,S,G,M,C,M,C,U,I,U,C,S,E,C;wB,W,E,C;4B,K,E,Q;4B,Q,E,I;4B,Y,E,I;wB,C;oB,C;oB,E,E,U,E,e,C,Q,E,U;gB,C;yB,e,C,E,E,E,E,C;oB,e,G,M,C,c,I,Q,C,e,C,C,E,C,E,C;wB,C,C,S,G,C;wB,M,C,C;oB,C;oB,M,C,e,C,E,E,E;gB,C;yB,Y,C,O,E,C;oB,G,C,yB,G,yB;oB,M,C,Q,C,oB,G,C;wB,G,C,K,G,e,C,O,G,M;wB,E,E,yB,E,C;4B,G,C,S,G,e,C,I,E,W;4B,M,G,O,C,S,C,K,E,S,E,S;wB,C,M,M,G,K,C,K,C,I,E,S;wB,M,C,0B,C,I,E,M;oB,C;gB,C;yB,0B,C,I,E,I,E,C;oB,E,E,I,K,O,C,I,M,C,W,M,C,I,K,C,Y,M,C,I;yB,E,E,I,K,I,C,C,E,K,C,G,C,S,C,C;oB,M,C,sB,C,I;gB,C;yB,sB,C,I,E,C;oB,E,E,I,K,I,C,C,E,K,C,G,C,c,C,C;oB,M,C,I;gB,C;yB,yB,G,C;oB,E,E,M,C,O,K,C,e,O,C,S,E,M,C,K;oB,E,E,O,C,S,C,I,E,M,C,K;oB,E,E,M,C,K,K,C,W,M,C,I;oB,G,C,C;wB,O,C,S,C,O,C,I,C,O,C,S,C,O,E,C,C,E,Q,G,C;wB,C;wB,M,C,I;oB,C,C,K,E,C,E,C;wB,M,C,K;oB,C;gB,C;yB,e,C,E,E,C;oB,e,G,M,C,c,G,M,C,c,G,Q,C,e,C,C,E,C;wB,M,C,C,C,S,I,M,C,c,C,C;oB,C;oB,M,C,e,C,E;gB,C;gBAEA,EAIA,AAJA;;;;CAIA,AAJA,EAIA,CACqBM,GAAAA,CAAAA,OAAAA,GAAAA,EAAAA,AAAAA,SAAAA,AAAAA,EAAAA,CAAAA,QAAAA,CAAAA,cAAAA,EAAAA,CAAAA;oB,S,C,M,E,c;oB,G,C,M,G,Y,C,M;oBACjB,EAGJ,AAHI;;;GAGJ,AAHI,EAGJ,UACI,MAAA,CAAYC,SAAZ,EAAuBC,MAAvB,EAA+B,CAA/B;wBAA+B,GAAA,CAAA,KAAA;wBAAA,eAAA,CAAA,IAAA,EAAA,MAAA;wBAC3B,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA;wBAEA,KAAA,CAAKD,SAAL,GAAiBE,IAAI,CAACC,eAAL,CAAqBH,SAArB,EAAgCC,MAAM,CAAC5C,QAAvC;wBACjB,EAER,AAFQ;;KAER,AAFQ,EAER,CACQ,KAAA,CAAK4C,MAAL,GAAcA,MAAd;wBACA,EAGR,AAHQ;;;KAGR,AAHQ,EAGR,CACQ,KAAA,CAAKtD,KAAL,GAAa,CAAb;wBACA,EAGR,AAHQ;;;KAGR,AAHQ,EAGR,CACQ,KAAA,CAAKC,MAAL,GAAcqD,MAAM,CAACrD,MAAP,GAAgB,KAAA,CAAKqD,MAAL,CAAYG,UAA1C;wBAEA,KAAA,CAAKC,OAAL,GAAe,CAAf;wBACA,EAGR,AAHQ;;;KAGR,AAHQ,EAGR,CACQ,KAAA,CAAKC,OAAL,GAAe,IAAf;wBAxB2B,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B,C;wB,C;4B,G,E,C;4BAQA,KAAA,EAAA,QAAA,CAAA,cAAA,CAAe6E,QAAf,EAAyB,CAAE;4BAAA,CAA3B;wB,C;oB,C;oB,M,C,M;gBAnZgCZ,CAAAA,CAAAA,IAAI,CAACgF,QAALhF;gB,O,C,O,G,O;gB,M,C,O,G,O,C,O;Y,E,A,C,A,E,C,C;Y,E,A,C,A,E,C,C,+B,M,E,O,E,mB,G,C;gB,C;yB,O,C,I,E,C;oB,E,E,M,C,M,K,C,a,M,C,M,C,Q,K,C,S,O,G,Q,C,O,C,G,E,C;wB,M,C,M,C,G;oB,C;yB,O,G,Q,C,O,C,G,E,C;wB,M,C,G,I,M,C,M,K,C,a,G,C,W,K,M,I,G,K,M,C,S,G,C,U,M,C,G;oB,C;oB,M,C,O,C,I;gB,C;gB,M,C,c,C,O,E,C,a,C;oB,K,E,I;gB,C;gB,O,C,O,G,I,C,C;gBCPpC,GAAA,CAAA,OAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,WAAA,AAAA,EAAA,CAAA,CAAA;gBACA,GAAA,CAAA,IAAA,GAAA,uBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,SAAA,AAAA,EAAA,CAAA,CAAA;gBACA,GAAA,CAAA,QAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,uBAAA,AAAA,EAAA,CAAA,CAAA;yB,wB,C,Y,E,C;oB,E,E,M,C,O,K,C,W,M,C,I;oB,G,C,iB,G,G,C,O;oB,G,C,gB,G,G,C,O;oB,M,E,wB,G,Q,C,wB,C,W,E,C;wB,M,C,W,G,gB,G,iB;oB,C,E,Y;gB,C;yB,uB,C,G,E,W,E,C;oB,E,G,W,I,G,I,G,C,U,E,M,C,G;oB,E,E,G,K,I,I,O,C,G,M,C,W,M,C,G,K,C,W,M,C,C;wB,O,E,G;oB,C;oB,G,C,K,G,wB,C,W;oB,E,E,K,I,K,C,G,C,G,G,M,C,K,C,G,C,G;oB,G,C,M,G,C;oB,C;oB,G,C,qB,G,M,C,c,I,M,C,wB;oB,G,C,G,C,G,I,G,C,E,E,G,K,C,Y,M,C,S,C,c,C,I,C,G,E,G,G,C;wB,G,C,I,G,qB,G,M,C,wB,C,G,E,G,I,I;wB,E,E,I,K,I,C,G,I,I,C,G,G,M,C,c,C,M,E,G,E,I;6B,M,C,G,I,G,C,G;oB,C;oB,M,C,O,G,G;oB,E,E,K,E,K,C,G,C,G,E,M;oB,M,C,M;gB,C;yB,sB,C,G,E,C;oB,M,C,G,I,G,C,U,G,G,G,C;wB,O,E,G;oB,C;gB,C;yB,e,C,Q,E,W,E,C;oB,E,I,Q,Y,W,G,K,C,G,C,S,C,C;gB,C;yB,iB,C,M,E,K,E,C;oB,G,C,G,C,C,G,C,E,C,G,K,C,M,E,C,G,C;wB,G,C,U,G,K,C,C;wB,U,C,U,G,U,C,U,I,K;wB,U,C,Y,G,I;wB,E,E,C,U,U,E,U,C,Q,G,I;wB,M,C,c,C,M,E,U,C,G,E,U;oB,C;gB,C;yB,Y,C,W,E,U,E,W,E,C;oB,E,E,U,E,iB,C,W,C,S,E,U;oB,E,E,W,E,iB,C,W,E,W;oB,M,C,W;gB,C;yB,S,C,Q,E,U,E,C;oB,E,E,M,C,U,K,C,a,U,K,I,E,K,C,G,C,S,C,C;oB,Q,C,S,G,M,C,M,C,U,I,U,C,S,E,C;wB,W,E,C;4B,K,E,Q;4B,Q,E,I;4B,Y,E,I;wB,C;oB,C;oB,E,E,U,E,e,C,Q,E,U;gB,C;yB,e,C,E,E,E,E,C;oB,e,G,M,C,c,I,Q,C,e,C,C,E,C,E,C;wB,C,C,S,G,C;wB,M,C,C;oB,C;oB,M,C,e,C,E,E,E;gB,C;yB,Y,C,O,E,C;oB,G,C,yB,G,yB;oB,M,C,Q,C,oB,G,C;wB,G,C,K,G,e,C,O,G,M;wB,E,E,yB,E,C;4B,G,C,S,G,e,C,I,E,W;4B,M,G,O,C,S,C,K,E,S,E,S;wB,C,M,M,G,K,C,K,C,I,E,S;wB,M,C,0B,C,I,E,M;oB,C;gB,C;yB,0B,C,I,E,I,E,C;oB,E,E,I,K,O,C,I,M,C,W,M,C,I,K,C,Y,M,C,I;yB,E,E,I,K,I,C,C,E,K,C,G,C,S,C,C;oB,M,C,sB,C,I;gB,C;yB,sB,C,I,E,C;oB,E,E,I,K,I,C,C,E,K,C,G,C,c,C,C;oB,M,C,I;gB,C;yB,yB,G,C;oB,E,E,M,C,O,K,C,e,O,C,S,E,M,C,K;oB,E,E,O,C,S,C,I,E,M,C,K;oB,E,E,M,C,K,K,C,W,M,C,I;oB,G,C,C;wB,O,C,S,C,O,C,I,C,O,C,S,C,O,E,C,C,E,Q,G,C;wB,C;wB,M,C,I;o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AApC,CAAA;wCAAoC,MAAA,CAChCA,KAAK,CAACgE,QAAN,CAAexL,MAAf,EAAuBC,OAAvB,EAAgCC,IAAhC;oCADgC,CAAvB;oCAGb,MAAA,CAAOuL,MAAM,CAACxM,MAAP,GAAgB,CAAhB,GAAoBwM,MAApB,GAA6BA,MAAM,CAAC,CAAD;gCAC7C,CAAA;4BACJ,CAAA;wB,C;wB,C;4B,G,E,C;4BAOD,KAAA,EAAA,QAAA,CAAA,cAAA,CAAenK,QAAf,EAAyB,CAAzB;gCACI,IAAA,CAAKL,KAAL,CAAW,IAAA,CAAK8E,YAAhB,EAA8B,CAA9B;oCAAgC5I,KAAK,EAAEmE,QAAQ,GAAG,CAAlBnE;gCAAF,CAA9B;4BACH,CAAA;wB,C;oB,C;oB,M,C,W;gBAjlBoCoD,CAAAA,CAAAA,OAAAA,CAAAA,OAAAA;gB,O,C,O,G,Y;gB,M,C,O,G,O,C,O;Y,E,A,C,A,E,C,C;Y,E,A,C,A,E,C,C,kC,M,E,O,E,mB,G,C;gB,C;yB,O,C,I,E,C;oB,E,E,M,C,M,K,C,a,M,C,M,C,Q,K,C,S,O,G,Q,C,O,C,G,E,C;wB,M,C,M,C,G;oB,C;yB,O,G,Q,C,O,C,G,E,C;wB,M,C,G,I,M,C,M,K,C,a,G,C,W,K,M,I,G,K,M,C,S,G,C,U,M,C,G;oB,C;oB,M,C,O,C,I;gB,C;gB,M,C,c,C,O,E,C,a,C;oB,K,E,I;gB,C;gB,O,C,O,G,I,C,C;gBCXzC,GAAA,CAAA,aAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,iBAAA,AAAA,EAAA,CAAA,CAAA;yB,sB,C,G,E,C;oB,M,C,G,I,G,C,U,G,G,G,C;wB,O,E,G;oB,C;gB,C;yB,e,C,Q,E,W,E,C;oB,E,I,Q,Y,W,G,K,C,G,C,S,C,C;gB,C;yB,iB,C,M,E,K,E,C;oB,G,C,G,C,C,G,C,E,C,G,K,C,M,E,C,G,C;wB,G,C,U,G,K,C,C;wB,U,C,U,G,U,C,U,I,K;wB,U,C,Y,G,I;wB,E,E,C,U,U,E,U,C,Q,G,I;wB,M,C,c,C,M,E,U,C,G,E,U;oB,C;gB,C;yB,Y,C,W,E,U,E,W,E,C;oB,E,E,U,E,iB,C,W,C,S,E,U;oB,E,E,W,E,iB,C,W,E,W;oB,M,C,W;gB,C;yB,I,C,O,E,S,E,S,E,C;oB,E,E,M,C,O,K,C,c,O,C,G,E,I,G,O,C,G;yB,I,G,Q,C,I,C,M,E,Q,E,Q,E,C;wB,G,C,I,G,c,C,M,E,Q;wB,E,G,I,E,M;wB,G,C,I,G,M,C,wB,C,I,E,Q;wB,E,E,I,C,G,E,M,C,I,C,G,C,I,C,Q;wB,M,C,I,C,K;oB,C;oB,M,C,I,C,O,E,S,E,S,I,O;gB,C;yB,c,C,M,E,Q,E,C;2B,M,C,S,C,c,C,I,C,M,E,Q,E,C;wB,M,G,e,C,M;wB,E,E,M,K,I,E,K;oB,C;oB,M,C,M;gB,C;yB,S,C,Q,E,U,E,C;oB,E,E,M,C,U,K,C,a,U,K,I,E,K,C,G,C,S,C,C;oB,Q,C,S,G,M,C,M,C,U,I,U,C,S,E,C;wB,W,E,C;4B,K,E,Q;4B,Q,E,I;4B,Y,E,I;wB,C;oB,C;oB,E,E,U,E,e,C,Q,E,U;gB,C;yB,e,C,E,E,E,E,C;oB,e,G,M,C,c,I,Q,C,e,C,C,E,C,E,C;wB,C,C,S,G,C;wB,M,C,C;oB,C;oB,M,C,e,C,E,E,E;gB,C;yB,Y,C,O,E,C;oB,G,C,yB,G,yB;oB,M,C,Q,C,oB,G,C;wB,G,C,K,G,e,C,O,G,M;wB,E,E,yB,E,C;4B,G,C,S,G,e,C,I,E,W;4B,M,G,O,C,S,C,K,E,S,E,S;wB,C,M,M,G,K,C,K,C,I,E,S;wB,M,C,0B,C,I,E,M;oB,C;gB,C;yB,0B,C,I,E,I,E,C;oB,E,E,I,K,O,C,I,M,C,W,M,C,I,K,C,Y,M,C,I;yB,E,E,I,K,I,C,C,E,K,C,G,C,S,C,C;oB,M,C,sB,C,I;gB,C;yB,sB,C,I,E,C;oB,E,E,I,K,I,C,C,E,K,C,G,C,c,C,C;oB,M,C,I;gB,C;yB,yB,G,C;oB,E,E,M,C,O,K,C,e,O,C,S,E,M,C,K;oB,E,E,O,C,S,C,I,E,M,C,K;oB,E,E,M,C,K,K,C,W,M,C,I;oB,G,C,C;wB,O,C,S,C,O,C,I,C,O,C,S,C,O,E,C,C,E,Q,G,C;wB,C;wB,M,C,I;oB,C,C,K,E,C,E,C;wB,M,C,K;oB,C;gB,C;yB,e,C,E,E,C;oB,e,G,M,C,c,G,M,C,c,G,Q,C,e,C,C,E,C;wB,M,C,C,C,S,I,M,C,c,C,C;oB,C;oB,M,C,e,C,E;gB,C;gBAEA,EAQA,AARA;;;;;;;;CAQA,AARA,EAQA,CACqBmL,GAAAA,CAAAA,qBAAAA,GAAAA,EAAAA,AAAAA,SAAAA,AAAAA,EAAAA,CAAAA,QAAAA,CAAAA,aAAAA,EAAAA,CAAAA;oB,S,C,oB,E,a;oB,G,C,M,G,Y,C,oB;oBACjB,EAIJ,AAJI;;;;GAIJ,AAJI,EAIJ,UACI,oBAAA,CAAYjL,MAAZ,EAAoB,CAApB;wBAAoB,GAAA,CAAA,KAAA;wBAAA,eAAA,CAAA,IAAA,EAAA,oBAAA;wBAChB,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAMA,MAAN;wBACA,EAAA,AAAA,WAAA,AAAA,EAAA,CACA,KAAA,CAAKA,MAAL,GAAcA,MAAd;wBACA,EAAA,AAAA,WAAA,AAAA,EAAA,CACA,KAAA,CAAKkL,kBAAL,GAA0B,IAA1B;wBALgB,MAAA,CAAA,KAAA;oBAMnB,CAAA;oBAED,EAEJ,AAFI;;GAEJ,AAFI,EAEJ,C,Y,C,oB,E,C;wB,C;4B,G,E,C;4BACI,KAAA,EAAA,QAAA,CAAA,IAAA,GAAO,CAAP;gCACI,IAAA,CAAKC,eAAL,CAAqB,IAAA,CAAKnL,MAAL,CAAYoL,SAAjC;gCACA,IAAA,CAAKC,WAAL;gCACA,IAAA,CAAKC,gBAAL;gCACA,IAAA,CAAKC,gBAAL;gCACA,IAAA,CAAKC,kBAAL;4BACH,CAAA;wB,C;wB,C;4B,G,E,C;4BAUD,KAAA,EAAA,QAAA,CAAA,KAAA,CAAMC,KAAN,EAAatN,KAAb,EAAoBuN,OAApB,EAA6B,CAA7B;gCACI,IAAA,CAAA,eAAA,CAAA,oBAAA,CAAA,SAAA,GAAA,CAAA,QAAA,IAAA,EAAA,IAAA,CAAA,IAAA,EAAYD,KAAZ,EAAmBtN,KAAnB,EAA0BuN,OAA1B;gCACA,IAAA,CAAKC,wBAAL,CAA8BF,KAA9B;4BACH,CAAA;wB,C;wB,C;4B,G,E,C;4BAQD,KAAA,EAAA,QAAA,CAAA,wBAAA,CAAyBG,YAAzB,EAAuC,CAAvC;gCACI,IAAA,CAAKV,kBAAL,GAA0B,IAAA,CAAKW,EAAL,CAAQF,wBAAR,CACtBC,YADsB;gCAG1B,IAAA,CAAKV,kBAAL,CAAwBY,OAAxB,CAAgC,IAAA,CAAKC,QAArC;4BACH,CAAA;wB,C;wB,C;4B,G,E,C;4BAED,KAAA,EAAA,QAAA,CAAA,IAAA,CAAKhQ,KAAL,EAAYC,GAAZ,EAAiB,CAAjB;gCACI,IAAA,CAAKgQ,kBAAL;gCACA,MAAA,CAAA,IAAA,CAAA,eAAA,CAAA,oBAAA,CAAA,SAAA,GAAA,CAAA,OAAA,IAAA,EAAA,IAAA,CAAA,IAAA,EAAkBjQ,KAAlB,EAAyBC,GAAzB;4BACH,CAAA;wB,C;wB,C;4B,G,E,C;4BAMD,KAAA,EAAA,QAAA,CAAA,OAAA,GAAU,CAAV;gCACI,IAAA,CAAA,eAAA,CAAA,oBAAA,CAAA,SAAA,GAAA,CAAA,UAAA,IAAA,EAAA,IAAA,CAAA,IAAA;gCAEA,IAAA,CAAKiQ,eAAL;4BACH,CAAA;wB,C;oB,C;oB,M,C,oB;gBAhE6CC,CAAAA,CAAAA,aAAAA,CAAAA,OAAAA;gB,O,C,O,G,qB;gB,M,C,O,G,O,C,O;Y,E,A,C,A,E,C,C;Y,E,A,C,A,E,C,C,yB,M,E,O,E,mB,G,C;gB,C;yB,O,C,I,E,C;oB,E,E,M,C,M,K,C,a,M,C,M,C,Q,K,C,S,O,G,Q,C,O,C,G,E,C;wB,M,C,M,C,G;oB,C;yB,O,G,Q,C,O,C,G,E,C;wB,M,C,G,I,M,C,M,K,C,a,G,C,W,K,M,I,G,K,M,C,S,G,C,U,M,C,G;oB,C;oB,M,C,O,C,I;gB,C;gB,M,C,c,C,O,E,C,a,C;oB,K,E,I;gB,C;gB,O,C,O,G,I,C,C;gBCXlD,GAAA,CAAA,SAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,aAAA,AAAA,EAAA,CAAA,CAAA;gBACA,GAAA,CAAA,IAAA,GAAA,uBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,SAAA,AAAA,EAAA,CAAA,CAAA;yB,wB,C,Y,E,C;oB,E,E,M,C,O,K,C,W,M,C,I;oB,G,C,iB,G,G,C,O;oB,G,C,gB,G,G,C,O;oB,M,E,wB,G,Q,C,wB,C,W,E,C;wB,M,C,W,G,gB,G,iB;oB,C,E,Y;gB,C;yB,uB,C,G,E,W,E,C;oB,E,G,W,I,G,I,G,C,U,E,M,C,G;oB,E,E,G,K,I,I,O,C,G,M,C,W,M,C,G,K,C,W,M,C,C;wB,O,E,G;oB,C;oB,G,C,K,G,wB,C,W;oB,E,E,K,I,K,C,G,C,G,G,M,C,K,C,G,C,G;oB,G,C,M,G,C;oB,C;oB,G,C,qB,G,M,C,c,I,M,C,wB;oB,G,C,G,C,G,I,G,C,E,E,G,K,C,Y,M,C,S,C,c,C,I,C,G,E,G,G,C;wB,G,C,I,G,qB,G,M,C,wB,C,G,E,G,I,I;wB,E,E,I,K,I,C,G,I,I,C,G,G,M,C,c,C,M,E,G,E,I;6B,M,C,G,I,G,C,G;oB,C;oB,M,C,O,G,G;oB,E,E,K,E,K,C,G,C,G,E,M;oB,M,C,M;gB,C;yB,sB,C,G,E,C;oB,M,C,G,I,G,C,U,G,G,G,C;wB,O,E,G;oB,C;gB,C;yB,e,C,Q,E,W,E,C;oB,E,I,Q,Y,W,G,K,C,G,C,S,C,C;gB,C;yB,iB,C,M,E,K,E,C;oB,G,C,G,C,C,G,C,E,C,G,K,C,M,E,C,G,C;wB,G,C,U,G,K,C,C;wB,U,C,U,G,U,C,U,I,K;wB,U,C,Y,G,I;wB,E,E,C,U,U,E,U,C,Q,G,I;wB,M,C,c,C,M,E,U,C,G,E,U;oB,C;gB,C;yB,Y,C,W,E,U,E,W,E,C;oB,E,E,U,E,iB,C,W,C,S,E,U;oB,E,E,W,E,iB,C,W,E,W;oB,M,C,W;gB,C;yB,I,C,O,E,S,E,S,E,C;oB,E,E,M,C,O,K,C,c,O,C,G,E,I,G,O,C,G;yB,I,G,Q,C,I,C,M,E,Q,E,Q,E,C;wB,G,C,I,G,c,C,M,E,Q;wB,E,G,I,E,M;wB,G,C,I,G,M,C,wB,C,I,E,Q;wB,E,E,I,C,G,E,M,C,I,C,G,C,I,C,Q;wB,M,C,I,C,K;oB,C;oB,M,C,I,C,O,E,S,E,S,I,O;gB,C;yB,c,C,M,E,Q,E,C;2B,M,C,S,C,c,C,I,C,M,E,Q,E,C;wB,M,G,e,C,M;wB,E,E,M,K,I,E,K;oB,C;oB,M,C,M;gB,C;yB,S,C,Q,E,U,E,C;oB,E,E,M,C,U,K,C,a,U,K,I,E,K,C,G,C,S,C,C;oB,Q,C,S,G,M,C,M,C,U,I,U,C,S,E,C;wB,W,E,C;4B,K,E,Q;4B,Q,E,I;4B,Y,E,I;wB,C;oB,C;oB,E,E,U,E,e,C,Q,E,U;gB,C;yB,e,C,E,E,E,E,C;oB,e,G,M,C,c,I,Q,C,e,C,C,E,C,E,C;wB,C,C,S,G,C;wB,M,C,C;oB,C;oB,M,C,e,C,E,E,E;gB,C;yB,Y,C,O,E,C;oB,G,C,yB,G,yB;oB,M,C,Q,C,oB,G,C;wB,G,C,K,G,e,C,O,G,M;wB,E,E,yB,E,C;4B,G,C,S,G,e,C,I,E,W;4B,M,G,O,C,S,C,K,E,S,E,S;wB,C,M,M,G,K,C,K,C,I,E,S;wB,M,C,0B,C,I,E,M;oB,C;gB,C;yB,0B,C,I,E,I,E,C;oB,E,E,I,K,O,C,I,M,C,W,M,C,I,K,C,Y,M,C,I;yB,E,E,I,K,I,C,C,E,K,C,G,C,S,C,C;oB,M,C,sB,C,I;gB,C;yB,sB,C,I,E,C;oB,E,E,I,K,I,C,C,E,K,C,G,C,c,C,C;oB,M,C,I;gB,C;yB,yB,G,C;oB,E,E,M,C,O,K,C,e,O,C,S,E,M,C,K;oB,E,E,O,C,S,C,I,E,M,C,K;oB,E,E,M,C,K,K,C,W,M,C,I;oB,G,C,C;wB,O,C,S,C,O,C,I,C,O,C,S,C,O,E,C,C,E,Q,G,C;wB,C;wB,M,C,I;oB,C,C,K,E,C,E,C;wB,M,C,K;oB,C;gB,C;yB,e,C,E,E,C;oB,e,G,M,C,c,G,M,C,c,G,Q,C,e,C,C,E,C;wB,M,C,C,C,S,I,M,C,c,C,C;oB,C;oB,M,C,e,C,E;gB,C;gBAEA,EAEA,AAFA;;CAEA,AAFA,EAEA,CACqBA,GAAAA,CAAAA,aAAAA,GAAAA,EAAAA,AAAAA,SAAAA,AAAAA,EAAAA,CAAAA,QAAAA,CAAAA,SAAAA,EAAAA,CAAAA;oB,S,C,Y,E,S;oB,G,C,M,G,Y,C,Y;oBACjB,EAIJ,AAJI;;;;GAIJ,AAJI,EAIJ,UACI,YAAA,CAAYlM,MAAZ,EAAoB,CAApB;wBAAoB,GAAA,CAAA,KAAA;wBAAA,eAAA,CAAA,IAAA,EAAA,YAAA;wBAChB,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAMA,MAAN;wBACA,EAAA,AAAA,WAAA,AAAA,EAAA,CACA,KAAA,CAAKA,MAAL,GAAcA,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KA,MAAzB;4BAEP,CAAA;wB,C;wB,C;4B,G,E,C;4BAQD,KAAA,EAAA,QAAA,CAAA,OAAA,CAAQa,KAAR,EAAe,CAAf;gCACI,EAAA,AAAA,0DAAA;gCACA,EAAA,AAAA,6BAAA;gCACA,IAAA,CAAKV,OAAL,GAAe,IAAA,CAAKnB,KAAL,CAAW6B,KAAX,GAAmBA,KAAlC;4BACH,CAAA;wB,C;wB,C;4B,G,E,C;4BAMD,KAAA,EAAA,QAAA,CAAA,OAAA,GAAU,CAAV;gCAAU,GAAA,CAAA,MAAA,GAAA,IAAA;gCACN,IAAA,CAAKd,KAAL;gCACA,IAAA,CAAK5H,KAAL;gCACA,IAAA,CAAK+K,SAAL,GAAiB,IAAjB,CAEA,CAFA,AAEA,EAFA,AAEA,8BAFA;gCAGApC,MAAM,CAACC,IAAP,CAAY,IAAA,CAAKT,cAAjB,EAAiCjG,OAAjC,CAAyC,QAAA,CAAA7K,EAAE,EAAI,CAA/CsR;oCACI,EAAA,EAAI,MAAI,CAAC9B,KAAT,EACI,MAAI,CAACA,KAAL,CAAWgC,mBAAX,CAA+BxR,EAA/B,EAAmC,MAAI,CAAC8Q,cAAL,CAAoB9Q,EAApB;gCAE1C,CAJD;gCAMA,EAAA,EACI,IAAA,CAAK+D,MAAL,CAAY4P,2BAAZ,IACA,IAAA,CAAKnE,KADL,IAEA,IAAA,CAAKA,KAAL,CAAW5G,UAHf,EAKI,IAAA,CAAK4G,KAAL,CAAW5G,UAAX,CAAsBE,WAAtB,CAAkC,IAAA,CAAK0G,KAAvC;gCAGJ,IAAA,CAAKA,KAAL,GAAa,IAAb;4BACH,CAAA;wB,C;oB,C;oB,M,C,Y;gBAhbqCoE,CAAAA,CAAAA,SAAAA,CAAAA,OAAAA;gB,O,C,O,G,a;gB,M,C,O,G,O,C,O;Y,E,A,C,A,E,C,C;Y,E,A,C,A,E,C,C,sB,M,E,O,G,C;gB,C;gB,M,C,c,C,O,E,C,a,C;oB,K,E,I;gB,C;gB,O,C,O,G,I,C,C;yB,e,C,Q,E,W,E,C;oB,E,I,Q,Y,W,G,K,C,G,C,S,C,C;gB,C;yB,iB,C,M,E,K,E,C;oB,G,C,G,C,C,G,C,E,C,G,K,C,M,E,C,G,C;wB,G,C,U,G,K,C,C;wB,U,C,U,G,U,C,U,I,K;wB,U,C,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gB,O,C,O,G,M;gBC7HL,GAAA,CAAA,IAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,QAAA,AAAA,EAAA,CAAA,CAAA;gBACA,GAAA,CAAA,IAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,QAAA,AAAA,EAAA,CAAA,CAAA;yB,sB,C,G,E,C;oB,M,C,G,I,G,C,U,G,G,G,C;wB,O,E,G;oB,C;gB,C;gBAEA,EAOA,AAPA,wOAOA,AAPA,EAOA,UACwBnG,MAAT,CAAgBoG,MAAhB,EAAwB,CAAxB;oBACX,GAAA,CAAMzM,GAAG,OAAG,IAAA,CAAA,OAAA,EAAQyM,MAAR;oBACZ,GAAA,CAAMxM,GAAG,OAAG,IAAA,CAAA,OAAA,EAAQwM,MAAR;oBACZ,MAAA,EAAQxM,GAAD,GAAOD,GAAP,IAAcC,GAAd,GAAoBD,GAA3B;gBACH,CAAA;gB,M,C,O,G,O,C,O;Y,E,A,C,A,E,C,C;Y,E,A,C,A,E,C,C,uB,M,E,O,G,C;gB,C;gB,M,C,c,C,O,E,C,a,C;oB,K,E,I;gB,C;gB,O,C,O,G,K;gBCfD,EAOA,AAPA;;;;;;;CAOA,AAPA,EAOA,UACwB9B,KAAT,CAAeyI,GAAf,EAAoB1G,GAApB,EAAyBD,GAAzB,EAA8B,CAA9B;oBACX,MAAA,CAAOxF,IAAI,CAACyF,GAAL,CAASzF,IAAI,CAACwF,GAAL,CAASC,GAAT,EAAc0G,GAAd,GAAoB3G,GAA7B;gBACV,CAAA;gB,M,C,O,G,O,C,O;Y,E,A,C,A,E,C,C;Y,E,A,C,A,E,C,C,uB,M,E,O,E,mB,G,C;gB,C;gB,M,C,c,C,O,E,C,a,C;oB,K,E,I;gB,C;gB,O,C,O,G,S;gBCND,GAAA,CAAA,SAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,aAAA,AAAA,EAAA,CAAA,CAAA;yB,sB,C,G,E,C;oB,M,C,G,I,G,C,U,G,G,G,C;wB,O,E,G;oB,C;gB,C;yB,e,C,Q,E,W,E,C;oB,E,I,Q,Y,W,G,K,C,G,C,S,C,C;gB,C;yB,iB,C,M,E,K,E,C;oB,G,C,G,C,C,G,C,E,C,G,K,C,M,E,C,G,C;wB,G,C,U,G,K,C,C;wB,U,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C,A,E,C,C;Y,E,A,C,A,E,C,C,uB,uB,E,O,E,mB,G,C;gB,C;gB,M,C,c,C,O,E,C,a,C;oB,K,E,I;gB,C;gB,M,C,c,C,O,E,C,Q,C;oB,U,E,I;oB,G,E,Q,C,G,G,C;wB,M,C,M,C,O;oB,C;gB,C;gB,M,C,c,C,O,E,C,M,C;oB,U,E,I;oB,G,E,Q,C,G,G,C;wB,M,C,I,C,O;oB,C;gB,C;gB,M,C,c,C,O,E,C,M,C;oB,U,E,I;oB,G,E,Q,C,G,G,C;wB,M,C,I,C,O;oB,C;gB,C;gB,M,C,c,C,O,E,C,S,C;oB,U,E,I;oB,G,E,Q,C,G,G,C;wB,M,C,O,C,O;oB,C;gB,C;gB,M,C,c,C,O,E,C,W,C;oB,U,E,I;oB,G,E,Q,C,G,G,C;wB,M,C,S,C,O;oB,C;gB,C;gB,M,C,c,C,O,E,C,Q,C;oB,U,E,I;oB,G,E,Q,C,G,G,C;wB,M,C,M,C,O;oB,C;gB,C;gB,M,C,c,C,O,E,C,wB,C;oB,U,E,I;oB,G,E,Q,C,G,G,C;wB,M,C,sB,C,O;oB,C;gB,C;gB,M,C,c,C,O,E,C,Q,C;oB,U,E,I;oB,G,E,Q,C,G,G,C;wB,M,C,M,C,O;oB,C;gB,C;gB,M,C,c,C,O,E,C,W,C;oB,U,E,I;oB,G,E,Q,C,G,G,C;wB,M,C,S,C,O;oB,C;gB,C;gB,M,C,c,C,O,E,C,e,C;oB,U,E,I;oB,G,E,Q,C,G,G,C;wB,M,C,a,C,O;oB,C;gB,C;gB,M,C,c,C,O,E,C,Y,C;oB,U,E,I;oB,G,E,Q,C,G,G,C;wB,M,C,M,C,O;oB,C;gB,C;gB,M,C,c,C,O,E,C,Q,C;oB,U,E,I;oB,G,E,Q,C,G,G,C;wB,M,C,M,C,O;oB,C;gB,C;gB,M,C,c,C,O,E,C,kB,C;oB,U,E,I;oB,G,E,Q,C,G,G,C;wB,M,C,Y,C,O;oB,C;gB,C;gB,M,C,c,C,O,E,C,oB,C;oB,U,E,I;oB,G,E,Q,C,G,G,C;wB,M,C,Y,C,O;oB,C;gB,C;gBCrBD,GAAA,CAAA,MAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,WAAA,AAAA,EAAA,CAAA,CAAA;gBACA,GAAA,CAAA,IAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,QAAA,AAAA,EAAA,CAAA,CAAA;gBACA,GAAA,CAAA,IAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,QAAA,AAAA,EAAA,CAAA,CAAA;gBACA,GAAA,CAAA,OAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,WAAA,AAAA,EAAA,CAAA,CAAA;gBACA,GAAA,CAAA,SAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,aAAA,AAAA,EAAA,CAAA,CAAA;gBACA,GAAA,CAAA,MAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,UAAA,AAAA,EAAA,CAAA,CAAA;gBACA,GAAA,CAAA,sBAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,4BAAA,AAAA,EAAA,CAAA,CAAA;gBACA,GAAA,CAAA,MAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,UAAA,AAAA,EAAA,CAAA,CAAA;gBACA,GAAA,CAAA,SAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,WAAA,AAAA,EAAA,CAAA,CAAA;gBACA,GAAA,CAAA,aAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,kBAAA,AAAA,EAAA,CAAA,CAAA;gBACA,GAAA,CAAA,MAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,UAAA,AAAA,EAAA,CAAA,CAAA;gBACA,GAAA,CAAA,MAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,UAAA,AAAA,EAAA,CAAA,CAAA;gBACA,GAAA,CAAA,YAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,gBAAA,AAAA,EAAA,CAAA,CAAA;gBACA,GAAA,CAAA,YAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,iBAAA,AAAA,EAAA,CAAA,CAAA;yB,sB,C,G,E,C;oB,M,C,G,I,G,C,U,G,G,G,C;wB,O,E,G;oB,C;gB,C;Y,E,A,C,A,E,C,C;Y,E,A,C,A,E,C,C,qB,M,E,O,G,C;gB,C;gB,M,C,c,C,O,E,C,a,C;oB,K,E,I;gB,C;gB,O,C,O,G,G;gBCbA,EAMA,AANA;;;;;;CAMA,AANA,EAMA,UACwBrQ,GAAT,CAAayM,MAAb,EAAqB,CAArB;oBACX,GAAA,CAAI6D,OAAO,IAAI3F,QAAf;oBACAtB,MAAM,CAACC,IAAP,CAAYmD,MAAZ,EAAoB7J,OAApB,CAA4B,QAAA,CAAA5H,CAAC,EAAI,CAAjCqO;wBACI,EAAA,EAAIoD,MAAM,CAACzR,CAAD,IAAMsV,OAAhB,EACIA,OAAO,GAAG7D,MAAM,CAACzR,CAAD;oBAEvB,CAJD;oBAKA,MAAA,CAAOsV,OAAP;gBACH,CAAA;gB,M,C,O,G,O,C,O;Y,E,A,C,A,E,C,C;Y,E,A,C,A,E,C,C,qB,M,E,O,G,C;gB,C;gB,M,C,c,C,O,E,C,a,C;oB,K,E,I;gB,C;gB,O,C,O,G,G;gBCfD,EAMA,AANA;;;;;;CAMA,AANA,EAMA,UACwBrQ,GAAT,CAAawM,MAAb,EAAqB,CAArB;oBACX,GAAA,CAAI8D,QAAQ,GAAGC,MAAM,CAAC7F,QAAD;oBACrBtB,MAAM,CAACC,IAAP,CAAYmD,MAAZ,EAAoB7J,OAApB,CAA4B,QAAA,CAAA5H,CAAC,EAAI,CAAjCqO;wBACI,EAAA,EAAIoD,MAAM,CAACzR,CAAD,IAAMuV,QAAhB,EACIA,QAAQ,GAAG9D,MAAM,CAACzR,CAAD;oBAExB,CAJD;oBAKA,MAAA,CAAOuV,QAAP;gBACH,CAAA;gB,M,C,O,G,O,C,O;Y,E,A,C,A,E,C,C;Y,E,A,C,A,E,C,C,0B,M,E,O,G,C;gB,C;gB,M,C,c,C,O,E,C,a,C;oB,K,E,I;gB,C;gB,O,C,O,G,I,C,C;yB,e,C,Q,E,W,E,C;oB,E,I,Q,Y,W,G,K,C,G,C,S,C,C;gB,C;yB,iB,C,M,E,K,E,C;oB,G,C,G,C,C,G,C,E,C,G,K,C,M,E,C,G,C;wB,G,C,U,G,K,C,C;wB,U,C,U,G,U,C,U,I,K;wB,U,C,Y,G,I;wB,E,E,C,U,U,E,U,C,Q,G,I;wB,M,C,c,C,M,E,U,C,G,E,U;oB,C;gB,C;yB,Y,C,W,E,U,E,W,E,C;oB,E,E,U,E,iB,C,W,C,S,E,U;oB,E,E,W,E,iB,C,W,E,W;oB,M,C,W;gB,C;gBCfD,EAKA,AALA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EAFAA,AAEA,QAFAA;oBAGAA,eAAe,CAACG,MAAhB;oBACAL,GAAG,CAACK,MAAJ;gBACH,CAAA;gB,M,C,O,G,O,C,O;Y,E,A,C,A,E,C,C;Y,E,A,C,A,E,C,C,uB,M,E,O,G,C;gB,C;gB,M,C,c,C,O,E,C,a,C;oB,K,E,I;gB,C;gB,O,C,O,G,K;gBClCD,EAOA,AAPA;;;;;;;CAOA,AAPA,EAOA,UACwB1W,KAAT,CAAeF,EAAf,EAAmBC,MAAnB,EAA2B,CAA3B;oBACXgN,MAAM,CAACC,IAAP,CAAYjN,MAAZ,EAAoBuG,OAApB,CAA4B,QAAA,CAAA0O,IAAI,EAAI,CAApCjI;wBACI,EAAA,EAAIjN,EAAE,CAACE,KAAH,CAASgV,IAAT,MAAmBjV,MAAM,CAACiV,IAAD,GACzBlV,EAAE,CAACE,KAAH,CAASgV,IAAT,IAAiBjV,MAAM,CAACiV,IAAD;oBAE9B,CAJD;oBAKA,MAAA,CAAOlV,EAAP;gBACH,CAAA;gB,M,C,O,G,O,C,O;Y,E,A,C,A,E,C,C;Y,E,A,C,A,E,C,C,uB,M,E,O,E,mB,G,C;gB,C;yB,O,C,I,E,C;oB,E,E,M,C,M,K,C,a,M,C,M,C,Q,K,C,S,O,G,Q,C,O,C,G,E,C;wB,M,C,M,C,G;oB,C;yB,O,G,Q,C,O,C,G,E,C;wB,M,C,G,I,M,C,M,K,C,a,G,C,W,K,M,I,G,K,M,C,S,G,C,U,M,C,G;oB,C;oB,M,C,O,C,I;gB,C;gB,M,C,c,C,O,E,C,a,C;oB,K,E,I;gB,C;gB,O,C,O,G,I,C,C;gBCfD,GAAA,CAAA,IAAA,GAAA,uBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,SAAA,AAAA,EAAA,CAAA,CAAA;gBACA,GAAA,CAAA,OAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,uBAAA,AAAA,EAAA,CAAA,CAAA;gBACA,GAAA,CAAA,SAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,aAAA,AAAA,EAAA,CAAA,CAAA;gBACA,GAAA,CAAA,aAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,iBAAA,AAAA,EAAA,CAAA,CAAA;gBACA,GAAA,CAAA,UAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,cAAA,AAAA,EAAA,CAAA,CAAA;gBACA,GAAA,CAAA,qBAAA,GAAA,sBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,0BAAA,AAAA,EAAA,CAAA,CAAA;yB,sB,C,G,E,C;oB,M,C,G,I,G,C,U,G,G,G,C;wB,O,E,G;oB,C;gB,C;yB,wB,C,Y,E,C;oB,E,E,M,C,O,K,C,W,M,C,I;oB,G,C,iB,G,G,C,O;oB,G,C,gB,G,G,C,O;oB,M,E,wB,G,Q,C,wB,C,W,E,C;wB,M,C,W,G,gB,G,iB;oB,C,E,Y;gB,C;yB,uB,C,G,E,W,E,C;oB,E,G,W,I,G,I,G,C,U,E,M,C,G;oB,E,E,G,K,I,I,O,C,G,M,C,W,M,C,G,K,C,W,M,C,C;wB,O,E,G;oB,C;oB,G,C,K,G,wB,C,W;oB,E,E,K,I,K,C,G,C,G,G,M,C,K,C,G,C,G;oB,G,C,M,G,C;oB,C;oB,G,C,qB,G,M,C,c,I,M,C,wB;oB,G,C,G,C,G,I,G,C,E,E,G,K,C,Y,M,C,S,C,c,C,I,C,G,E,G,G,C;wB,G,C,I,G,qB,G,M,C,wB,C,G,E,G,I,I;wB,E,E,I,K,I,C,G,I,I,C,G,G,M,C,c,C,M,E,G,E,I;6B,M,C,G,I,G,C,G;oB,C;oB,M,C,O,G,G;oB,E,E,K,E,K,C,G,C,G,E,M;oB,M,C,M;gB,C;yB,S,C,Q,E,U,E,C;oB,E,E,M,C,U,K,C,a,U,K,I,E,K,C,G,C,S,C,C;oB,Q,C,S,G,M,C,M,C,U,I,U,C,S,E,C;wB,W,E,C;4B,K,E,Q;4B,Q,E,I;4B,Y,E,I;wB,C;oB,C;oB,E,E,U,E,e,C,Q,E,U;gB,C;yB,e,C,E,E,E,E,C;oB,e,G,M,C,c,I,Q,C,e,C,C,E,C,E,C;wB,C,C,S,G,C;wB,M,C,C;oB,C;oB,M,C,e,C,E,E,E;gB,C;yB,Y,C,O,E,C;oB,G,C,yB,G,yB;oB,M,C,Q,C,oB,G,C;wB,G,C,K,G,e,C,O,G,M;wB,E,E,yB,E,C;4B,G,C,S,G,e,C,I,E,W;4B,M,G,O,C,S,C,K,E,S,E,S;wB,C,M,M,G,K,C,K,C,I,E,S;wB,M,C,0B,C,I,E,M;oB,C;gB,C;yB,0B,C,I,E,I,E,C;oB,E,E,I,K,O,C,I,M,C,W,M,C,I,K,C,Y,M,C,I;yB,E,E,I,K,I,C,C,E,K,C,G,C,S,C,C;oB,M,C,sB,C,I;gB,C;yB,sB,C,I,E,C;oB,E,E,I,K,I,C,C,E,K,C,G,C,c,C,C;oB,M,C,I;gB,C;yB,yB,G,C;oB,E,E,M,C,O,K,C,e,O,C,S,E,M,C,K;oB,E,E,O,C,S,C,I,E,M,C,K;oB,E,E,M,C,K,K,C,W,M,C,I;oB,G,C,C;wB,O,C,S,C,O,C,I,C,O,C,S,C,O,E,C,C,E,Q,G,C;wB,C;wB,M,C,I;oB,C,C,K,E,C,E,C;wB,M,C,K;oB,C;gB,C;yB,e,C,G,E,C;oB,e,G,M,C,c,G,M,C,c,G,Q,C,e,C,C,E,C;wB,M,C,C,C,S,I,M,C,c,C,C;oB,C;oB,M,C,e,C,G;gB,C;yB,e,C,Q,E,W,E,C;oB,E,I,Q,Y,W,G,K,C,G,C,S,C,C;gB,C;yB,iB,C,M,E,K,E,C;oB,G,C,G,C,C,G,C,E,C,G,K,C,M,E,C,G,C;wB,G,C,U,G,K,C,C;wB,U,C,U,G,U,C,U,I,K;wB,U,C,Y,G,I;wB,E,E,C,U,U,E,U,C,Q,G,I;wB,M,C,c,C,M,E,U,C,G,E,U;oB,C;gB,C;yB,Y,C,W,E,U,E,W,E,C;oB,E,E,U,E,iB,C,W,C,S,E,U;oB,E,E,W,E,iB,C,W,E,W;oB,M,C,W;gB,C;gBAEA,EAEA,AAFA;;CAEA,AAFA,EAEA,CAEA,EAAA,AAAA,oFAAA,AAAA,EAAA,CACA,EAAA,AAAA,uGAAA,AAAA,EAAA,CACA,EAAA,AAAA,yEAAA,AAAA,EAAA,CACA,EAAA,AAAA,yEAAA,AAAA,EAAA,CACA,EAAA,AAAA,iHAAA,AAAA,EAAA,CACA,EAAA,AAAA,6GAAA,AAAA,EAAA,CACA,EAAA,AAAA,gFAAA,AAAA,EAAA,CAEA,EAsHA,AAtHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAsHA,AAtHA,EAsHA,CAEA,EAcA,AAdA;;;;;;;;;;;;;;CA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Ae,IAAf;gCACH,CAAA;gCACD,EAAA,EAAI,IAAA,CAAK0B,MAAT,EACI,IAAA,CAAKA,MAAL,CAAY5R,OAAZ;gCAEJ,IAAA,CAAKiS,WAAL,GAAmB,IAAnB;gCACA,IAAA,CAAKC,OAAL,GAAe,KAAf;gCACA,IAAA,CAAKP,WAAL,GAAmB,IAAnB;4BACH,CAAA;wB,C;oB,C,E,C;wB,C;4B,G,E,C;4B,K,EAh/CD,EAAA,AAAA,WAAA,AAAA,EAAA,CA6DA,EAAA,AAAA,WAAA,AAAA,EAAA,CAOA,EAMJ,AANI;;;;;;KAMJ,AANI,EAMJ,CACI,QAAA,CAAA,MAAA,CAAclZ,MAAd,EAAsB,CAAtB;gCACI,GAAA,CAAM+e,UAAU,GAAG,GAAA,CAAI1H,UAAJ,CAAerX,MAAf;gCACnB,MAAA,CAAO+e,UAAU,CAACpE,IAAX;4BACV,CAAA;wB,C;oB,C;oB,M,C,U;gBA/EmC1a,CAAAA,CAAAA,IAAI,CAACgF,QAALhF;gB,O,C,O,G,W;gBAAnBoX,WAAAA,CAyFV2H,OAAAA,GAAUC,CAzFA5H;gBAAAA,WAAAA,CA8GVpX,IAAAA,GAAOA,IA9GGoX;gB,M,C,O,G,O,C,O;Y,E,A,C,A,E,C,C;Y,E,A,C,A,E,C,C,qB,M,E,O,E,mB,G,C;gB,C;yB,O,C,I,E,C;oB,E,E,M,C,M,K,C,a,M,C,M,C,Q,K,C,S,O,G,Q,C,O,C,G,E,C;wB,M,C,M,C,G;oB,C;yB,O,G,Q,C,O,C,G,E,C;wB,M,C,G,I,M,C,M,K,C,a,G,C,W,K,M,I,G,K,M,C,S,G,C,U,M,C,G;oB,C;oB,M,C,O,C,I;gB,C;gB,M,C,c,C,O,E,C,a,C;oB,K,E,I;gB,C;gB,O,C,O,G,I,C,C;gBClPrB,GAAA,CAAA,IAAA,GAAA,uBAAA,CAAA,mBAAA,CAAA,EAAA,AAAA,SAAA,AAAA,EAAA,CAAA,CAAA;yB,wB,C,Y,E,C;oB,E,E,M,C,O,K,C,W,M,C,I;oB,G,C,iB,G,G,C,O;oB,G,C,gB,G,G,C,O;oB,M,E,wB,G,Q,C,wB,C,W,E,C;wB,M,C,W,G,gB,G,iB;oB,C,E,Y;gB,C;yB,uB,C,G,E,W,E,C;oB,E,G,W,I,G,I,G,C,U,E,M,C,G;oB,E,E,G,K,I,I,O,C,G,M,C,W,M,C,G,K,C,W,M,C,C;wB,O,E,G;oB,C;oB,G,C,K,G,wB,C,W;oB,E,E,K,I,K,C,G,C,G,G,M,C,K,C,G,C,G;oB,G,C,M,G,C;oB,C;oB,G,C,qB,G,M,C,c,I,M,C,wB;oB,G,C,G,C,G,I,G,C,E,E,G,K,C,Y,M,C,S,C,c,C,I,C,G,E,G,G,C;wB,G,C,I,G,qB,G,M,C,wB,C,G,E,G,I,I;wB,E,E,I,K,I,C,G,I,I,C,G,G,M,C,c,C,M,E,G,E,I;6B,M,C,G,I,G,C,G;oB,C;oB,M,C,O,G,G;oB,E,E,K,E,K,C,G,C,G,E,M;oB,M,C,M;gB,C;yB,e,C,G,E,G,E,K,E,C;oB,E,E,G,I,G,E,M,C,c,C,G,E,G,E,C;wB,K,E,K;wB,U,E,I;wB,Y,E,I;wB,Q,E,I;oB,C;yB,G,C,G,I,K;oB,M,C,G;gB,C;yB,e,C,Q,E,W,E,C;oB,E,I,Q,Y,W,G,K,C,G,C,S,C,C;gB,C;yB,iB,C,M,E,K,E,C;oB,G,C,G,C,C,G,C,E,C,G,K,C,M,E,C,G,C;wB,G,C,U,G,K,C,C;wB,U,C,U,G,U,C,U,I,K;wB,U,C,Y,G,I;wB,E,E,C,U,U,E,U,C,Q,G,I;wB,M,C,c,C,M,E,U,C,G,E,U;oB,C;gB,C;yB,Y,C,W,E,U,E,W,E,C;oB,E,E,U,E,iB,C,W,C,S,E,U;oB,E,E,W,E,iB,C,W,E,W;oB,M,C,W;gB,C;yB,S,C,Q,E,U,E,C;oB,E,E,M,C,U,K,C,a,U,K,I,E,K,C,G,C,S,C,C;oB,Q,C,S,G,M,C,M,C,U,I,U,C,S,E,C;wB,W,E,C;4B,K,E,Q;4B,Q,E,I;4B,Y,E,I;wB,C;oB,C;oB,E,E,U,E,e,C,Q,E,U;gB,C;yB,e,C,G,E,E,E,C;oB,e,G,M,C,c,I,Q,C,e,C,C,E,C,E,C;wB,C,C,S,G,C;wB,M,C,C;oB,C;oB,M,C,e,C,G,E,E;gB,C;yB,Y,C,O,E,C;oB,G,C,yB,G,yB;oB,M,C,Q,C,oB,G,C;wB,G,C,K,G,e,C,O,G,M;wB,E,E,yB,E,C;4B,G,C,S,G,e,C,I,E,W;4B,M,G,O,C,S,C,K,E,S,E,S;wB,C,M,M,G,K,C,K,C,I,E,S;wB,M,C,0B,C,I,E,M;oB,C;gB,C;yB,0B,C,I,E,I,E,C;oB,E,E,I,K,O,C,I,M,C,W,M,C,I,K,C,Y,M,C,I;yB,E,E,I,K,I,C,C,E,K,C,G,C,S,C,C;oB,M,C,sB,C,I;gB,C;yB,sB,C,I,E,C;oB,E,E,I,K,I,C,C,E,K,C,G,C,c,C,C;oB,M,C,I;gB,C;yB,yB,G,C;oB,E,E,M,C,O,K,C,e,O,C,S,E,M,C,K;oB,E,E,O,C,S,C,I,E,M,C,K;oB,E,E,M,C,K,K,C,W,M,C,I;oB,G,C,C;wB,O,C,S,C,O,C,I,C,O,C,S,C,O,E,C,C,E,Q,G,C;wB,C;wB,M,C,I;oB,C,C,K,E,C,E,C;wB,M,C,K;oB,C;gB,C;yB,e,C,G,E,C;oB,e,G,M,C,c,G,M,C,c,G,Q,C,e,C,C,E,C;wB,M,C,C,C,S,I,M,C,c,C,C;oB,C;oB,M,C,e,C,G;gB,C;gBAEA,EAAA,AAAA,4DAAA;gBACA,GAAA,CAAM6H,OAAO,GAAG,CAAhB;gBACA,GAAA,CAAMC,MAAM,GAAG,CAAf;gBACA,GAAA,CAAMC,QAAQ,GAAG,CAAjB;gBAEA,EAIA,AAJA;;;;CAIA,AAJA,EAIA,CACqBvP,GAAAA,CAAAA,SAAAA,GAAAA,EAAAA,AAAAA,SAAAA,AAAAA,EAAAA,CAAAA,QAAAA,CAAAA,cAAAA,EAAAA,CAAAA;oB,S,C,Q,E,c;oB,G,C,M,G,Y,C,Q;oBAoFjB,EAIJ,AAJI;;;;GAIJ,AAJI,EAIJ,UACI,QAAA,CAAY7P,MAAZ,EAAoB,CAApB;wBAAoB,GAAA,CAAA,oBAAA,EAAA,YAAA;wBAAA,GAAA,CAAA,KAAA;wBAAA,eAAA,CAAA,IAAA,EAAA,QAAA;wBAChB,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA;wBACA,EAAA,AAAA,WAAA,AAAA,EAAA,CAFgB,KAAA,CArFpBuX,YAqFoB,GArFL,IAqFK;wBAAA,KAAA,CAnFpB8H,mBAmFoB,GAnFE,IAmFF;wBAAA,KAAA,CAjFpBC,cAiFoB,IAAA,oBAAA,GAAA,CAAA;wBAAA,CAAA,EAAA,eAAA,CAAA,oBAAA,EAhFfJ,OAgFe,EAhFL,CAgF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","sources":["Dev/morphaweb/node_modules/@parcel/runtime-browser-hmr/lib/runtime-b6141af4a311ebc3.js","Dev/morphaweb/src/index.js","Dev/morphaweb/node_modules/@parcel/runtime-js/lib/runtime-fc55fad4d1cae955.js","Dev/morphaweb/node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","Dev/morphaweb/node_modules/wavesurfer.js/dist/wavesurfer.js","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/webpack/universalModuleDefinition","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/drawer.canvasentry.js","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/drawer.js","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/drawer.multicanvas.js","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/mediaelement-webaudio.js","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/mediaelement.js","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/peakcache.js","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/absMax.js","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/clamp.js","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/fetch.js","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/frame.js","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/get-id.js","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/index.js","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/max.js","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/min.js","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/observer.js","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/orientation.js","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/prevent-click.js","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/request-animation-frame.js","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/silence-mode.js","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/util/style.js","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/wavesurfer.js","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/src/webaudio.js","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/node_modules/debounce/index.js","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/webpack/bootstrap","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/webpack/before-startup","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/webpack/startup","Dev/morphaweb/node_modules/wavesurfer.js/dist/webpack:/WaveSurfer/webpack/after-startup","Dev/morphaweb/node_modules/@parcel/transformer-js/src/esmodule-helpers.js","Dev/morphaweb/node_modules/wavesurfer.js/src/plugin/markers/index.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"5554dbe369fdef6e\";\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function accept(fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function dispose(fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe\n\n  ws.onmessage = function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      var assets = data.assets.filter(function (asset) {\n        return asset.envHash === HMR_ENV_HASH;\n      }); // Handle HMR Update\n\n      var handled = assets.every(function (asset) {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear();\n        assets.forEach(function (asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var ansiDiagnostic = _step.value;\n          var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n          console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  var errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  var _iterator2 = _createForOfIteratorHelper(diagnostics),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var diagnostic = _step2.value;\n      var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n      errorHTML += \"\\n      <div>\\n        <div style=\\\"font-size: 18px; font-weight: bold; margin-top: 20px;\\\">\\n          \\uD83D\\uDEA8 \".concat(diagnostic.message, \"\\n        </div>\\n        <pre>\").concat(stack, \"</pre>\\n        <div>\\n          \").concat(diagnostic.hints.map(function (hint) {\n        return '<div>💡 ' + hint + '</div>';\n      }).join(''), \"\\n        </div>\\n        \").concat(diagnostic.documentation ? \"<div>\\uD83D\\uDCDD <a style=\\\"color: violet\\\" href=\\\"\".concat(diagnostic.documentation, \"\\\" target=\\\"_blank\\\">Learn more</a></div>\") : '', \"\\n      </div>\\n    \");\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        var oldDeps = modules[asset.id][1];\n\n        for (var dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            var id = oldDeps[dep];\n            var parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      var fn = new Function('require', 'module', 'exports', asset.output);\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    var deps = modules[id][1];\n    var orphans = [];\n\n    for (var dep in deps) {\n      var parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(function (id) {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  var parents = getParents(module.bundle.root, id);\n  var accepted = false;\n\n  while (parents.length > 0) {\n    var v = parents.shift();\n    var a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      var p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push.apply(parents, _toConsumableArray(p));\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","/* import WaveformData from 'waveform-data' */\nimport WaveSurfer from \"wavesurfer.js\"\nimport MarkersPlugin from \"wavesurfer.js/src/plugin/markers\";\n\nconst w = new URL('../assets/walksign.wav',import.meta.url)\nconst playButton = document.querySelector(\"#play\")\nconst pauseButton = document.querySelector(\"#pause\")\n\nvar wavesurfer = WaveSurfer.create({\n    container: '#waveform',\n    waveColor: 'violet',\n    progressColor: 'purple',\n    plugins: [\n        MarkersPlugin.create({\n            markers: [\n                {\n                    time: .5,\n                    label: \"V1\",\n                    color: '#ff990a'\n                },\n                {\n                    time: 1,\n                    label: \"V2\",\n                    color: '#00ffcc',\n                    position: 'top'\n                }\n            ]\n        })\n]    \n});\n\nwavesurfer.load(w.href);\n\nconst play = () => {\n    console.log(\"play\")\n    if(wavesurfer.isPlaying) {\n        wavesurfer.seekTo(0)\n    }\n    wavesurfer.play()\n}\nplayButton.addEventListener('click',play)\n\nconst createMarkers = () => {\n    console.log(wavesurfer)\n}\nwavesurfer.on('ready',createMarkers())\n\n/* \nfetch(w.href)\n    .then(r => r.arrayBuffer())\n    .then(f => {\n        console.log(f)\n        var wavesurfer = WaveformData.create(f);\n    })\n */\n//console.log(f)\n/* const loadFile = async (url) => {\n    const response = await fetch(url)\n    return response.blob()\n}\n try {\n    const f = await loadFile(w.href);\n    var wavesurfer = WaveformData.create(f);\n} catch(err) {\n    throw new Error(err)\n}  */","module.exports = require('./helpers/bundle-url').getBundleURL('7kdtW') + \"walksign.08ac7db9.wav\" + \"?\" + Date.now();","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;",null,"(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = factory();\n})(self, function() {\nreturn ","/**\n * @since 3.0.0\n */\n\nimport style from './util/style';\nimport getId from './util/get-id';\n\n/**\n * The `CanvasEntry` class represents an element consisting of a wave `canvas`\n * and an (optional) progress wave `canvas`.\n *\n * The `MultiCanvas` renderer uses one or more `CanvasEntry` instances to\n * render a waveform, depending on the zoom level.\n */\nexport default class CanvasEntry {\n    constructor() {\n        /**\n         * The wave node\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.wave = null;\n        /**\n         * The wave canvas rendering context\n         *\n         * @type {CanvasRenderingContext2D}\n         */\n        this.waveCtx = null;\n        /**\n         * The (optional) progress wave node\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.progress = null;\n        /**\n         * The (optional) progress wave canvas rendering context\n         *\n         * @type {CanvasRenderingContext2D}\n         */\n        this.progressCtx = null;\n        /**\n         * Start of the area the canvas should render, between 0 and 1\n         *\n         * @type {number}\n         */\n        this.start = 0;\n        /**\n         * End of the area the canvas should render, between 0 and 1\n         *\n         * @type {number}\n         */\n        this.end = 1;\n        /**\n         * Unique identifier for this entry\n         *\n         * @type {string}\n         */\n        this.id = getId(\n            typeof this.constructor.name !== 'undefined'\n                ? this.constructor.name.toLowerCase() + '_'\n                : 'canvasentry_'\n        );\n        /**\n         * Canvas 2d context attributes\n         *\n         * @type {object}\n         */\n        this.canvasContextAttributes = {};\n    }\n\n    /**\n     * Store the wave canvas element and create the 2D rendering context\n     *\n     * @param {HTMLCanvasElement} element The wave `canvas` element.\n     */\n    initWave(element) {\n        this.wave = element;\n        this.waveCtx = this.wave.getContext('2d', this.canvasContextAttributes);\n    }\n\n    /**\n     * Store the progress wave canvas element and create the 2D rendering\n     * context\n     *\n     * @param {HTMLCanvasElement} element The progress wave `canvas` element.\n     */\n    initProgress(element) {\n        this.progress = element;\n        this.progressCtx = this.progress.getContext(\n            '2d',\n            this.canvasContextAttributes\n        );\n    }\n\n    /**\n     * Update the dimensions\n     *\n     * @param {number} elementWidth Width of the entry\n     * @param {number} totalWidth Total width of the multi canvas renderer\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(elementWidth, totalWidth, width, height) {\n        // where the canvas starts and ends in the waveform, represented as a\n        // decimal between 0 and 1\n        this.start = this.wave.offsetLeft / totalWidth || 0;\n        this.end = this.start + elementWidth / totalWidth;\n\n        // set wave canvas dimensions\n        this.wave.width = width;\n        this.wave.height = height;\n        let elementSize = { width: elementWidth + 'px' };\n        style(this.wave, elementSize);\n\n        if (this.hasProgressCanvas) {\n            // set progress canvas dimensions\n            this.progress.width = width;\n            this.progress.height = height;\n            style(this.progress, elementSize);\n        }\n    }\n\n    /**\n     * Clear the wave and progress rendering contexts\n     */\n    clearWave() {\n        // wave\n        this.waveCtx.clearRect(\n            0,\n            0,\n            this.waveCtx.canvas.width,\n            this.waveCtx.canvas.height\n        );\n\n        // progress\n        if (this.hasProgressCanvas) {\n            this.progressCtx.clearRect(\n                0,\n                0,\n                this.progressCtx.canvas.width,\n                this.progressCtx.canvas.height\n            );\n        }\n    }\n\n    /**\n     * Set the fill styles for wave and progress\n     *\n     * @param {string} waveColor Fill color for the wave canvas\n     * @param {?string} progressColor Fill color for the progress canvas\n     */\n    setFillStyles(waveColor, progressColor) {\n        this.waveCtx.fillStyle = waveColor;\n\n        if (this.hasProgressCanvas) {\n            this.progressCtx.fillStyle = progressColor;\n        }\n    }\n\n    /**\n     * Set the canvas transforms for wave and progress\n     *\n     * @param {boolean} vertical Whether to render vertically\n     */\n    applyCanvasTransforms(vertical) {\n        if (vertical) {\n            // Reflect the waveform across the line y = -x\n            this.waveCtx.setTransform(0, 1, 1, 0, 0, 0);\n\n            if (this.hasProgressCanvas) {\n                this.progressCtx.setTransform(0, 1, 1, 0, 0, 0);\n            }\n        }\n    }\n\n    /**\n     * Draw a rectangle for wave and progress\n     *\n     * @param {number} x X start position\n     * @param {number} y Y start position\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     */\n    fillRects(x, y, width, height, radius) {\n        this.fillRectToContext(this.waveCtx, x, y, width, height, radius);\n\n        if (this.hasProgressCanvas) {\n            this.fillRectToContext(\n                this.progressCtx,\n                x,\n                y,\n                width,\n                height,\n                radius\n            );\n        }\n    }\n\n    /**\n     * Draw the actual rectangle on a `canvas` element\n     *\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {number} x X start position\n     * @param {number} y Y start position\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     */\n    fillRectToContext(ctx, x, y, width, height, radius) {\n        if (!ctx) {\n            return;\n        }\n\n        if (radius) {\n            this.drawRoundedRect(ctx, x, y, width, height, radius);\n        } else {\n            ctx.fillRect(x, y, width, height);\n        }\n    }\n\n    /**\n     * Draw a rounded rectangle on Canvas\n     *\n     * @param {CanvasRenderingContext2D} ctx Canvas context\n     * @param {number} x X-position of the rectangle\n     * @param {number} y Y-position of the rectangle\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     *\n     * @return {void}\n     * @example drawRoundedRect(ctx, 50, 50, 5, 10, 3)\n     */\n    drawRoundedRect(ctx, x, y, width, height, radius) {\n        if (height === 0) {\n            return;\n        }\n        // peaks are float values from -1 to 1. Use absolute height values in\n        // order to correctly calculate rounded rectangle coordinates\n        if (height < 0) {\n            height *= -1;\n            y -= height;\n        }\n        ctx.beginPath();\n        ctx.moveTo(x + radius, y);\n        ctx.lineTo(x + width - radius, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n        ctx.lineTo(x + width, y + height - radius);\n        ctx.quadraticCurveTo(\n            x + width,\n            y + height,\n            x + width - radius,\n            y + height\n        );\n        ctx.lineTo(x + radius, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n        ctx.lineTo(x, y + radius);\n        ctx.quadraticCurveTo(x, y, x + radius, y);\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /**\n     * Render the actual wave and progress lines\n     *\n     * @param {number[]} peaks Array with peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLines(peaks, absmax, halfH, offsetY, start, end) {\n        this.drawLineToContext(\n            this.waveCtx,\n            peaks,\n            absmax,\n            halfH,\n            offsetY,\n            start,\n            end\n        );\n\n        if (this.hasProgressCanvas) {\n            this.drawLineToContext(\n                this.progressCtx,\n                peaks,\n                absmax,\n                halfH,\n                offsetY,\n                start,\n                end\n            );\n        }\n    }\n\n    /**\n     * Render the actual waveform line on a `canvas` element\n     *\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {number[]} peaks Array with peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLineToContext(ctx, peaks, absmax, halfH, offsetY, start, end) {\n        if (!ctx) {\n            return;\n        }\n\n        const length = peaks.length / 2;\n        const first = Math.round(length * this.start);\n\n        // use one more peak value to make sure we join peaks at ends -- unless,\n        // of course, this is the last canvas\n        const last = Math.round(length * this.end) + 1;\n\n        const canvasStart = first;\n        const canvasEnd = last;\n        const scale = this.wave.width / (canvasEnd - canvasStart - 1);\n\n        // optimization\n        const halfOffset = halfH + offsetY;\n        const absmaxHalf = absmax / halfH;\n\n        ctx.beginPath();\n        ctx.moveTo((canvasStart - first) * scale, halfOffset);\n\n        ctx.lineTo(\n            (canvasStart - first) * scale,\n            halfOffset - Math.round((peaks[2 * canvasStart] || 0) / absmaxHalf)\n        );\n\n        let i, peak, h;\n        for (i = canvasStart; i < canvasEnd; i++) {\n            peak = peaks[2 * i] || 0;\n            h = Math.round(peak / absmaxHalf);\n            ctx.lineTo((i - first) * scale + this.halfPixel, halfOffset - h);\n        }\n\n        // draw the bottom edge going backwards, to make a single\n        // closed hull to fill\n        let j = canvasEnd - 1;\n        for (j; j >= canvasStart; j--) {\n            peak = peaks[2 * j + 1] || 0;\n            h = Math.round(peak / absmaxHalf);\n            ctx.lineTo((j - first) * scale + this.halfPixel, halfOffset - h);\n        }\n\n        ctx.lineTo(\n            (canvasStart - first) * scale,\n            halfOffset -\n                Math.round((peaks[2 * canvasStart + 1] || 0) / absmaxHalf)\n        );\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /**\n     * Destroys this entry\n     */\n    destroy() {\n        this.waveCtx = null;\n        this.wave = null;\n\n        this.progressCtx = null;\n        this.progress = null;\n    }\n\n    /**\n     * Return image data of the wave `canvas` element\n     *\n     * When using a `type` of `'blob'`, this will return a `Promise` that\n     * resolves with a `Blob` instance.\n     *\n     * @param {string} format='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n     * @return {string|Promise} When using the default `'dataURL'` `type` this\n     * returns a data URL. When using the `'blob'` `type` this returns a\n     * `Promise` that resolves with a `Blob` instance.\n     */\n    getImage(format, quality, type) {\n        if (type === 'blob') {\n            return new Promise(resolve => {\n                this.wave.toBlob(resolve, format, quality);\n            });\n        } else if (type === 'dataURL') {\n            return this.wave.toDataURL(format, quality);\n        }\n    }\n}\n","import * as util from './util';\n\n/**\n * Parent class for renderers\n *\n * @extends {Observer}\n */\nexport default class Drawer extends util.Observer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super();\n\n        this.container = util.withOrientation(container, params.vertical);\n        /**\n         * @type {WavesurferParams}\n         */\n        this.params = params;\n        /**\n         * The width of the renderer\n         * @type {number}\n         */\n        this.width = 0;\n        /**\n         * The height of the renderer\n         * @type {number}\n         */\n        this.height = params.height * this.params.pixelRatio;\n\n        this.lastPos = 0;\n        /**\n         * The `<wave>` element which is added to the container\n         * @type {HTMLElement}\n         */\n        this.wrapper = null;\n    }\n\n    /**\n     * Alias of `util.style`\n     *\n     * @param {HTMLElement} el The element that the styles will be applied to\n     * @param {Object} styles The map of propName: attribute, both are used as-is\n     * @return {HTMLElement} el\n     */\n    style(el, styles) {\n        return util.style(el, styles);\n    }\n\n    /**\n     * Create the wrapper `<wave>` element, style it and set up the events for\n     * interaction\n     */\n    createWrapper() {\n        this.wrapper = util.withOrientation(\n            this.container.appendChild(document.createElement('wave')),\n            this.params.vertical\n        );\n\n        this.style(this.wrapper, {\n            display: 'block',\n            position: 'relative',\n            userSelect: 'none',\n            webkitUserSelect: 'none',\n            height: this.params.height + 'px'\n        });\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: '100%',\n                overflowX: this.params.hideScrollbar ? 'hidden' : 'auto',\n                overflowY: 'hidden'\n            });\n        }\n\n        this.setupWrapperEvents();\n    }\n\n    /**\n     * Handle click event\n     *\n     * @param {Event} e Click event\n     * @param {?boolean} noPrevent Set to true to not call `e.preventDefault()`\n     * @return {number} Playback position from 0 to 1\n     */\n    handleEvent(e, noPrevent) {\n        !noPrevent && e.preventDefault();\n\n        const clientX = util.withOrientation(\n            e.targetTouches ? e.targetTouches[0] : e,\n            this.params.vertical\n        ).clientX;\n        const bbox = this.wrapper.getBoundingClientRect();\n\n        const nominalWidth = this.width;\n        const parentWidth = this.getWidth();\n        const progressPixels = this.getProgressPixels(bbox, clientX);\n\n        let progress;\n        if (!this.params.fillParent && nominalWidth < parentWidth) {\n            progress = progressPixels *\n                (this.params.pixelRatio / nominalWidth) || 0;\n        } else {\n            progress = (progressPixels + this.wrapper.scrollLeft) /\n                this.wrapper.scrollWidth || 0;\n        }\n\n        return util.clamp(progress, 0, 1);\n    }\n\n    getProgressPixels(wrapperBbox, clientX) {\n        if (this.params.rtl) {\n            return wrapperBbox.right - clientX;\n        } else {\n            return clientX - wrapperBbox.left;\n        }\n    }\n\n    setupWrapperEvents() {\n        this.wrapper.addEventListener('click', e => {\n            const orientedEvent = util.withOrientation(e, this.params.vertical);\n            const scrollbarHeight = this.wrapper.offsetHeight -\n                  this.wrapper.clientHeight;\n\n            if (scrollbarHeight !== 0) {\n                // scrollbar is visible.  Check if click was on it\n                const bbox = this.wrapper.getBoundingClientRect();\n                if (orientedEvent.clientY >= bbox.bottom - scrollbarHeight) {\n                    // ignore mousedown as it was on the scrollbar\n                    return;\n                }\n            }\n\n            if (this.params.interact) {\n                this.fireEvent('click', e, this.handleEvent(e));\n            }\n        });\n\n        this.wrapper.addEventListener('dblclick', e => {\n            if (this.params.interact) {\n                this.fireEvent('dblclick', e, this.handleEvent(e));\n            }\n        });\n\n        this.wrapper.addEventListener('scroll', e =>\n            this.fireEvent('scroll', e)\n        );\n    }\n\n    /**\n     * Draw peaks on the canvas\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} length The width of the area that should be drawn\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawPeaks(peaks, length, start, end) {\n        if (!this.setWidth(length)) {\n            this.clearWave();\n        }\n\n        this.params.barWidth\n            ? this.drawBars(peaks, 0, start, end)\n            : this.drawWave(peaks, 0, start, end);\n    }\n\n    /**\n     * Scroll to the beginning\n     */\n    resetScroll() {\n        if (this.wrapper !== null) {\n            this.wrapper.scrollLeft = 0;\n        }\n    }\n\n    /**\n     * Recenter the view-port at a certain percent of the waveform\n     *\n     * @param {number} percent Value from 0 to 1 on the waveform\n     */\n    recenter(percent) {\n        const position = this.wrapper.scrollWidth * percent;\n        this.recenterOnPosition(position, true);\n    }\n\n    /**\n     * Recenter the view-port on a position, either scroll there immediately or\n     * in steps of 5 pixels\n     *\n     * @param {number} position X-offset in pixels\n     * @param {boolean} immediate Set to true to immediately scroll somewhere\n     */\n    recenterOnPosition(position, immediate) {\n        const scrollLeft = this.wrapper.scrollLeft;\n        const half = ~~(this.wrapper.clientWidth / 2);\n        const maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n        let target = position - half;\n        let offset = target - scrollLeft;\n\n        if (maxScroll == 0) {\n            // no need to continue if scrollbar is not there\n            return;\n        }\n\n        // if the cursor is currently visible...\n        if (!immediate && -half <= offset && offset < half) {\n            // set rate at which waveform is centered\n            let rate = this.params.autoCenterRate;\n\n            // make rate depend on width of view and length of waveform\n            rate /= half;\n            rate *= maxScroll;\n\n            offset = Math.max(-rate, Math.min(rate, offset));\n            target = scrollLeft + offset;\n        }\n\n        // limit target to valid range (0 to maxScroll)\n        target = Math.max(0, Math.min(maxScroll, target));\n        // no use attempting to scroll if we're not moving\n        if (target != scrollLeft) {\n            this.wrapper.scrollLeft = target;\n        }\n    }\n\n    /**\n     * Get the current scroll position in pixels\n     *\n     * @return {number} Horizontal scroll position in pixels\n     */\n    getScrollX() {\n        let x = 0;\n        if (this.wrapper) {\n            const pixelRatio = this.params.pixelRatio;\n            x = Math.round(this.wrapper.scrollLeft * pixelRatio);\n\n            // In cases of elastic scroll (safari with mouse wheel) you can\n            // scroll beyond the limits of the container\n            // Calculate and floor the scrollable extent to make sure an out\n            // of bounds value is not returned\n            // Ticket #1312\n            if (this.params.scrollParent) {\n                const maxScroll = ~~(\n                    this.wrapper.scrollWidth * pixelRatio -\n                    this.getWidth()\n                );\n                x = Math.min(maxScroll, Math.max(0, x));\n            }\n        }\n        return x;\n    }\n\n    /**\n     * Get the width of the container\n     *\n     * @return {number} The width of the container\n     */\n    getWidth() {\n        return Math.round(this.container.clientWidth * this.params.pixelRatio);\n    }\n\n    /**\n     * Set the width of the container\n     *\n     * @param {number} width The new width of the container\n     * @return {boolean} Whether the width of the container was updated or not\n     */\n    setWidth(width) {\n        if (this.width == width) {\n            return false;\n        }\n\n        this.width = width;\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: ''\n            });\n        } else {\n            const newWidth = ~~(this.width / this.params.pixelRatio) + 'px';\n            this.style(this.wrapper, {\n                width: newWidth\n            });\n        }\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Set the height of the container\n     *\n     * @param {number} height The new height of the container.\n     * @return {boolean} Whether the height of the container was updated or not\n     */\n    setHeight(height) {\n        if (height == this.height) {\n            return false;\n        }\n        this.height = height;\n\n        this.style(this.wrapper, {\n            height: ~~(this.height / this.params.pixelRatio) + 'px'\n        });\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Called by wavesurfer when progress should be rendered\n     *\n     * @param {number} progress From 0 to 1\n     */\n    progress(progress) {\n        const minPxDelta = 1 / this.params.pixelRatio;\n        const pos = Math.round(progress * this.width) * minPxDelta;\n\n        if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\n            this.lastPos = pos;\n\n            if (this.params.scrollParent && this.params.autoCenter) {\n                const newPos = ~~(this.wrapper.scrollWidth * progress);\n                this.recenterOnPosition(\n                    newPos,\n                    this.params.autoCenterImmediately\n                );\n            }\n\n            this.updateProgress(pos);\n        }\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        this.unAll();\n        if (this.wrapper) {\n            if (this.wrapper.parentNode == this.container.domElement) {\n                this.container.removeChild(this.wrapper.domElement);\n            }\n            this.wrapper = null;\n        }\n    }\n\n    /* Renderer-specific methods */\n\n    /**\n     * Called after cursor related params have changed.\n     *\n     * @abstract\n     */\n    updateCursor() {}\n\n    /**\n     * Called when the size of the container changes so the renderer can adjust\n     *\n     * @abstract\n     */\n    updateSize() {}\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @abstract\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawBars(peaks, channelIndex, start, end) {}\n\n    /**\n     * Draw a waveform\n     *\n     * @abstract\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawWave(peaks, channelIndex, start, end) {}\n\n    /**\n     * Clear the waveform\n     *\n     * @abstract\n     */\n    clearWave() {}\n\n    /**\n     * Render the new progress\n     *\n     * @abstract\n     * @param {number} position X-Offset of progress position in pixels\n     */\n    updateProgress(position) {}\n}\n","import Drawer from './drawer';\nimport * as util from './util';\nimport CanvasEntry from './drawer.canvasentry';\n\n/**\n * MultiCanvas renderer for wavesurfer. Is currently the default and sole\n * builtin renderer.\n *\n * A `MultiCanvas` consists of one or more `CanvasEntry` instances, depending\n * on the zoom level.\n */\nexport default class MultiCanvas extends Drawer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super(container, params);\n\n        /**\n         * @type {number}\n         */\n        this.maxCanvasWidth = params.maxCanvasWidth;\n\n        /**\n         * @type {number}\n         */\n        this.maxCanvasElementWidth = Math.round(\n            params.maxCanvasWidth / params.pixelRatio\n        );\n\n        /**\n         * Whether or not the progress wave is rendered. If the `waveColor`\n         * and `progressColor` are the same color it is not.\n         *\n         * @type {boolean}\n         */\n        this.hasProgressCanvas = params.waveColor != params.progressColor;\n\n        /**\n         * @type {number}\n         */\n        this.halfPixel = 0.5 / params.pixelRatio;\n\n        /**\n         * List of `CanvasEntry` instances.\n         *\n         * @type {Array}\n         */\n        this.canvases = [];\n\n        /**\n         * @type {HTMLElement}\n         */\n        this.progressWave = null;\n\n        /**\n         * Class used to generate entries.\n         *\n         * @type {function}\n         */\n        this.EntryClass = CanvasEntry;\n\n        /**\n         * Canvas 2d context attributes.\n         *\n         * @type {object}\n         */\n        this.canvasContextAttributes = params.drawingContextAttributes;\n\n        /**\n         * Overlap added between entries to prevent vertical white stripes\n         * between `canvas` elements.\n         *\n         * @type {number}\n         */\n        this.overlap = 2 * Math.ceil(params.pixelRatio / 2);\n\n        /**\n         * The radius of the wave bars. Makes bars rounded\n         *\n         * @type {number}\n         */\n        this.barRadius = params.barRadius || 0;\n\n        /**\n         * Whether to render the waveform vertically. Defaults to false.\n         *\n         * @type {boolean}\n         */\n        this.vertical = params.vertical;\n    }\n\n    /**\n     * Initialize the drawer\n     */\n    init() {\n        this.createWrapper();\n        this.createElements();\n    }\n\n    /**\n     * Create the canvas elements and style them\n     *\n     */\n    createElements() {\n        this.progressWave = util.withOrientation(\n            this.wrapper.appendChild(document.createElement('wave')),\n            this.params.vertical\n        );\n        this.style(this.progressWave, {\n            position: 'absolute',\n            zIndex: 3,\n            left: 0,\n            top: 0,\n            bottom: 0,\n            overflow: 'hidden',\n            width: '0',\n            display: 'none',\n            boxSizing: 'border-box',\n            borderRightStyle: 'solid',\n            pointerEvents: 'none'\n        });\n\n        this.addCanvas();\n        this.updateCursor();\n    }\n\n    /**\n     * Update cursor style\n     */\n    updateCursor() {\n        this.style(this.progressWave, {\n            borderRightWidth: this.params.cursorWidth + 'px',\n            borderRightColor: this.params.cursorColor\n        });\n    }\n\n    /**\n     * Adjust to the updated size by adding or removing canvases\n     */\n    updateSize() {\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n        const requiredCanvases = Math.ceil(\n            totalWidth / (this.maxCanvasElementWidth + this.overlap)\n        );\n\n        // add required canvases\n        while (this.canvases.length < requiredCanvases) {\n            this.addCanvas();\n        }\n\n        // remove older existing canvases, if any\n        while (this.canvases.length > requiredCanvases) {\n            this.removeCanvas();\n        }\n\n        let canvasWidth = this.maxCanvasWidth + this.overlap;\n        const lastCanvas = this.canvases.length - 1;\n        this.canvases.forEach((entry, i) => {\n            if (i == lastCanvas) {\n                canvasWidth = this.width - this.maxCanvasWidth * lastCanvas;\n            }\n            this.updateDimensions(entry, canvasWidth, this.height);\n\n            entry.clearWave();\n        });\n    }\n\n    /**\n     * Add a canvas to the canvas list\n     *\n     */\n    addCanvas() {\n        const entry = new this.EntryClass();\n        entry.canvasContextAttributes = this.canvasContextAttributes;\n        entry.hasProgressCanvas = this.hasProgressCanvas;\n        entry.halfPixel = this.halfPixel;\n        const leftOffset = this.maxCanvasElementWidth * this.canvases.length;\n\n        // wave\n        let wave = util.withOrientation(\n            this.wrapper.appendChild(document.createElement('canvas')),\n            this.params.vertical\n        );\n        this.style(wave, {\n            position: 'absolute',\n            zIndex: 2,\n            left: leftOffset + 'px',\n            top: 0,\n            bottom: 0,\n            height: '100%',\n            pointerEvents: 'none'\n        });\n        entry.initWave(wave);\n\n        // progress\n        if (this.hasProgressCanvas) {\n            let progress = util.withOrientation(\n                this.progressWave.appendChild(document.createElement('canvas')),\n                this.params.vertical\n            );\n            this.style(progress, {\n                position: 'absolute',\n                left: leftOffset + 'px',\n                top: 0,\n                bottom: 0,\n                height: '100%'\n            });\n            entry.initProgress(progress);\n        }\n\n        this.canvases.push(entry);\n    }\n\n    /**\n     * Pop single canvas from the list\n     *\n     */\n    removeCanvas() {\n        let lastEntry = this.canvases[this.canvases.length - 1];\n\n        // wave\n        lastEntry.wave.parentElement.removeChild(lastEntry.wave.domElement);\n\n        // progress\n        if (this.hasProgressCanvas) {\n            lastEntry.progress.parentElement.removeChild(lastEntry.progress.domElement);\n        }\n\n        // cleanup\n        if (lastEntry) {\n            lastEntry.destroy();\n            lastEntry = null;\n        }\n\n        this.canvases.pop();\n    }\n\n    /**\n     * Update the dimensions of a canvas element\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(entry, width, height) {\n        const elementWidth = Math.round(width / this.params.pixelRatio);\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n\n        // update canvas dimensions\n        entry.updateDimensions(elementWidth, totalWidth, width, height);\n\n        // style element\n        this.style(this.progressWave, { display: 'block' });\n    }\n\n    /**\n     * Clear the whole multi-canvas\n     */\n    clearWave() {\n        util.frame(() => {\n            this.canvases.forEach(entry => entry.clearWave());\n        })();\n    }\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0. Must be an integer.\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     * @returns {void}\n     */\n    drawBars(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks, channelIndex: ch }) => {\n                // if drawBars was called within ws.empty we don't pass a start and\n                // don't want anything to happen\n                if (start === undefined) {\n                    return;\n                }\n                // Skip every other value if there are negatives.\n                const peakIndexScale = hasMinVals ? 2 : 1;\n                const length = peaks.length / peakIndexScale;\n                const bar = this.params.barWidth * this.params.pixelRatio;\n                const gap =\n                    this.params.barGap === null\n                        ? Math.max(this.params.pixelRatio, ~~(bar / 2))\n                        : Math.max(\n                            this.params.pixelRatio,\n                            this.params.barGap * this.params.pixelRatio\n                        );\n                const step = bar + gap;\n\n                const scale = length / this.width;\n                const first = start;\n                const last = end;\n                let i = first;\n\n                for (i; i < last; i += step) {\n                    const peak =\n                        peaks[Math.floor(i * scale * peakIndexScale)] || 0;\n                    let h = Math.round((peak / absmax) * halfH);\n\n                    /* in case of silences, allow the user to specify that we\n                     * always draw *something* (normally a 1px high bar) */\n                    if (h == 0 && this.params.barMinHeight) {\n                        h = this.params.barMinHeight;\n                    }\n\n                    this.fillRect(\n                        i + this.halfPixel,\n                        halfH - h + offsetY,\n                        bar + this.halfPixel,\n                        h * 2,\n                        this.barRadius,\n                        ch\n                    );\n                }\n            }\n        );\n    }\n\n    /**\n     * Draw a waveform\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered (If this isn't set only a flat line is rendered)\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @returns {void}\n     */\n    drawWave(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks, channelIndex }) => {\n                if (!hasMinVals) {\n                    const reflectedPeaks = [];\n                    const len = peaks.length;\n                    let i = 0;\n                    for (i; i < len; i++) {\n                        reflectedPeaks[2 * i] = peaks[i];\n                        reflectedPeaks[2 * i + 1] = -peaks[i];\n                    }\n                    peaks = reflectedPeaks;\n                }\n\n                // if drawWave was called within ws.empty we don't pass a start and\n                // end and simply want a flat line\n                if (start !== undefined) {\n                    this.drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex);\n                }\n\n                // always draw a median line\n                this.fillRect(\n                    0,\n                    halfH + offsetY - this.halfPixel,\n                    this.width,\n                    this.halfPixel,\n                    this.barRadius,\n                    channelIndex\n                );\n            }\n        );\n    }\n\n    /**\n     * Tell the canvas entries to render their portion of the waveform\n     *\n     * @param {number[]} peaks Peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     * @param {channelIndex} channelIndex The channel index of the line drawn\n     */\n    drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex) {\n        const { waveColor, progressColor } = this.params.splitChannelsOptions.channelColors[channelIndex] || {};\n        this.canvases.forEach((entry, i) => {\n            this.setFillStyles(entry, waveColor, progressColor);\n            this.applyCanvasTransforms(entry, this.params.vertical);\n            entry.drawLines(peaks, absmax, halfH, offsetY, start, end);\n        });\n    }\n\n    /**\n     * Draw a rectangle on the multi-canvas\n     *\n     * @param {number} x X-position of the rectangle\n     * @param {number} y Y-position of the rectangle\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     * @param {channelIndex} channelIndex The channel index of the bar drawn\n     */\n    fillRect(x, y, width, height, radius, channelIndex) {\n        const startCanvas = Math.floor(x / this.maxCanvasWidth);\n        const endCanvas = Math.min(\n            Math.ceil((x + width) / this.maxCanvasWidth) + 1,\n            this.canvases.length\n        );\n        let i = startCanvas;\n        for (i; i < endCanvas; i++) {\n            const entry = this.canvases[i];\n            const leftOffset = i * this.maxCanvasWidth;\n\n            const intersection = {\n                x1: Math.max(x, i * this.maxCanvasWidth),\n                y1: y,\n                x2: Math.min(\n                    x + width,\n                    i * this.maxCanvasWidth + entry.wave.width\n                ),\n                y2: y + height\n            };\n\n            if (intersection.x1 < intersection.x2) {\n                const { waveColor, progressColor } = this.params.splitChannelsOptions.channelColors[channelIndex] || {};\n                this.setFillStyles(entry, waveColor, progressColor);\n                this.applyCanvasTransforms(entry, this.params.vertical);\n\n                entry.fillRects(\n                    intersection.x1 - leftOffset,\n                    intersection.y1,\n                    intersection.x2 - intersection.x1,\n                    intersection.y2 - intersection.y1,\n                    radius\n                );\n            }\n        }\n    }\n\n    /**\n     * Returns whether to hide the channel from being drawn based on params.\n     *\n     * @param {number} channelIndex The index of the current channel.\n     * @returns {bool} True to hide the channel, false to draw.\n     */\n    hideChannel(channelIndex) {\n        return this.params.splitChannels && this.params.splitChannelsOptions.filterChannels.includes(channelIndex);\n    }\n\n    /**\n     * Performs preparation tasks and calculations which are shared by `drawBars`\n     * and `drawWave`\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for\n     * split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered. If this isn't set only a flat line is rendered\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @param {function} fn The render function to call, e.g. `drawWave`\n     * @param {number} drawIndex The index of the current channel after filtering.\n     * @param {number?} normalizedMax Maximum modulation value across channels for use with relativeNormalization. Ignored when undefined\n     * @returns {void}\n     */\n    prepareDraw(peaks, channelIndex, start, end, fn, drawIndex, normalizedMax) {\n        return util.frame(() => {\n            // Split channels and call this function with the channelIndex set\n            if (peaks[0] instanceof Array) {\n                const channels = peaks;\n\n                if (this.params.splitChannels) {\n                    const filteredChannels = channels.filter((c, i) => !this.hideChannel(i));\n                    if (!this.params.splitChannelsOptions.overlay) {\n                        this.setHeight(\n                            Math.max(filteredChannels.length, 1) *\n                                this.params.height *\n                                this.params.pixelRatio\n                        );\n                    }\n\n                    let overallAbsMax;\n                    if (this.params.splitChannelsOptions && this.params.splitChannelsOptions.relativeNormalization) {\n                        // calculate maximum peak across channels to use for normalization\n                        overallAbsMax = util.max(channels.map((channelPeaks => util.absMax(channelPeaks))));\n                    }\n\n\n                    return channels.forEach((channelPeaks, i) =>\n                        this.prepareDraw(channelPeaks, i, start, end, fn, filteredChannels.indexOf(channelPeaks), overallAbsMax)\n                    );\n                }\n                peaks = channels[0];\n            }\n\n            // Return and do not draw channel peaks if hidden.\n            if (this.hideChannel(channelIndex)) {\n                return;\n            }\n\n            // calculate maximum modulation value, either from the barHeight\n            // parameter or if normalize=true from the largest value in the peak\n            // set\n            let absmax = 1 / this.params.barHeight;\n            if (this.params.normalize) {\n                absmax = normalizedMax === undefined ? util.absMax(peaks) : normalizedMax;\n            }\n\n            // Bar wave draws the bottom only as a reflection of the top,\n            // so we don't need negative values\n            const hasMinVals = [].some.call(peaks, val => val < 0);\n            const height = this.params.height * this.params.pixelRatio;\n            const halfH = height / 2;\n\n            let offsetY = height * drawIndex || 0;\n\n            // Override offsetY if overlay is true\n            if (this.params.splitChannelsOptions && this.params.splitChannelsOptions.overlay) {\n                offsetY = 0;\n            }\n\n            return fn({\n                absmax: absmax,\n                hasMinVals: hasMinVals,\n                height: height,\n                offsetY: offsetY,\n                halfH: halfH,\n                peaks: peaks,\n                channelIndex: channelIndex\n            });\n        })();\n    }\n\n    /**\n     * Set the fill styles for a certain entry (wave and progress)\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {string} waveColor Wave color to draw this entry\n     * @param {string} progressColor Progress color to draw this entry\n     */\n    setFillStyles(entry, waveColor = this.params.waveColor, progressColor = this.params.progressColor) {\n        entry.setFillStyles(waveColor, progressColor);\n    }\n\n    /**\n     * Set the canvas transforms for a certain entry (wave and progress)\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {boolean} vertical Whether to render the waveform vertically\n     */\n    applyCanvasTransforms(entry, vertical = false) {\n        entry.applyCanvasTransforms(vertical);\n    }\n\n    /**\n     * Return image data of the multi-canvas\n     *\n     * When using a `type` of `'blob'`, this will return a `Promise`.\n     *\n     * @param {string} format='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n     * @return {string|string[]|Promise} When using the default `'dataURL'`\n     * `type` this returns a single data URL or an array of data URLs,\n     * one for each canvas. When using the `'blob'` `type` this returns a\n     * `Promise` that resolves with an array of `Blob` instances, one for each\n     * canvas.\n     */\n    getImage(format, quality, type) {\n        if (type === 'blob') {\n            return Promise.all(\n                this.canvases.map(entry => {\n                    return entry.getImage(format, quality, type);\n                })\n            );\n        } else if (type === 'dataURL') {\n            let images = this.canvases.map(entry =>\n                entry.getImage(format, quality, type)\n            );\n            return images.length > 1 ? images : images[0];\n        }\n    }\n\n    /**\n     * Render the new progress\n     *\n     * @param {number} position X-offset of progress position in pixels\n     */\n    updateProgress(position) {\n        this.style(this.progressWave, { width: position + 'px' });\n    }\n}\n","import MediaElement from './mediaelement';\n\n/**\n * MediaElementWebAudio backend: load audio via an HTML5 audio tag, but playback with the WebAudio API.\n * The advantage here is that the html5 <audio> tag can perform range requests on the server and not\n * buffer the entire file in one request, and you still get the filtering and scripting functionality\n * of the webaudio API.\n * Note that in order to use range requests and prevent buffering, you must provide peak data.\n *\n * @since 3.2.0\n */\nexport default class MediaElementWebAudio extends MediaElement {\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super(params);\n        /** @private */\n        this.params = params;\n        /** @private */\n        this.sourceMediaElement = null;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.setPlaybackRate(this.params.audioRate);\n        this.createTimer();\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n    }\n    /**\n     * Private method called by both `load` (from url)\n     * and `loadElt` (existing media element) methods.\n     *\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @private\n     */\n    _load(media, peaks, preload) {\n        super._load(media, peaks, preload);\n        this.createMediaElementSource(media);\n    }\n\n    /**\n     * Create MediaElementSource node\n     *\n     * @since 3.2.0\n     * @param {HTMLMediaElement} mediaElement HTML5 Audio to load\n     */\n    createMediaElementSource(mediaElement) {\n        this.sourceMediaElement = this.ac.createMediaElementSource(\n            mediaElement\n        );\n        this.sourceMediaElement.connect(this.analyser);\n    }\n\n    play(start, end) {\n        this.resumeAudioContext();\n        return super.play(start, end);\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n    destroy() {\n        super.destroy();\n\n        this.destroyWebAudio();\n    }\n}\n","import WebAudio from './webaudio';\nimport * as util from './util';\n\n/**\n * MediaElement backend\n */\nexport default class MediaElement extends WebAudio {\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super(params);\n        /** @private */\n        this.params = params;\n\n        /**\n         * Initially a dummy media element to catch errors. Once `_load` is\n         * called, this will contain the actual `HTMLMediaElement`.\n         * @private\n         */\n        this.media = {\n            currentTime: 0,\n            duration: 0,\n            paused: true,\n            playbackRate: 1,\n            play() {},\n            pause() {},\n            volume: 0\n        };\n\n        /** @private */\n        this.mediaType = params.mediaType.toLowerCase();\n        /** @private */\n        this.elementPosition = params.elementPosition;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** @private */\n        this.volume = 1;\n        /** @private */\n        this.isMuted = false;\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.onPlayEnd = null;\n        /** @private */\n        this.mediaListeners = {};\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.setPlaybackRate(this.params.audioRate);\n        this.createTimer();\n    }\n\n    /**\n     * Attach event listeners to media element.\n     */\n    _setupMediaListeners() {\n        this.mediaListeners.error = () => {\n            this.fireEvent('error', 'Error loading media element');\n        };\n        this.mediaListeners.canplay = () => {\n            this.fireEvent('canplay');\n        };\n        this.mediaListeners.ended = () => {\n            this.fireEvent('finish');\n        };\n        // listen to and relay play, pause and seeked events to enable\n        // playback control from the external media element\n        this.mediaListeners.play = () => {\n            this.fireEvent('play');\n        };\n        this.mediaListeners.pause = () => {\n            this.fireEvent('pause');\n        };\n        this.mediaListeners.seeked = event => {\n            this.fireEvent('seek');\n        };\n        this.mediaListeners.volumechange = event => {\n            this.isMuted = this.media.muted;\n            if (this.isMuted) {\n                this.volume = 0;\n            } else {\n                this.volume = this.media.volume;\n            }\n            this.fireEvent('volume');\n        };\n\n        // reset event listeners\n        Object.keys(this.mediaListeners).forEach(id => {\n            this.media.removeEventListener(id, this.mediaListeners[id]);\n            this.media.addEventListener(id, this.mediaListeners[id]);\n        });\n    }\n\n    /**\n     * Create a timer to provide a more precise `audioprocess` event.\n     */\n    createTimer() {\n        const onAudioProcess = () => {\n            if (this.isPaused()) {\n                return;\n            }\n            this.fireEvent('audioprocess', this.getCurrentTime());\n\n            // Call again in the next frame\n            util.frame(onAudioProcess)();\n        };\n\n        this.on('play', onAudioProcess);\n\n        // Update the progress one more time to prevent it from being stuck in\n        // case of lower framerates\n        this.on('pause', () => {\n            this.fireEvent('audioprocess', this.getCurrentTime());\n        });\n    }\n\n    /**\n     * Create media element with url as its source,\n     * and append to container element.\n     *\n     * @param {string} url Path to media file\n     * @param {HTMLElement} container HTML element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @throws Will throw an error if the `url` argument is not a valid media\n     * element.\n     */\n    load(url, container, peaks, preload) {\n        const media = document.createElement(this.mediaType);\n        media.controls = this.params.mediaControls;\n        media.autoplay = this.params.autoplay || false;\n        media.preload = preload == null ? 'auto' : preload;\n        media.src = url;\n        media.style.width = '100%';\n\n        const prevMedia = container.querySelector(this.mediaType);\n        if (prevMedia) {\n            container.removeChild(prevMedia);\n        }\n        container.appendChild(media);\n\n        this._load(media, peaks, preload);\n    }\n\n    /**\n     * Load existing media element.\n     *\n     * @param {HTMLMediaElement} elt HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     */\n    loadElt(elt, peaks) {\n        elt.controls = this.params.mediaControls;\n        elt.autoplay = this.params.autoplay || false;\n\n        this._load(elt, peaks, elt.preload);\n    }\n\n    /**\n     * Method called by both `load` (from url)\n     * and `loadElt` (existing media element) methods.\n     *\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @throws Will throw an error if the `media` argument is not a valid media\n     * element.\n     * @private\n     */\n    _load(media, peaks, preload) {\n        // verify media element is valid\n        if (\n            !(media instanceof HTMLMediaElement) ||\n            typeof media.addEventListener === 'undefined'\n        ) {\n            throw new Error('media parameter is not a valid media element');\n        }\n\n        // load must be called manually on iOS, otherwise peaks won't draw\n        // until a user interaction triggers load --> 'ready' event\n        //\n        // note that we avoid calling media.load here when given peaks and preload == 'none'\n        // as this almost always triggers some browser fetch of the media.\n        if (typeof media.load == 'function' && !(peaks && preload == 'none')) {\n            // Resets the media element and restarts the media resource. Any\n            // pending events are discarded. How much media data is fetched is\n            // still affected by the preload attribute.\n            media.load();\n        }\n\n        this.media = media;\n        this._setupMediaListeners();\n        this.peaks = peaks;\n        this.onPlayEnd = null;\n        this.buffer = null;\n        this.isMuted = media.muted;\n        this.setPlaybackRate(this.playbackRate);\n        this.setVolume(this.volume);\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean} Media paused or not\n     */\n    isPaused() {\n        return !this.media || this.media.paused;\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number} Duration\n     */\n    getDuration() {\n        if (this.explicitDuration) {\n            return this.explicitDuration;\n        }\n        let duration = (this.buffer || this.media).duration;\n        if (duration >= Infinity) {\n            // streaming audio\n            duration = this.media.seekable.end(0);\n        }\n        return duration;\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audio-clip's\n     * duration.\n     *\n     * @return {number} Current time\n     */\n    getCurrentTime() {\n        return this.media && this.media.currentTime;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number} Current position\n     */\n    getPlayedPercents() {\n        return this.getCurrentTime() / this.getDuration() || 0;\n    }\n\n    /**\n     * Get the audio source playback rate.\n     *\n     * @return {number} Playback rate\n     */\n    getPlaybackRate() {\n        return this.playbackRate || this.media.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value Playback rate\n     */\n    setPlaybackRate(value) {\n        this.playbackRate = value || 1;\n        this.media.playbackRate = this.playbackRate;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     */\n    seekTo(start) {\n        if (start != null) {\n            this.media.currentTime = start;\n        }\n        this.clearPlayEnd();\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop, relative to the beginning of a clip.\n     * @emits MediaElement#play\n     * @return {Promise} Result\n     */\n    play(start, end) {\n        this.seekTo(start);\n        const promise = this.media.play();\n        end && this.setPlayEnd(end);\n\n        return promise;\n    }\n\n    /**\n     * Pauses the loaded audio.\n     *\n     * @emits MediaElement#pause\n     * @return {Promise} Result\n     */\n    pause() {\n        let promise;\n\n        if (this.media) {\n            promise = this.media.pause();\n        }\n        this.clearPlayEnd();\n\n        return promise;\n    }\n\n    /**\n     * Set the play end\n     *\n     * @param {number} end Where to end\n     */\n    setPlayEnd(end) {\n        this.clearPlayEnd();\n\n        this._onPlayEnd = time => {\n            if (time >= end) {\n                this.pause();\n                this.seekTo(end);\n            }\n        };\n        this.on('audioprocess', this._onPlayEnd);\n    }\n\n    /** @private */\n    clearPlayEnd() {\n        if (this._onPlayEnd) {\n            this.un('audioprocess', this._onPlayEnd);\n            this._onPlayEnd = null;\n        }\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into\n     * <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of\n     * arrays of peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.buffer) {\n            return super.getPeaks(length, first, last);\n        }\n        return this.peaks || [];\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     * @returns {Promise} A Promise that resolves to `undefined` when there\n     * are no errors.\n     */\n    setSinkId(deviceId) {\n        if (deviceId) {\n            if (!this.media.setSinkId) {\n                return Promise.reject(\n                    new Error('setSinkId is not supported in your browser')\n                );\n            }\n            return this.media.setSinkId(deviceId);\n        }\n\n        return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.volume;\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.volume = value;\n        // no need to change when it's already at that volume\n        if (this.media.volume !== this.volume) {\n            this.media.volume = this.volume;\n        }\n    }\n\n    /**\n     * Enable or disable muted audio\n     *\n     * @since 4.0.0\n     * @param {boolean} muted Specify `true` to mute audio.\n     */\n    setMute(muted) {\n        // This causes a volume change to be emitted too through the\n        // volumechange event listener.\n        this.isMuted = this.media.muted = muted;\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n    destroy() {\n        this.pause();\n        this.unAll();\n        this.destroyed = true;\n\n        // cleanup media event listeners\n        Object.keys(this.mediaListeners).forEach(id => {\n            if (this.media) {\n                this.media.removeEventListener(id, this.mediaListeners[id]);\n            }\n        });\n\n        if (\n            this.params.removeMediaElementOnDestroy &&\n            this.media &&\n            this.media.parentNode\n        ) {\n            this.media.parentNode.removeChild(this.media);\n        }\n\n        this.media = null;\n    }\n}\n","/**\n * Caches the decoded peaks data to improve rendering speed for large audio\n *\n * Is used if the option parameter `partialRender` is set to `true`\n */\nexport default class PeakCache {\n    /**\n     * Instantiate cache\n     */\n    constructor() {\n        this.clearPeakCache();\n    }\n\n    /**\n     * Empty the cache\n     */\n    clearPeakCache() {\n        /**\n         * Flat array with entries that are always in pairs to mark the\n         * beginning and end of each subrange.  This is a convenience so we can\n         * iterate over the pairs for easy set difference operations.\n         * @private\n         */\n        this.peakCacheRanges = [];\n        /**\n         * Length of the entire cachable region, used for resetting the cache\n         * when this changes (zoom events, for instance).\n         * @private\n         */\n        this.peakCacheLength = -1;\n    }\n\n    /**\n     * Add a range of peaks to the cache\n     *\n     * @param {number} length The length of the range\n     * @param {number} start The x offset of the start of the range\n     * @param {number} end The x offset of the end of the range\n     * @return {Number.<Array[]>} Array with arrays of numbers\n     */\n    addRangeToPeakCache(length, start, end) {\n        if (length != this.peakCacheLength) {\n            this.clearPeakCache();\n            this.peakCacheLength = length;\n        }\n\n        // Return ranges that weren't in the cache before the call.\n        let uncachedRanges = [];\n        let i = 0;\n        // Skip ranges before the current start.\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] < start\n        ) {\n            i++;\n        }\n        // If |i| is even, |start| falls after an existing range.  Otherwise,\n        // |start| falls between an existing range, and the uncached region\n        // starts when we encounter the next node in |peakCacheRanges| or\n        // |end|, whichever comes first.\n        if (i % 2 == 0) {\n            uncachedRanges.push(start);\n        }\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] <= end\n        ) {\n            uncachedRanges.push(this.peakCacheRanges[i]);\n            i++;\n        }\n        // If |i| is even, |end| is after all existing ranges.\n        if (i % 2 == 0) {\n            uncachedRanges.push(end);\n        }\n\n        // Filter out the 0-length ranges.\n        uncachedRanges = uncachedRanges.filter((item, pos, arr) => {\n            if (pos == 0) {\n                return item != arr[pos + 1];\n            } else if (pos == arr.length - 1) {\n                return item != arr[pos - 1];\n            }\n            return item != arr[pos - 1] && item != arr[pos + 1];\n        });\n\n        // Merge the two ranges together, uncachedRanges will either contain\n        // wholly new points, or duplicates of points in peakCacheRanges.  If\n        // duplicates are detected, remove both and extend the range.\n        this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\n        this.peakCacheRanges = this.peakCacheRanges\n            .sort((a, b) => a - b)\n            .filter((item, pos, arr) => {\n                if (pos == 0) {\n                    return item != arr[pos + 1];\n                } else if (pos == arr.length - 1) {\n                    return item != arr[pos - 1];\n                }\n                return item != arr[pos - 1] && item != arr[pos + 1];\n            });\n\n        // Push the uncached ranges into an array of arrays for ease of\n        // iteration in the functions that call this.\n        const uncachedRangePairs = [];\n        for (i = 0; i < uncachedRanges.length; i += 2) {\n            uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i + 1]]);\n        }\n\n        return uncachedRangePairs;\n    }\n\n    /**\n     * For testing\n     *\n     * @return {Number.<Array[]>} Array with arrays of numbers\n     */\n    getCacheRanges() {\n        const peakCacheRangePairs = [];\n        let i;\n        for (i = 0; i < this.peakCacheRanges.length; i += 2) {\n            peakCacheRangePairs.push([\n                this.peakCacheRanges[i],\n                this.peakCacheRanges[i + 1]\n            ]);\n        }\n        return peakCacheRangePairs;\n    }\n}\n","import utilMax from './max';\r\nimport utilmin from './min';\r\n\r\n/**\r\n * Get the largest absolute value in an array\r\n *\r\n * @param   {Array} values Array of numbers\r\n * @returns {Number} Largest number found\r\n * @example console.log(max([-3, 2, 1]), max([-3, 2, 4])); // logs 3 4\r\n * @since 4.3.0\r\n */\r\nexport default function absMax(values) {\r\n    const max = utilMax(values);\r\n    const min = utilmin(values);\r\n    return -min > max ? -min : max;\r\n}\r\n","/**\n * Returns a number limited to the given range.\n *\n * @param {number} val The number to be limited to a range\n * @param {number} min The lower boundary of the limit range\n * @param {number} max The upper boundary of the limit range\n * @returns {number} A number in the range [min, max]\n */\nexport default function clamp(val, min, max) {\n    return Math.min(Math.max(min, val), max);\n}\n","/**\n * @since 3.0.0\n */\n\nimport Observer from './observer';\n\nclass ProgressHandler {\n    /**\n     * Instantiate ProgressHandler\n     *\n     * @param {Observer} instance The `fetchFile` observer instance.\n     * @param {Number} contentLength Content length.\n     * @param {Response} response Response object.\n     */\n    constructor(instance, contentLength, response) {\n        this.instance = instance;\n        this.instance._reader = response.body.getReader();\n\n        this.total = parseInt(contentLength, 10);\n        this.loaded = 0;\n    }\n\n    /**\n     * A method that is called once, immediately after the `ReadableStream``\n     * is constructed.\n     *\n     * @param {ReadableStreamDefaultController} controller Controller instance\n     *     used to control the stream.\n     */\n    start(controller) {\n        const read = () => {\n            // instance._reader.read() returns a promise that resolves\n            // when a value has been received\n            this.instance._reader\n                .read()\n                .then(({ done, value }) => {\n                    // result objects contain two properties:\n                    // done  - true if the stream has already given you all its data.\n                    // value - some data. Always undefined when done is true.\n                    if (done) {\n                        // ensure onProgress called when content-length=0\n                        if (this.total === 0) {\n                            this.instance.onProgress.call(this.instance, {\n                                loaded: this.loaded,\n                                total: this.total,\n                                lengthComputable: false\n                            });\n                        }\n                        // no more data needs to be consumed, close the stream\n                        controller.close();\n                        return;\n                    }\n\n                    this.loaded += value.byteLength;\n                    this.instance.onProgress.call(this.instance, {\n                        loaded: this.loaded,\n                        total: this.total,\n                        lengthComputable: !(this.total === 0)\n                    });\n                    // enqueue the next data chunk into our target stream\n                    controller.enqueue(value);\n                    read();\n                })\n                .catch(error => {\n                    controller.error(error);\n                });\n        };\n\n        read();\n    }\n}\n\n/**\n * Load a file using `fetch`.\n *\n * @param {object} options Request options to use. See example below.\n * @returns {Observer} Observer instance\n * @example\n * // default options\n * let options = {\n *     url: undefined,\n *     method: 'GET',\n *     mode: 'cors',\n *     credentials: 'same-origin',\n *     cache: 'default',\n *     responseType: 'json',\n *     requestHeaders: [],\n *     redirect: 'follow',\n *     referrer: 'client'\n * };\n *\n * // override some options\n * options.url = '../media/demo.wav';\n\n * // available types: 'arraybuffer', 'blob', 'json' or 'text'\n * options.responseType = 'arraybuffer';\n *\n * // make fetch call\n * let request = util.fetchFile(options);\n *\n * // listen for events\n * request.on('progress', e => {\n *     console.log('progress', e);\n * });\n *\n * request.on('success', data => {\n *     console.log('success!', data);\n * });\n *\n * request.on('error', e => {\n *     console.warn('fetchFile error: ', e);\n * });\n */\nexport default function fetchFile(options) {\n    if (!options) {\n        throw new Error('fetch options missing');\n    } else if (!options.url) {\n        throw new Error('fetch url missing');\n    }\n    const instance = new Observer();\n    const fetchHeaders = new Headers();\n    const fetchRequest = new Request(options.url);\n\n    // add ability to abort\n    instance.controller = new AbortController();\n\n    // check if headers have to be added\n    if (options && options.requestHeaders) {\n        // add custom request headers\n        options.requestHeaders.forEach(header => {\n            fetchHeaders.append(header.key, header.value);\n        });\n    }\n\n    // parse fetch options\n    const responseType = options.responseType || 'json';\n    const fetchOptions = {\n        method: options.method || 'GET',\n        headers: fetchHeaders,\n        mode: options.mode || 'cors',\n        credentials: options.credentials || 'same-origin',\n        cache: options.cache || 'default',\n        redirect: options.redirect || 'follow',\n        referrer: options.referrer || 'client',\n        signal: instance.controller.signal\n    };\n\n    fetch(fetchRequest, fetchOptions)\n        .then(response => {\n            // store response reference\n            instance.response = response;\n\n            let progressAvailable = true;\n            if (!response.body) {\n                // ReadableStream is not yet supported in this browser\n                // see https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\n                progressAvailable = false;\n            }\n\n            // Server must send CORS header \"Access-Control-Expose-Headers: content-length\"\n            const contentLength = response.headers.get('content-length');\n            if (contentLength === null) {\n                // Content-Length server response header missing.\n                // Don't evaluate download progress if we can't compare against a total size\n                // see https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Access-Control-Expose-Headers\n                progressAvailable = false;\n            }\n\n            if (!progressAvailable) {\n                // not able to check download progress so skip it\n                return response;\n            }\n\n            // fire progress event when during load\n            instance.onProgress = e => {\n                instance.fireEvent('progress', e);\n            };\n\n            return new Response(\n                new ReadableStream(\n                    new ProgressHandler(instance, contentLength, response)\n                ),\n                fetchOptions\n            );\n        })\n        .then(response => {\n            let errMsg;\n            if (response.ok) {\n                switch (responseType) {\n                    case 'arraybuffer':\n                        return response.arrayBuffer();\n\n                    case 'json':\n                        return response.json();\n\n                    case 'blob':\n                        return response.blob();\n\n                    case 'text':\n                        return response.text();\n\n                    default:\n                        errMsg = 'Unknown responseType: ' + responseType;\n                        break;\n                }\n            }\n            if (!errMsg) {\n                errMsg = 'HTTP error status: ' + response.status;\n            }\n            throw new Error(errMsg);\n        })\n        .then(response => {\n            instance.fireEvent('success', response);\n        })\n        .catch(error => {\n            instance.fireEvent('error', error);\n        });\n\n    // return the fetch request\n    instance.fetchRequest = fetchRequest;\n    return instance;\n}\n","import reqAnimationFrame from './request-animation-frame';\n\n/**\n * Create a function which will be called at the next requestAnimationFrame\n * cycle\n *\n * @param {function} func The function to call\n *\n * @return {func} The function wrapped within a requestAnimationFrame\n */\nexport default function frame(func) {\n    return (...args) => reqAnimationFrame(() => func(...args));\n}\n","/**\n * Get a random prefixed ID\n *\n * @param {String} prefix Prefix to use. Default is `'wavesurfer_'`.\n * @returns {String} Random prefixed ID\n * @example\n * console.log(getId()); // logs 'wavesurfer_b5pors4ru6g'\n *\n * let prefix = 'foo-';\n * console.log(getId(prefix)); // logs 'foo-b5pors4ru6g'\n */\nexport default function getId(prefix) {\n    if (prefix === undefined) {\n        prefix = 'wavesurfer_';\n    }\n    return (\n        prefix +\n        Math.random()\n            .toString(32)\n            .substring(2)\n    );\n}\n","export { default as getId } from './get-id';\nexport { default as max } from './max';\nexport { default as min } from './min';\nexport { default as absMax } from './absMax';\nexport { default as Observer } from './observer';\nexport { default as style } from './style';\nexport { default as requestAnimationFrame } from './request-animation-frame';\nexport { default as frame } from './frame';\nexport { default as debounce } from 'debounce';\nexport { default as preventClick } from './prevent-click';\nexport { default as fetchFile } from './fetch';\nexport { default as clamp } from './clamp';\nexport { default as withOrientation } from './orientation';\nexport { default as ignoreSilenceMode } from './silence-mode';\n","/**\n * Get the largest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Largest number found\n * @example console.log(max([1, 2, 3])); // logs 3\n */\nexport default function max(values) {\n    let largest = -Infinity;\n    Object.keys(values).forEach(i => {\n        if (values[i] > largest) {\n            largest = values[i];\n        }\n    });\n    return largest;\n}\n","/**\n * Get the smallest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Smallest number found\n * @example console.log(min([1, 2, 3])); // logs 1\n */\nexport default function min(values) {\n    let smallest = Number(Infinity);\n    Object.keys(values).forEach(i => {\n        if (values[i] < smallest) {\n            smallest = values[i];\n        }\n    });\n    return smallest;\n}\n","/**\n * @typedef {Object} ListenerDescriptor\n * @property {string} name The name of the event\n * @property {function} callback The callback\n * @property {function} un The function to call to remove the listener\n */\n\n/**\n * Observer class\n */\nexport default class Observer {\n    /**\n     * Instantiate Observer\n     */\n    constructor() {\n        /**\n         * @private\n         * @todo Initialise the handlers here already and remove the conditional\n         * assignment in `on()`\n         */\n        this._disabledEventEmissions = [];\n        this.handlers = null;\n    }\n    /**\n     * Attach a handler function for an event.\n     *\n     * @param {string} event Name of the event to listen to\n     * @param {function} fn The callback to trigger when the event is fired\n     * @return {ListenerDescriptor} The event descriptor\n     */\n    on(event, fn) {\n        if (!this.handlers) {\n            this.handlers = {};\n        }\n\n        let handlers = this.handlers[event];\n        if (!handlers) {\n            handlers = this.handlers[event] = [];\n        }\n        handlers.push(fn);\n\n        // Return an event descriptor\n        return {\n            name: event,\n            callback: fn,\n            un: (e, fn) => this.un(e, fn)\n        };\n    }\n\n    /**\n     * Remove an event handler.\n     *\n     * @param {string} event Name of the event the listener that should be\n     * removed listens to\n     * @param {function} fn The callback that should be removed\n     */\n    un(event, fn) {\n        if (!this.handlers) {\n            return;\n        }\n\n        const handlers = this.handlers[event];\n        let i;\n        if (handlers) {\n            if (fn) {\n                for (i = handlers.length - 1; i >= 0; i--) {\n                    if (handlers[i] == fn) {\n                        handlers.splice(i, 1);\n                    }\n                }\n            } else {\n                handlers.length = 0;\n            }\n        }\n    }\n\n    /**\n     * Remove all event handlers.\n     */\n    unAll() {\n        this.handlers = null;\n    }\n\n    /**\n     * Attach a handler to an event. The handler is executed at most once per\n     * event type.\n     *\n     * @param {string} event The event to listen to\n     * @param {function} handler The callback that is only to be called once\n     * @return {ListenerDescriptor} The event descriptor\n     */\n    once(event, handler) {\n        const fn = (...args) => {\n            /*  eslint-disable no-invalid-this */\n            handler.apply(this, args);\n            /*  eslint-enable no-invalid-this */\n            setTimeout(() => {\n                this.un(event, fn);\n            }, 0);\n        };\n        return this.on(event, fn);\n    }\n\n    /**\n     * Disable firing a list of events by name. When specified, event handlers for any event type\n     * passed in here will not be called.\n     *\n     * @since 4.0.0\n     * @param {string[]} eventNames an array of event names to disable emissions for\n     * @example\n     * // disable seek and interaction events\n     * wavesurfer.setDisabledEventEmissions(['seek', 'interaction']);\n     */\n    setDisabledEventEmissions(eventNames) {\n        this._disabledEventEmissions = eventNames;\n    }\n\n    /**\n     * plugins borrow part of this class without calling the constructor,\n     * so we have to be careful about _disabledEventEmissions\n     */\n\n    _isDisabledEventEmission(event) {\n        return this._disabledEventEmissions && this._disabledEventEmissions.includes(event);\n    }\n\n    /**\n     * Manually fire an event\n     *\n     * @param {string} event The event to fire manually\n     * @param {...any} args The arguments with which to call the listeners\n     */\n    fireEvent(event, ...args) {\n        if (!this.handlers || this._isDisabledEventEmission(event)) {\n            return;\n        }\n\n        const handlers = this.handlers[event];\n        handlers &&\n            handlers.forEach(fn => {\n                fn(...args);\n            });\n    }\n}\n","const verticalPropMap = {\n    width: 'height',\n    height: 'width',\n\n    overflowX: 'overflowY',\n    overflowY: 'overflowX',\n\n    clientWidth: 'clientHeight',\n    clientHeight: 'clientWidth',\n\n    clientX: 'clientY',\n    clientY: 'clientX',\n\n    scrollWidth: 'scrollHeight',\n    scrollLeft: 'scrollTop',\n\n    offsetLeft: 'offsetTop',\n    offsetTop: 'offsetLeft',\n    offsetHeight: 'offsetWidth',\n    offsetWidth: 'offsetHeight',\n\n    left: 'top',\n    right: 'bottom',\n    top: 'left',\n    bottom: 'right',\n\n    borderRightStyle: 'borderBottomStyle',\n    borderRightWidth: 'borderBottomWidth',\n    borderRightColor: 'borderBottomColor'\n};\n\n/**\n * Convert a horizontally-oriented property name to a vertical one.\n *\n * @param {string} prop A property name\n * @param {bool} vertical Whether the element is oriented vertically\n * @returns {string} prop, converted appropriately\n */\nfunction mapProp(prop, vertical) {\n    if (Object.prototype.hasOwnProperty.call(verticalPropMap, prop)) {\n        return vertical ? verticalPropMap[prop] : prop;\n    } else {\n        return prop;\n    }\n}\n\nconst isProxy = Symbol(\"isProxy\");\n\n/**\n * Returns an appropriately oriented object based on vertical.\n * If vertical is true, attribute getting and setting will be mapped through\n * verticalPropMap, so that e.g. getting the object's .width will give its\n * .height instead.\n * Certain methods of an oriented object will return oriented objects as well.\n * Oriented objects can't be added to the DOM directly since they are Proxy objects\n * and thus fail typechecks. Use domElement to get the actual element for this.\n *\n * @param {object} target The object to be wrapped and oriented\n * @param {bool} vertical Whether the element is oriented vertically\n * @returns {Proxy} An oriented object with attr translation via verticalAttrMap\n * @since 5.0.0\n */\nexport default function withOrientation(target, vertical) {\n    if (target[isProxy]) {\n        return target;\n    } else {\n        return new Proxy(\n            target, {\n                get: function(obj, prop, receiver) {\n                    if (prop === isProxy) {\n                        return true;\n                    } else if (prop === 'domElement') {\n                        return obj;\n                    } else if (prop === 'style') {\n                        return withOrientation(obj.style, vertical);\n                    } else if (prop === 'canvas') {\n                        return withOrientation(obj.canvas, vertical);\n                    } else if (prop === 'getBoundingClientRect') {\n                        return function(...args) {\n                            return withOrientation(obj.getBoundingClientRect(...args), vertical);\n                        };\n                    } else if (prop === 'getContext') {\n                        return function(...args) {\n                            return withOrientation(obj.getContext(...args), vertical);\n                        };\n                    } else {\n                        let value = obj[mapProp(prop, vertical)];\n                        return typeof value == 'function' ? value.bind(obj) : value;\n                    }\n                },\n                set: function(obj, prop, value) {\n                    obj[mapProp(prop, vertical)] = value;\n                    return true;\n                }\n            }\n        );\n    }\n}\n","/**\n * Stops propagation of click event and removes event listener\n *\n * @private\n * @param {object} event The click event\n */\nfunction preventClickHandler(event) {\n    event.stopPropagation();\n    document.body.removeEventListener('click', preventClickHandler, true);\n}\n\n/**\n * Starts listening for click event and prevent propagation\n *\n * @param {object} values Values\n */\nexport default function preventClick(values) {\n    document.body.addEventListener('click', preventClickHandler, true);\n}\n","/* eslint-disable valid-jsdoc */\n/**\n * Returns the `requestAnimationFrame` function for the browser, or a shim with\n * `setTimeout` if the function is not found\n *\n * @return {function} Available `requestAnimationFrame` function for the browser\n */\nexport default (\n    window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    ((callback, element) => setTimeout(callback, 1000 / 60))\n).bind(window);\n","/**\n * Ignores device silence mode when using the `WebAudio` backend.\n *\n * Many mobile devices contain a hardware button to mute the ringtone for incoming\n * calls and messages. Unfortunately, on some platforms like iOS, this also mutes\n * wavesurfer's audio when using the `WebAudio` backend. This function creates a\n * temporary `<audio>` element that makes sure the WebAudio backend keeps playing\n * when muting the device ringer.\n *\n * @since 5.2.0\n */\nexport default function ignoreSilenceMode() {\n    // Set the src to a short bit of url encoded as a silent mp3\n    // NOTE The silence MP3 must be high quality, when web audio sounds are played\n    // in parallel the web audio sound is mixed to match the bitrate of the html sound\n    // 0.01 seconds of silence VBR220-260 Joint Stereo 859B\n    const audioData = \"data:audio/mpeg;base64,//uQxAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAACAAACcQCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA//////////////////////////////////////////////////////////////////8AAABhTEFNRTMuMTAwA8MAAAAAAAAAABQgJAUHQQAB9AAAAnGMHkkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//sQxAADgnABGiAAQBCqgCRMAAgEAH///////////////7+n/9FTuQsQH//////2NG0jWUGlio5gLQTOtIoeR2WX////X4s9Atb/JRVCbBUpeRUq//////////////////9RUi0f2jn/+xDECgPCjAEQAABN4AAANIAAAAQVTEFNRTMuMTAwVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVQ==\";\n\n    // disable iOS Airplay (setting the attribute in js doesn't work)\n    let tmp = document.createElement(\"div\");\n    tmp.innerHTML = '<audio x-webkit-airplay=\"deny\"></audio>';\n\n    let audioSilentMode = tmp.children.item(0);\n    audioSilentMode.src = audioData;\n    audioSilentMode.preload = \"auto\";\n    audioSilentMode.type = \"audio/mpeg\";\n    audioSilentMode.disableRemotePlayback = true;\n\n    // play\n    audioSilentMode.play();\n\n    // cleanup\n    audioSilentMode.remove();\n    tmp.remove();\n}\n","/**\n * Apply a map of styles to an element\n *\n * @param {HTMLElement} el The element that the styles will be applied to\n * @param {Object} styles The map of propName: attribute, both are used as-is\n *\n * @return {HTMLElement} el\n */\nexport default function style(el, styles) {\n    Object.keys(styles).forEach(prop => {\n        if (el.style[prop] !== styles[prop]) {\n            el.style[prop] = styles[prop];\n        }\n    });\n    return el;\n}\n","import * as util from './util';\nimport MultiCanvas from './drawer.multicanvas';\nimport WebAudio from './webaudio';\nimport MediaElement from './mediaelement';\nimport PeakCache from './peakcache';\nimport MediaElementWebAudio from './mediaelement-webaudio';\n\n/*\n * This work is licensed under a BSD-3-Clause License.\n */\n\n/** @external {HTMLElement} https://developer.mozilla.org/en/docs/Web/API/HTMLElement */\n/** @external {OfflineAudioContext} https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext */\n/** @external {File} https://developer.mozilla.org/en-US/docs/Web/API/File */\n/** @external {Blob} https://developer.mozilla.org/en-US/docs/Web/API/Blob */\n/** @external {CanvasRenderingContext2D} https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D */\n/** @external {MediaStreamConstraints} https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints */\n/** @external {AudioNode} https://developer.mozilla.org/de/docs/Web/API/AudioNode */\n\n/**\n * @typedef {Object} WavesurferParams\n * @property {AudioContext} audioContext=null Use your own previously\n * initialized AudioContext or leave blank.\n * @property {number} audioRate=1 Speed at which to play audio. Lower number is\n * slower.\n * @property {ScriptProcessorNode} audioScriptProcessor=null Use your own previously\n * initialized ScriptProcessorNode or leave blank.\n * @property {boolean} autoCenter=true If a scrollbar is present, center the\n * waveform on current progress\n * @property {number} autoCenterRate=5 If autoCenter is active, rate at which the\n * waveform is centered\n * @property {boolean} autoCenterImmediately=false If autoCenter is active, immediately\n * center waveform on current progress\n * @property {string} backend='WebAudio' `'WebAudio'|'MediaElement'|'MediaElementWebAudio'` In most cases\n * you don't have to set this manually. MediaElement is a fallback for unsupported browsers.\n * MediaElementWebAudio allows to use WebAudio API also with big audio files, loading audio like with\n * MediaElement backend (HTML5 audio tag). You have to use the same methods of MediaElement backend for loading and\n * playback, giving also peaks, so the audio data are not decoded. In this way you can use WebAudio features, like filters,\n * also with audio with big duration. For example:\n * ` wavesurfer.load(url | HTMLMediaElement, peaks, preload, duration);\n *   wavesurfer.play();\n *   wavesurfer.setFilter(customFilter);\n * `\n * @property {string} backgroundColor=null Change background color of the\n * waveform container.\n * @property {number} barHeight=1 The height of the wave bars.\n * @property {number} barRadius=0 The radius of the wave bars. Makes bars rounded\n * @property {number} barGap=null The optional spacing between bars of the wave,\n * if not provided will be calculated in legacy format.\n * @property {number} barWidth=null Draw the waveform using bars.\n * @property {number} barMinHeight=null If specified, draw at least a bar of this height,\n * eliminating waveform gaps\n * @property {boolean} closeAudioContext=false Close and nullify all audio\n * contexts when the destroy method is called.\n * @property {!string|HTMLElement} container CSS selector or HTML element where\n * the waveform should be drawn. This is the only required parameter.\n * @property {string} cursorColor='#333' The fill color of the cursor indicating\n * the playhead position.\n * @property {number} cursorWidth=1 Measured in pixels.\n * @property {object} drawingContextAttributes={desynchronized: false} Drawing context\n * attributes.\n * @property {number} duration=null Optional audio length so pre-rendered peaks\n * can be display immediately for example.\n * @property {boolean} fillParent=true Whether to fill the entire container or\n * draw only according to `minPxPerSec`.\n * @property {boolean} forceDecode=false Force decoding of audio using web audio\n * when zooming to get a more detailed waveform.\n * @property {number} height=128 The height of the waveform. Measured in\n * pixels.\n * @property {boolean} hideScrollbar=false Whether to hide the horizontal\n * scrollbar when one would normally be shown.\n * @property {boolean} ignoreSilenceMode=false If true, ignores device silence mode\n * when using the `WebAudio` backend.\n * @property {boolean} interact=true Whether the mouse interaction will be\n * enabled at initialization. You can switch this parameter at any time later\n * on.\n * @property {boolean} loopSelection=true (Use with regions plugin) Enable\n * looping of selected regions\n * @property {number} maxCanvasWidth=4000 Maximum width of a single canvas in\n * pixels, excluding a small overlap (2 * `pixelRatio`, rounded up to the next\n * even integer). If the waveform is longer than this value, additional canvases\n * will be used to render the waveform, which is useful for very large waveforms\n * that may be too wide for browsers to draw on a single canvas.\n * @property {boolean} mediaControls=false (Use with backend `MediaElement` or `MediaElementWebAudio`)\n * this enables the native controls for the media element\n * @property {string} mediaType='audio' (Use with backend `MediaElement` or `MediaElementWebAudio`)\n * `'audio'|'video'` ('video' only for `MediaElement`)\n * @property {number} minPxPerSec=20 Minimum number of pixels per second of\n * audio.\n * @property {boolean} normalize=false If true, normalize by the maximum peak\n * instead of 1.0.\n * @property {boolean} partialRender=false Use the PeakCache to improve\n * rendering speed of large waveforms\n * @property {number} pixelRatio=window.devicePixelRatio The pixel ratio used to\n * calculate display\n * @property {PluginDefinition[]} plugins=[] An array of plugin definitions to\n * register during instantiation, they will be directly initialised unless they\n * are added with the `deferInit` property set to true.\n * @property {string} progressColor='#555' The fill color of the part of the\n * waveform behind the cursor. When `progressColor` and `waveColor` are the same\n * the progress wave is not rendered at all.\n * @property {boolean} removeMediaElementOnDestroy=true Set to false to keep the\n * media element in the DOM when the player is destroyed. This is useful when\n * reusing an existing media element via the `loadMediaElement` method.\n * @property {Object} renderer=MultiCanvas Can be used to inject a custom\n * renderer.\n * @property {boolean|number} responsive=false If set to `true` resize the\n * waveform, when the window is resized. This is debounced with a `100ms`\n * timeout by default. If this parameter is a number it represents that timeout.\n * @property {boolean} rtl=false If set to `true`, renders waveform from\n * right-to-left.\n * @property {boolean} scrollParent=false Whether to scroll the container with a\n * lengthy waveform. Otherwise the waveform is shrunk to the container width\n * (see fillParent).\n * @property {number} skipLength=2 Number of seconds to skip with the\n * skipForward() and skipBackward() methods.\n * @property {boolean} splitChannels=false Render with separate waveforms for\n * the channels of the audio\n * @property {SplitChannelOptions} splitChannelsOptions={} Options for splitChannel rendering\n * @property {boolean} vertical=false Render the waveform vertically instead of horizontally.\n * @property {string} waveColor='#999' The fill color of the waveform after the\n * cursor.\n * @property {object} xhr={} XHR options. For example:\n * `let xhr = {\n *     cache: 'default',\n *     mode: 'cors',\n *     method: 'GET',\n *     credentials: 'same-origin',\n *     redirect: 'follow',\n *     referrer: 'client',\n *     requestHeaders: [\n *         {\n *             key: 'Authorization',\n *             value: 'my-token'\n *         }\n *     ]\n * };`\n */\n\n/**\n * @typedef {Object} PluginDefinition\n * @desc The Object used to describe a plugin\n * @example wavesurfer.addPlugin(pluginDefinition);\n * @property {string} name The name of the plugin, the plugin instance will be\n * added as a property to the wavesurfer instance under this name\n * @property {?Object} staticProps The properties that should be added to the\n * wavesurfer instance as static properties\n * @property {?boolean} deferInit Don't initialise plugin\n * automatically\n * @property {Object} params={} The plugin parameters, they are the first parameter\n * passed to the plugin class constructor function\n * @property {PluginClass} instance The plugin instance factory, is called with\n * the dependency specified in extends. Returns the plugin class.\n */\n\n/**\n * @typedef {Object} SplitChannelOptions\n * @desc parameters applied when splitChannels option is true\n * @property {boolean} overlay=false determines whether channels are rendered on top of each other or on separate tracks\n * @property {object} channelColors={} object describing color for each channel. Example:\n * {\n *     0: {\n *         progressColor: 'green',\n *         waveColor: 'pink'\n *     },\n *     1: {\n *         progressColor: 'orange',\n *         waveColor: 'purple'\n *     }\n * }\n * @property {number[]} filterChannels=[] indexes of channels to be hidden from rendering\n * @property {boolean} relativeNormalization=false determines whether\n * normalization is done per channel or maintains proportionality between\n * channels. Only applied when normalize and splitChannels are both true.\n * @since 4.3.0\n */\n\n/**\n * @interface PluginClass\n *\n * @desc This is the interface which is implemented by all plugin classes. Note\n * that this only turns into an observer after being passed through\n * `wavesurfer.addPlugin`.\n *\n * @extends {Observer}\n */\nclass PluginClass {\n    /**\n     * Plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * It returns a `PluginDefinition` object representing the plugin.\n     *\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     */\n    create(params) {}\n    /**\n     * Construct the plugin\n     *\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     * @param {Object} ws The wavesurfer instance\n     */\n    constructor(params, ws) {}\n    /**\n     * Initialise the plugin\n     *\n     * Start doing something. This is called by\n     * `wavesurfer.initPlugin(pluginName)`\n     */\n    init() {}\n    /**\n     * Destroy the plugin instance\n     *\n     * Stop doing something. This is called by\n     * `wavesurfer.destroyPlugin(pluginName)`\n     */\n    destroy() {}\n}\n\n/**\n * WaveSurfer core library class\n *\n * @extends {Observer}\n * @example\n * const params = {\n *   container: '#waveform',\n *   waveColor: 'violet',\n *   progressColor: 'purple'\n * };\n *\n * // initialise like this\n * const wavesurfer = WaveSurfer.create(params);\n *\n * // or like this ...\n * const wavesurfer = new WaveSurfer(params);\n * wavesurfer.init();\n *\n * // load audio file\n * wavesurfer.load('example/media/demo.wav');\n */\nexport default class WaveSurfer extends util.Observer {\n    /** @private */\n    defaultParams = {\n        audioContext: null,\n        audioScriptProcessor: null,\n        audioRate: 1,\n        autoCenter: true,\n        autoCenterRate: 5,\n        autoCenterImmediately: false,\n        backend: 'WebAudio',\n        backgroundColor: null,\n        barHeight: 1,\n        barRadius: 0,\n        barGap: null,\n        barMinHeight: null,\n        container: null,\n        cursorColor: '#333',\n        cursorWidth: 1,\n        dragSelection: true,\n        drawingContextAttributes: {\n            // Boolean that hints the user agent to reduce the latency\n            // by desynchronizing the canvas paint cycle from the event\n            // loop\n            desynchronized: false\n        },\n        duration: null,\n        fillParent: true,\n        forceDecode: false,\n        height: 128,\n        hideScrollbar: false,\n        ignoreSilenceMode: false,\n        interact: true,\n        loopSelection: true,\n        maxCanvasWidth: 4000,\n        mediaContainer: null,\n        mediaControls: false,\n        mediaType: 'audio',\n        minPxPerSec: 20,\n        normalize: false,\n        partialRender: false,\n        pixelRatio:\n            window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\n        plugins: [],\n        progressColor: '#555',\n        removeMediaElementOnDestroy: true,\n        renderer: MultiCanvas,\n        responsive: false,\n        rtl: false,\n        scrollParent: false,\n        skipLength: 2,\n        splitChannels: false,\n        splitChannelsOptions: {\n            overlay: false,\n            channelColors: {},\n            filterChannels: [],\n            relativeNormalization: false\n        },\n        vertical: false,\n        waveColor: '#999',\n        xhr: {}\n    };\n\n    /** @private */\n    backends = {\n        MediaElement,\n        WebAudio,\n        MediaElementWebAudio\n    };\n\n    /**\n     * Instantiate this class, call its `init` function and returns it\n     *\n     * @param {WavesurferParams} params The wavesurfer parameters\n     * @return {Object} WaveSurfer instance\n     * @example const wavesurfer = WaveSurfer.create(params);\n     */\n    static create(params) {\n        const wavesurfer = new WaveSurfer(params);\n        return wavesurfer.init();\n    }\n\n    /**\n     * The library version number is available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {String}\n     * @example\n     * console.log('Using wavesurfer.js ' + WaveSurfer.VERSION);\n     */\n    static VERSION = __VERSION__;\n\n    /**\n     * Functions in the `util` property are available as a prototype property to\n     * all instances\n     *\n     * @type {Object}\n     * @example\n     * const wavesurfer = WaveSurfer.create(params);\n     * wavesurfer.util.style(myElement, { background: 'blue' });\n     */\n    util = util;\n\n    /**\n     * Functions in the `util` property are available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {Object}\n     * @example\n     * WaveSurfer.util.style(myElement, { background: 'blue' });\n     */\n    static util = util;\n\n    /**\n     * Initialise wavesurfer instance\n     *\n     * @param {WavesurferParams} params Instantiation options for wavesurfer\n     * @example\n     * const wavesurfer = new WaveSurfer(params);\n     * @returns {this} Wavesurfer instance\n     */\n    constructor(params) {\n        super();\n        /**\n         * Extract relevant parameters (or defaults)\n         * @private\n         */\n        this.params = Object.assign({}, this.defaultParams, params);\n        this.params.splitChannelsOptions = Object.assign(\n            {},\n            this.defaultParams.splitChannelsOptions,\n            params.splitChannelsOptions\n        );\n        /** @private */\n        this.container =\n            'string' == typeof params.container\n                ? document.querySelector(this.params.container)\n                : this.params.container;\n\n        if (!this.container) {\n            throw new Error('Container element not found');\n        }\n\n        if (this.params.mediaContainer == null) {\n            /** @private */\n            this.mediaContainer = this.container;\n        } else if (typeof this.params.mediaContainer == 'string') {\n            /** @private */\n            this.mediaContainer = document.querySelector(\n                this.params.mediaContainer\n            );\n        } else {\n            /** @private */\n            this.mediaContainer = this.params.mediaContainer;\n        }\n\n        if (!this.mediaContainer) {\n            throw new Error('Media Container element not found');\n        }\n\n        if (this.params.maxCanvasWidth <= 1) {\n            throw new Error('maxCanvasWidth must be greater than 1');\n        } else if (this.params.maxCanvasWidth % 2 == 1) {\n            throw new Error('maxCanvasWidth must be an even number');\n        }\n\n        if (this.params.rtl === true) {\n            if (this.params.vertical === true) {\n                util.style(this.container, { transform: 'rotateX(180deg)' });\n            } else {\n                util.style(this.container, { transform: 'rotateY(180deg)' });\n            }\n        }\n\n        if (this.params.backgroundColor) {\n            this.setBackgroundColor(this.params.backgroundColor);\n        }\n\n        /**\n         * @private Used to save the current volume when muting so we can\n         * restore once unmuted\n         * @type {number}\n         */\n        this.savedVolume = 0;\n\n        /**\n         * @private The current muted state\n         * @type {boolean}\n         */\n        this.isMuted = false;\n\n        /**\n         * @private Will hold a list of event descriptors that need to be\n         * canceled on subsequent loads of audio\n         * @type {Object[]}\n         */\n        this.tmpEvents = [];\n\n        /**\n         * @private Holds any running audio downloads\n         * @type {Observer}\n         */\n        this.currentRequest = null;\n        /** @private */\n        this.arraybuffer = null;\n        /** @private */\n        this.drawer = null;\n        /** @private */\n        this.backend = null;\n        /** @private */\n        this.peakCache = null;\n\n        // cache constructor objects\n        if (typeof this.params.renderer !== 'function') {\n            throw new Error('Renderer parameter is invalid');\n        }\n        /**\n         * @private The uninitialised Drawer class\n         */\n        this.Drawer = this.params.renderer;\n        /**\n         * @private The uninitialised Backend class\n         */\n        // Back compat\n        if (this.params.backend == 'AudioElement') {\n            this.params.backend = 'MediaElement';\n        }\n\n        if (\n            (this.params.backend == 'WebAudio' ||\n                this.params.backend === 'MediaElementWebAudio') &&\n            !WebAudio.prototype.supportsWebAudio.call(null)\n        ) {\n            this.params.backend = 'MediaElement';\n        }\n        this.Backend = this.backends[this.params.backend];\n\n        /**\n         * @private map of plugin names that are currently initialised\n         */\n        this.initialisedPluginList = {};\n        /** @private */\n        this.isDestroyed = false;\n\n        /**\n         * Get the current ready status.\n         *\n         * @example const isReady = wavesurfer.isReady;\n         * @return {boolean}\n         */\n        this.isReady = false;\n\n        // responsive debounced event listener. If this.params.responsive is not\n        // set, this is never called. Use 100ms or this.params.responsive as\n        // timeout for the debounce function.\n        let prevWidth = 0;\n        this._onResize = util.debounce(\n            () => {\n                if (\n                    prevWidth != this.drawer.wrapper.clientWidth &&\n                    !this.params.scrollParent\n                ) {\n                    prevWidth = this.drawer.wrapper.clientWidth;\n                    this.drawer.fireEvent('redraw');\n                }\n            },\n            typeof this.params.responsive === 'number'\n                ? this.params.responsive\n                : 100\n        );\n\n        return this;\n    }\n\n    /**\n     * Initialise the wave\n     *\n     * @example\n     * var wavesurfer = new WaveSurfer(params);\n     * wavesurfer.init();\n     * @return {this} The wavesurfer instance\n     */\n    init() {\n        this.registerPlugins(this.params.plugins);\n        this.createDrawer();\n        this.createBackend();\n        this.createPeakCache();\n        return this;\n    }\n\n    /**\n     * Add and initialise array of plugins (if `plugin.deferInit` is falsey),\n     * this function is called in the init function of wavesurfer\n     *\n     * @param {PluginDefinition[]} plugins An array of plugin definitions\n     * @emits {WaveSurfer#plugins-registered} Called with the array of plugin definitions\n     * @return {this} The wavesurfer instance\n     */\n    registerPlugins(plugins) {\n        // first instantiate all the plugins\n        plugins.forEach(plugin => this.addPlugin(plugin));\n\n        // now run the init functions\n        plugins.forEach(plugin => {\n            // call init function of the plugin if deferInit is falsey\n            // in that case you would manually use initPlugins()\n            if (!plugin.deferInit) {\n                this.initPlugin(plugin.name);\n            }\n        });\n        this.fireEvent('plugins-registered', plugins);\n        return this;\n    }\n\n    /**\n     * Get a map of plugin names that are currently initialised\n     *\n     * @example wavesurfer.getPlugins();\n     * @return {Object} Object with plugin names\n     */\n    getActivePlugins() {\n        return this.initialisedPluginList;\n    }\n\n    /**\n     * Add a plugin object to wavesurfer\n     *\n     * @param {PluginDefinition} plugin A plugin definition\n     * @emits {WaveSurfer#plugin-added} Called with the name of the plugin that was added\n     * @example wavesurfer.addPlugin(WaveSurfer.minimap());\n     * @return {this} The wavesurfer instance\n     */\n    addPlugin(plugin) {\n        if (!plugin.name) {\n            throw new Error('Plugin does not have a name!');\n        }\n        if (!plugin.instance) {\n            throw new Error(\n                `Plugin ${plugin.name} does not have an instance property!`\n            );\n        }\n\n        // staticProps properties are applied to wavesurfer instance\n        if (plugin.staticProps) {\n            Object.keys(plugin.staticProps).forEach(pluginStaticProp => {\n                /**\n                 * Properties defined in a plugin definition's `staticProps` property are added as\n                 * staticProps properties of the WaveSurfer instance\n                 */\n                this[pluginStaticProp] = plugin.staticProps[pluginStaticProp];\n            });\n        }\n\n        const Instance = plugin.instance;\n\n        // turn the plugin instance into an observer\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\n            util.Observer.prototype\n        );\n        observerPrototypeKeys.forEach(key => {\n            Instance.prototype[key] = util.Observer.prototype[key];\n        });\n\n        /**\n         * Instantiated plugin classes are added as a property of the wavesurfer\n         * instance\n         * @type {Object}\n         */\n        this[plugin.name] = new Instance(plugin.params || {}, this);\n        this.fireEvent('plugin-added', plugin.name);\n        return this;\n    }\n\n    /**\n     * Initialise a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-initialised\n     * @example wavesurfer.initPlugin('minimap');\n     * @return {this} The wavesurfer instance\n     */\n    initPlugin(name) {\n        if (!this[name]) {\n            throw new Error(`Plugin ${name} has not been added yet!`);\n        }\n        if (this.initialisedPluginList[name]) {\n            // destroy any already initialised plugins\n            this.destroyPlugin(name);\n        }\n        this[name].init();\n        this.initialisedPluginList[name] = true;\n        this.fireEvent('plugin-initialised', name);\n        return this;\n    }\n\n    /**\n     * Destroy a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-destroyed\n     * @example wavesurfer.destroyPlugin('minimap');\n     * @returns {this} The wavesurfer instance\n     */\n    destroyPlugin(name) {\n        if (!this[name]) {\n            throw new Error(\n                `Plugin ${name} has not been added yet and cannot be destroyed!`\n            );\n        }\n        if (!this.initialisedPluginList[name]) {\n            throw new Error(\n                `Plugin ${name} is not active and cannot be destroyed!`\n            );\n        }\n        if (typeof this[name].destroy !== 'function') {\n            throw new Error(`Plugin ${name} does not have a destroy function!`);\n        }\n\n        this[name].destroy();\n        delete this.initialisedPluginList[name];\n        this.fireEvent('plugin-destroyed', name);\n        return this;\n    }\n\n    /**\n     * Destroy all initialised plugins. Convenience function to use when\n     * wavesurfer is removed\n     *\n     * @private\n     */\n    destroyAllPlugins() {\n        Object.keys(this.initialisedPluginList).forEach(name =>\n            this.destroyPlugin(name)\n        );\n    }\n\n    /**\n     * Create the drawer and draw the waveform\n     *\n     * @private\n     * @emits WaveSurfer#drawer-created\n     */\n    createDrawer() {\n        this.drawer = new this.Drawer(this.container, this.params);\n        this.drawer.init();\n        this.fireEvent('drawer-created', this.drawer);\n\n        if (this.params.responsive !== false) {\n            window.addEventListener('resize', this._onResize, true);\n            window.addEventListener('orientationchange', this._onResize, true);\n        }\n\n        this.drawer.on('redraw', () => {\n            this.drawBuffer();\n            this.drawer.progress(this.backend.getPlayedPercents());\n        });\n\n        // Click-to-seek\n        this.drawer.on('click', (e, progress) => {\n            setTimeout(() => this.seekTo(progress), 0);\n        });\n\n        // Relay the scroll event from the drawer\n        this.drawer.on('scroll', e => {\n            if (this.params.partialRender) {\n                this.drawBuffer();\n            }\n            this.fireEvent('scroll', e);\n        });\n    }\n\n    /**\n     * Create the backend\n     *\n     * @private\n     * @emits WaveSurfer#backend-created\n     */\n    createBackend() {\n        if (this.backend) {\n            this.backend.destroy();\n        }\n\n        this.backend = new this.Backend(this.params);\n        this.backend.init();\n        this.fireEvent('backend-created', this.backend);\n\n        this.backend.on('finish', () => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('finish');\n        });\n        this.backend.on('play', () => this.fireEvent('play'));\n        this.backend.on('pause', () => this.fireEvent('pause'));\n\n        this.backend.on('audioprocess', time => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('audioprocess', time);\n        });\n\n        // only needed for MediaElement and MediaElementWebAudio backend\n        if (\n            this.params.backend === 'MediaElement' ||\n            this.params.backend === 'MediaElementWebAudio'\n        ) {\n            this.backend.on('seek', () => {\n                this.drawer.progress(this.backend.getPlayedPercents());\n            });\n\n            this.backend.on('volume', () => {\n                let newVolume = this.getVolume();\n                this.fireEvent('volume', newVolume);\n\n                if (this.backend.isMuted !== this.isMuted) {\n                    this.isMuted = this.backend.isMuted;\n                    this.fireEvent('mute', this.isMuted);\n                }\n            });\n        }\n    }\n\n    /**\n     * Create the peak cache\n     *\n     * @private\n     */\n    createPeakCache() {\n        if (this.params.partialRender) {\n            this.peakCache = new PeakCache();\n        }\n    }\n\n    /**\n     * Get the duration of the audio clip\n     *\n     * @example const duration = wavesurfer.getDuration();\n     * @return {number} Duration in seconds\n     */\n    getDuration() {\n        return this.backend.getDuration();\n    }\n\n    /**\n     * Get the current playback position\n     *\n     * @example const currentTime = wavesurfer.getCurrentTime();\n     * @return {number} Playback position in seconds\n     */\n    getCurrentTime() {\n        return this.backend.getCurrentTime();\n    }\n\n    /**\n     * Set the current play time in seconds.\n     *\n     * @param {number} seconds A positive number in seconds. E.g. 10 means 10\n     * seconds, 60 means 1 minute\n     */\n    setCurrentTime(seconds) {\n        if (seconds >= this.getDuration()) {\n            this.seekTo(1);\n        } else {\n            this.seekTo(seconds / this.getDuration());\n        }\n    }\n\n    /**\n     * Starts playback from the current position. Optional start and end\n     * measured in seconds can be used to set the range of audio to play.\n     *\n     * @param {?number} start Position to start at\n     * @param {?number} end Position to end at\n     * @emits WaveSurfer#interaction\n     * @return {Promise} Result of the backend play method\n     * @example\n     * // play from second 1 to 5\n     * wavesurfer.play(1, 5);\n     */\n    play(start, end) {\n        if (this.params.ignoreSilenceMode) {\n            // ignores device hardware silence mode\n            util.ignoreSilenceMode();\n        }\n\n        this.fireEvent('interaction', () => this.play(start, end));\n        return this.backend.play(start, end);\n    }\n\n    /**\n     * Set a point in seconds for playback to stop at.\n     *\n     * @param {number} position Position (in seconds) to stop at\n     * @version 3.3.0\n     */\n    setPlayEnd(position) {\n        this.backend.setPlayEnd(position);\n    }\n\n    /**\n     * Stops and pauses playback\n     *\n     * @example wavesurfer.pause();\n     * @return {Promise} Result of the backend pause method\n     */\n    pause() {\n        if (!this.backend.isPaused()) {\n            return this.backend.pause();\n        }\n    }\n\n    /**\n     * Toggle playback\n     *\n     * @example wavesurfer.playPause();\n     * @return {Promise} Result of the backend play or pause method\n     */\n    playPause() {\n        return this.backend.isPaused() ? this.play() : this.pause();\n    }\n\n    /**\n     * Get the current playback state\n     *\n     * @example const isPlaying = wavesurfer.isPlaying();\n     * @return {boolean} False if paused, true if playing\n     */\n    isPlaying() {\n        return !this.backend.isPaused();\n    }\n\n    /**\n     * Skip backward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipBackward();\n     */\n    skipBackward(seconds) {\n        this.skip(-seconds || -this.params.skipLength);\n    }\n\n    /**\n     * Skip forward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipForward();\n     */\n    skipForward(seconds) {\n        this.skip(seconds || this.params.skipLength);\n    }\n\n    /**\n     * Skip a number of seconds from the current position (use a negative value\n     * to go backwards).\n     *\n     * @param {number} offset Amount to skip back or forwards\n     * @example\n     * // go back 2 seconds\n     * wavesurfer.skip(-2);\n     */\n    skip(offset) {\n        const duration = this.getDuration() || 1;\n        let position = this.getCurrentTime() || 0;\n        position = Math.max(0, Math.min(duration, position + (offset || 0)));\n        this.seekAndCenter(position / duration);\n    }\n\n    /**\n     * Seeks to a position and centers the view\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @example\n     * // seek and go to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekAndCenter(progress) {\n        this.seekTo(progress);\n        this.drawer.recenter(progress);\n    }\n\n    /**\n     * Seeks to a position\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @emits WaveSurfer#interaction\n     * @emits WaveSurfer#seek\n     * @example\n     * // seek to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekTo(progress) {\n        // return an error if progress is not a number between 0 and 1\n        if (\n            typeof progress !== 'number' ||\n            !isFinite(progress) ||\n            progress < 0 ||\n            progress > 1\n        ) {\n            throw new Error(\n                'Error calling wavesurfer.seekTo, parameter must be a number between 0 and 1!'\n            );\n        }\n        this.fireEvent('interaction', () => this.seekTo(progress));\n\n        const isWebAudioBackend = this.params.backend === 'WebAudio';\n        const paused = this.backend.isPaused();\n\n        if (isWebAudioBackend && !paused) {\n            this.backend.pause();\n        }\n\n        // avoid small scrolls while paused seeking\n        const oldScrollParent = this.params.scrollParent;\n        this.params.scrollParent = false;\n        this.backend.seekTo(progress * this.getDuration());\n        this.drawer.progress(progress);\n\n        if (isWebAudioBackend && !paused) {\n            this.backend.play();\n        }\n\n        this.params.scrollParent = oldScrollParent;\n        this.fireEvent('seek', progress);\n    }\n\n    /**\n     * Stops and goes to the beginning.\n     *\n     * @example wavesurfer.stop();\n     */\n    stop() {\n        this.pause();\n        this.seekTo(0);\n        this.drawer.progress(0);\n    }\n\n    /**\n     * Sets the ID of the audio device to use for output and returns a Promise.\n     *\n     * @param {string} deviceId String value representing underlying output\n     * device\n     * @returns {Promise} `Promise` that resolves to `undefined` when there are\n     * no errors detected.\n     */\n    setSinkId(deviceId) {\n        return this.backend.setSinkId(deviceId);\n    }\n\n    /**\n     * Set the playback volume.\n     *\n     * @param {number} newVolume A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     * @emits WaveSurfer#volume\n     */\n    setVolume(newVolume) {\n        this.backend.setVolume(newVolume);\n        this.fireEvent('volume', newVolume);\n    }\n\n    /**\n     * Get the playback volume.\n     *\n     * @return {number} A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     */\n    getVolume() {\n        return this.backend.getVolume();\n    }\n\n    /**\n     * Set the playback rate.\n     *\n     * @param {number} rate A positive number. E.g. 0.5 means half the normal\n     * speed, 2 means double speed and so on.\n     * @example wavesurfer.setPlaybackRate(2);\n     */\n    setPlaybackRate(rate) {\n        this.backend.setPlaybackRate(rate);\n    }\n\n    /**\n     * Get the playback rate.\n     *\n     * @return {number} The current playback rate.\n     */\n    getPlaybackRate() {\n        return this.backend.getPlaybackRate();\n    }\n\n    /**\n     * Toggle the volume on and off. If not currently muted it will save the\n     * current volume value and turn the volume off. If currently muted then it\n     * will restore the volume to the saved value, and then rest the saved\n     * value.\n     *\n     * @example wavesurfer.toggleMute();\n     */\n    toggleMute() {\n        this.setMute(!this.isMuted);\n    }\n\n    /**\n     * Enable or disable muted audio\n     *\n     * @param {boolean} mute Specify `true` to mute audio.\n     * @emits WaveSurfer#volume\n     * @emits WaveSurfer#mute\n     * @example\n     * // unmute\n     * wavesurfer.setMute(false);\n     * console.log(wavesurfer.getMute()) // logs false\n     */\n    setMute(mute) {\n        // ignore all muting requests if the audio is already in that state\n        if (mute === this.isMuted) {\n            this.fireEvent('mute', this.isMuted);\n            return;\n        }\n\n        if (this.backend.setMute) {\n            // Backends such as the MediaElement backend have their own handling\n            // of mute, let them handle it.\n            this.backend.setMute(mute);\n            this.isMuted = mute;\n        } else {\n            if (mute) {\n                // If currently not muted then save current volume,\n                // turn off the volume and update the mute properties\n                this.savedVolume = this.backend.getVolume();\n                this.backend.setVolume(0);\n                this.isMuted = true;\n                this.fireEvent('volume', 0);\n            } else {\n                // If currently muted then restore to the saved volume\n                // and update the mute properties\n                this.backend.setVolume(this.savedVolume);\n                this.isMuted = false;\n                this.fireEvent('volume', this.savedVolume);\n            }\n        }\n        this.fireEvent('mute', this.isMuted);\n    }\n\n    /**\n     * Get the current mute status.\n     *\n     * @example const isMuted = wavesurfer.getMute();\n     * @return {boolean} Current mute status\n     */\n    getMute() {\n        return this.isMuted;\n    }\n\n    /**\n     * Get the list of current set filters as an array.\n     *\n     * Filters must be set with setFilters method first\n     *\n     * @return {array} List of enabled filters\n     */\n    getFilters() {\n        return this.backend.filters || [];\n    }\n\n    /**\n     * Toggles `scrollParent` and redraws\n     *\n     * @example wavesurfer.toggleScroll();\n     */\n    toggleScroll() {\n        this.params.scrollParent = !this.params.scrollParent;\n        this.drawBuffer();\n    }\n\n    /**\n     * Toggle mouse interaction\n     *\n     * @example wavesurfer.toggleInteraction();\n     */\n    toggleInteraction() {\n        this.params.interact = !this.params.interact;\n    }\n\n    /**\n     * Get the fill color of the waveform after the cursor.\n     *\n     * @return {string} A CSS color string.\n     */\n    getWaveColor() {\n        return this.params.waveColor;\n    }\n\n    /**\n     * Set the fill color of the waveform after the cursor.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setWaveColor('#ddd');\n     */\n    setWaveColor(color) {\n        this.params.waveColor = color;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the fill color of the waveform behind the cursor.\n     *\n     * @return {string} A CSS color string.\n     */\n    getProgressColor() {\n        return this.params.progressColor;\n    }\n\n    /**\n     * Set the fill color of the waveform behind the cursor.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setProgressColor('#400');\n     */\n    setProgressColor(color) {\n        this.params.progressColor = color;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the background color of the waveform container.\n     *\n     * @return {string} A CSS color string.\n     */\n    getBackgroundColor() {\n        return this.params.backgroundColor;\n    }\n\n    /**\n     * Set the background color of the waveform container.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setBackgroundColor('#FF00FF');\n     */\n    setBackgroundColor(color) {\n        this.params.backgroundColor = color;\n        util.style(this.container, { background: this.params.backgroundColor });\n    }\n\n    /**\n     * Get the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @return {string} A CSS color string.\n     */\n    getCursorColor() {\n        return this.params.cursorColor;\n    }\n\n    /**\n     * Set the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setCursorColor('#222');\n     */\n    setCursorColor(color) {\n        this.params.cursorColor = color;\n        this.drawer.updateCursor();\n    }\n\n    /**\n     * Get the height of the waveform.\n     *\n     * @return {number} Height measured in pixels.\n     */\n    getHeight() {\n        return this.params.height;\n    }\n\n    /**\n     * Set the height of the waveform.\n     *\n     * @param {number} height Height measured in pixels.\n     * @example wavesurfer.setHeight(200);\n     */\n    setHeight(height) {\n        this.params.height = height;\n        this.drawer.setHeight(height * this.params.pixelRatio);\n        this.drawBuffer();\n    }\n\n    /**\n     * Hide channels from being drawn on the waveform if splitting channels.\n     *\n     * For example, if we want to draw only the peaks for the right stereo channel:\n     *\n     * const wavesurfer = new WaveSurfer.create({...splitChannels: true});\n     * wavesurfer.load('stereo_audio.mp3');\n     *\n     * wavesurfer.setFilteredChannel([0]); <-- hide left channel peaks.\n     *\n     * @param {array} channelIndices Channels to be filtered out from drawing.\n     * @version 4.0.0\n     */\n    setFilteredChannels(channelIndices) {\n        this.params.splitChannelsOptions.filterChannels = channelIndices;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the correct peaks for current wave view-port and render wave\n     *\n     * @private\n     * @emits WaveSurfer#redraw\n     */\n    drawBuffer() {\n        const nominalWidth = Math.round(\n            this.getDuration() *\n                this.params.minPxPerSec *\n                this.params.pixelRatio\n        );\n        const parentWidth = this.drawer.getWidth();\n        let width = nominalWidth;\n        // always start at 0 after zooming for scrolling : issue redraw left part\n        let start = 0;\n        let end = Math.max(start + parentWidth, width);\n        // Fill container\n        if (\n            this.params.fillParent &&\n            (!this.params.scrollParent || nominalWidth < parentWidth)\n        ) {\n            width = parentWidth;\n            start = 0;\n            end = width;\n        }\n\n        let peaks;\n        if (this.params.partialRender) {\n            const newRanges = this.peakCache.addRangeToPeakCache(\n                width,\n                start,\n                end\n            );\n            let i;\n            for (i = 0; i < newRanges.length; i++) {\n                peaks = this.backend.getPeaks(\n                    width,\n                    newRanges[i][0],\n                    newRanges[i][1]\n                );\n                this.drawer.drawPeaks(\n                    peaks,\n                    width,\n                    newRanges[i][0],\n                    newRanges[i][1]\n                );\n            }\n        } else {\n            peaks = this.backend.getPeaks(width, start, end);\n            this.drawer.drawPeaks(peaks, width, start, end);\n        }\n        this.fireEvent('redraw', peaks, width);\n    }\n\n    /**\n     * Horizontally zooms the waveform in and out. It also changes the parameter\n     * `minPxPerSec` and enables the `scrollParent` option. Calling the function\n     * with a falsey parameter will reset the zoom state.\n     *\n     * @param {?number} pxPerSec Number of horizontal pixels per second of\n     * audio, if none is set the waveform returns to unzoomed state\n     * @emits WaveSurfer#zoom\n     * @example wavesurfer.zoom(20);\n     */\n    zoom(pxPerSec) {\n        if (!pxPerSec) {\n            this.params.minPxPerSec = this.defaultParams.minPxPerSec;\n            this.params.scrollParent = false;\n        } else {\n            this.params.minPxPerSec = pxPerSec;\n            this.params.scrollParent = true;\n        }\n\n        this.drawBuffer();\n        this.drawer.progress(this.backend.getPlayedPercents());\n\n        this.drawer.recenter(this.getCurrentTime() / this.getDuration());\n        this.fireEvent('zoom', pxPerSec);\n    }\n\n    /**\n     * Decode buffer and load\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer Buffer to process\n     */\n    loadArrayBuffer(arraybuffer) {\n        this.decodeArrayBuffer(arraybuffer, data => {\n            if (!this.isDestroyed) {\n                this.loadDecodedBuffer(data);\n            }\n        });\n    }\n\n    /**\n     * Directly load an externally decoded AudioBuffer\n     *\n     * @private\n     * @param {AudioBuffer} buffer Buffer to process\n     * @emits WaveSurfer#ready\n     */\n    loadDecodedBuffer(buffer) {\n        this.backend.load(buffer);\n        this.drawBuffer();\n        this.isReady = true;\n        this.fireEvent('ready');\n    }\n\n    /**\n     * Loads audio data from a Blob or File object\n     *\n     * @param {Blob|File} blob Audio data\n     * @example\n     */\n    loadBlob(blob) {\n        // Create file reader\n        const reader = new FileReader();\n        reader.addEventListener('progress', e => this.onProgress(e));\n        reader.addEventListener('load', e =>\n            this.loadArrayBuffer(e.target.result)\n        );\n        reader.addEventListener('error', () =>\n            this.fireEvent('error', 'Error reading file')\n        );\n        reader.readAsArrayBuffer(blob);\n        this.empty();\n    }\n\n    /**\n     * Loads audio and re-renders the waveform.\n     *\n     * @param {string|HTMLMediaElement} url The url of the audio file or the\n     * audio element with the audio\n     * @param {number[]|Number.<Array[]>} peaks Wavesurfer does not have to decode\n     * the audio to render the waveform if this is specified\n     * @param {?string} preload (Use with backend `MediaElement` and `MediaElementWebAudio`)\n     * `'none'|'metadata'|'auto'` Preload attribute for the media element\n     * @param {?number} duration The duration of the audio. This is used to\n     * render the peaks data in the correct size for the audio duration (as\n     * befits the current `minPxPerSec` and zoom value) without having to decode\n     * the audio.\n     * @returns {void}\n     * @throws Will throw an error if the `url` argument is empty.\n     * @example\n     * // uses fetch or media element to load file (depending on backend)\n     * wavesurfer.load('http://example.com/demo.wav');\n     *\n     * // setting preload attribute with media element backend and supplying\n     * // peaks\n     * wavesurfer.load(\n     *   'http://example.com/demo.wav',\n     *   [0.0218, 0.0183, 0.0165, 0.0198, 0.2137, 0.2888],\n     *   true\n     * );\n     */\n    load(url, peaks, preload, duration) {\n        if (!url) {\n            throw new Error('url parameter cannot be empty');\n        }\n        this.empty();\n        if (preload) {\n            // check whether the preload attribute will be usable and if not log\n            // a warning listing the reasons why not and nullify the variable\n            const preloadIgnoreReasons = {\n                \"Preload is not 'auto', 'none' or 'metadata'\":\n                    ['auto', 'metadata', 'none'].indexOf(preload) === -1,\n                'Peaks are not provided': !peaks,\n                \"Backend is not of type 'MediaElement' or 'MediaElementWebAudio'\":\n                    ['MediaElement', 'MediaElementWebAudio'].indexOf(\n                        this.params.backend\n                    ) === -1,\n                'Url is not of type string': typeof url !== 'string'\n            };\n            const activeReasons = Object.keys(preloadIgnoreReasons).filter(\n                reason => preloadIgnoreReasons[reason]\n            );\n            if (activeReasons.length) {\n                // eslint-disable-next-line no-console\n                console.warn(\n                    'Preload parameter of wavesurfer.load will be ignored because:\\n\\t- ' +\n                        activeReasons.join('\\n\\t- ')\n                );\n                // stop invalid values from being used\n                preload = null;\n            }\n        }\n\n        // loadBuffer(url, peaks, duration) requires that url is a string\n        // but users can pass in a HTMLMediaElement to WaveSurfer\n        if (this.params.backend === 'WebAudio' && url instanceof HTMLMediaElement) {\n            url = url.src;\n        }\n\n        switch (this.params.backend) {\n            case 'WebAudio':\n                return this.loadBuffer(url, peaks, duration);\n            case 'MediaElement':\n            case 'MediaElementWebAudio':\n                return this.loadMediaElement(url, peaks, preload, duration);\n        }\n    }\n\n    /**\n     * Loads audio using Web Audio buffer backend.\n     *\n     * @private\n     * @emits WaveSurfer#waveform-ready\n     * @param {string} url URL of audio file\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\n     * @param {?number} duration Optional duration of audio file\n     * @returns {void}\n     */\n    loadBuffer(url, peaks, duration) {\n        const load = action => {\n            if (action) {\n                this.tmpEvents.push(this.once('ready', action));\n            }\n            return this.getArrayBuffer(url, data => this.loadArrayBuffer(data));\n        };\n\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n            this.drawBuffer();\n            this.fireEvent('waveform-ready');\n            this.tmpEvents.push(this.once('interaction', load));\n        } else {\n            return load();\n        }\n    }\n\n    /**\n     * Either create a media element, or load an existing media element.\n     *\n     * @private\n     * @emits WaveSurfer#waveform-ready\n     * @param {string|HTMLMediaElement} urlOrElt Either a path to a media file, or an\n     * existing HTML5 Audio/Video Element\n     * @param {number[]|Number.<Array[]>} peaks Array of peaks. Required to bypass web audio\n     * dependency\n     * @param {?boolean} preload Set to true if the preload attribute of the\n     * audio element should be enabled\n     * @param {?number} duration Optional duration of audio file\n     */\n    loadMediaElement(urlOrElt, peaks, preload, duration) {\n        let url = urlOrElt;\n\n        if (typeof urlOrElt === 'string') {\n            this.backend.load(url, this.mediaContainer, peaks, preload);\n        } else {\n            const elt = urlOrElt;\n            this.backend.loadElt(elt, peaks);\n\n            // If peaks are not provided,\n            // url = element.src so we can get peaks with web audio\n            url = elt.src;\n        }\n\n        this.tmpEvents.push(\n            this.backend.once('canplay', () => {\n                // ignore when backend was already destroyed\n                if (!this.backend.destroyed) {\n                    this.drawBuffer();\n                    this.isReady = true;\n                    this.fireEvent('ready');\n                }\n            }),\n            this.backend.once('error', err => this.fireEvent('error', err))\n        );\n\n        // If peaks are provided, render them and fire the `waveform-ready` event.\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n            this.drawBuffer();\n            this.fireEvent('waveform-ready');\n        }\n\n        // If no pre-decoded peaks are provided, or are provided with\n        // forceDecode flag, attempt to download the audio file and decode it\n        // with Web Audio.\n        if (\n            (!peaks || this.params.forceDecode) &&\n            this.backend.supportsWebAudio()\n        ) {\n            this.getArrayBuffer(url, arraybuffer => {\n                this.decodeArrayBuffer(arraybuffer, buffer => {\n                    this.backend.buffer = buffer;\n                    this.backend.setPeaks(null);\n                    this.drawBuffer();\n                    this.fireEvent('waveform-ready');\n                });\n            });\n        }\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {Object} arraybuffer The array buffer to decode\n     * @param {function} callback The function to call on complete\n     */\n    decodeArrayBuffer(arraybuffer, callback) {\n        if (!this.isDestroyed) {\n            this.arraybuffer = arraybuffer;\n            this.backend.decodeArrayBuffer(\n                arraybuffer,\n                data => {\n                    // Only use the decoded data if we haven't been destroyed or\n                    // another decode started in the meantime\n                    if (!this.isDestroyed && this.arraybuffer == arraybuffer) {\n                        callback(data);\n                        this.arraybuffer = null;\n                    }\n                },\n                () => this.fireEvent('error', 'Error decoding audiobuffer')\n            );\n        }\n    }\n\n    /**\n     * Load an array buffer using fetch and pass the result to a callback\n     *\n     * @param {string} url The URL of the file object\n     * @param {function} callback The function to call on complete\n     * @returns {util.fetchFile} fetch call\n     * @private\n     */\n    getArrayBuffer(url, callback) {\n        let options = Object.assign(\n            {\n                url: url,\n                responseType: 'arraybuffer'\n            },\n            this.params.xhr\n        );\n        const request = util.fetchFile(options);\n\n        this.currentRequest = request;\n\n        this.tmpEvents.push(\n            request.on('progress', e => {\n                this.onProgress(e);\n            }),\n            request.on('success', data => {\n                callback(data);\n                this.currentRequest = null;\n            }),\n            request.on('error', e => {\n                this.fireEvent('error', e);\n                this.currentRequest = null;\n            })\n        );\n\n        return request;\n    }\n\n    /**\n     * Called while the audio file is loading\n     *\n     * @private\n     * @param {Event} e Progress event\n     * @emits WaveSurfer#loading\n     */\n    onProgress(e) {\n        let percentComplete;\n        if (e.lengthComputable) {\n            percentComplete = e.loaded / e.total;\n        } else {\n            // Approximate progress with an asymptotic\n            // function, and assume downloads in the 1-3 MB range.\n            percentComplete = e.loaded / (e.loaded + 1000000);\n        }\n        this.fireEvent('loading', Math.round(percentComplete * 100), e.target);\n    }\n\n    /**\n     * Exports PCM data into a JSON array and optionally opens in a new window\n     * as valid JSON Blob instance.\n     *\n     * @param {number} length=1024 The scale in which to export the peaks\n     * @param {number} accuracy=10000\n     * @param {?boolean} noWindow Set to true to disable opening a new\n     * window with the JSON\n     * @param {number} start Start index\n     * @param {number} end End index\n     * @return {Promise} Promise that resolves with array of peaks\n     */\n    exportPCM(length, accuracy, noWindow, start, end) {\n        length = length || 1024;\n        start = start || 0;\n        accuracy = accuracy || 10000;\n        noWindow = noWindow || false;\n        const peaks = this.backend.getPeaks(length, start, end);\n        const arr = [].map.call(\n            peaks,\n            val => Math.round(val * accuracy) / accuracy\n        );\n\n        return new Promise((resolve, reject) => {\n            if (!noWindow){\n                const blobJSON = new Blob(\n                    [JSON.stringify(arr)],\n                    {type: 'application/json;charset=utf-8'}\n                );\n                const objURL = URL.createObjectURL(blobJSON);\n                window.open(objURL);\n                URL.revokeObjectURL(objURL);\n            }\n            resolve(arr);\n        });\n    }\n\n    /**\n     * Save waveform image as data URI.\n     *\n     * The default format is `'image/png'`. Other supported types are\n     * `'image/jpeg'` and `'image/webp'`.\n     *\n     * @param {string} format='image/png' A string indicating the image format.\n     * The default format type is `'image/png'`.\n     * @param {number} quality=1 A number between 0 and 1 indicating the image\n     * quality to use for image formats that use lossy compression such as\n     * `'image/jpeg'`` and `'image/webp'`.\n     * @param {string} type Image data type to return. Either 'dataURL' (default)\n     * or 'blob'.\n     * @return {string|string[]|Promise} When using `'dataURL'` type this returns\n     * a single data URL or an array of data URLs, one for each canvas. When using\n     * `'blob'` type this returns a `Promise` resolving with an array of `Blob`\n     * instances, one for each canvas.\n     */\n    exportImage(format, quality, type) {\n        if (!format) {\n            format = 'image/png';\n        }\n        if (!quality) {\n            quality = 1;\n        }\n        if (!type) {\n            type = 'dataURL';\n        }\n\n        return this.drawer.getImage(format, quality, type);\n    }\n\n    /**\n     * Cancel any fetch request currently in progress\n     */\n    cancelAjax() {\n        if (this.currentRequest && this.currentRequest.controller) {\n            // If the current request has a ProgressHandler, then its ReadableStream might need to be cancelled too\n            // See: Wavesurfer issue #2042\n            // See Firefox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1583815\n            if (this.currentRequest._reader) {\n                // Ignoring exceptions thrown by call to cancel()\n                this.currentRequest._reader.cancel().catch(err => {});\n            }\n\n            this.currentRequest.controller.abort();\n            this.currentRequest = null;\n        }\n    }\n\n    /**\n     * @private\n     */\n    clearTmpEvents() {\n        this.tmpEvents.forEach(e => e.un());\n    }\n\n    /**\n     * Display empty waveform.\n     */\n    empty() {\n        if (!this.backend.isPaused()) {\n            this.stop();\n            this.backend.disconnectSource();\n        }\n        this.isReady = false;\n        this.cancelAjax();\n        this.clearTmpEvents();\n\n        // empty drawer\n        this.drawer.progress(0);\n        this.drawer.setWidth(0);\n        this.drawer.drawPeaks({ length: this.drawer.getWidth() }, 0);\n    }\n\n    /**\n     * Remove events, elements and disconnect WebAudio nodes.\n     *\n     * @emits WaveSurfer#destroy\n     */\n    destroy() {\n        this.destroyAllPlugins();\n        this.fireEvent('destroy');\n        this.cancelAjax();\n        this.clearTmpEvents();\n        this.unAll();\n        if (this.params.responsive !== false) {\n            window.removeEventListener('resize', this._onResize, true);\n            window.removeEventListener(\n                'orientationchange',\n                this._onResize,\n                true\n            );\n        }\n        if (this.backend) {\n            this.backend.destroy();\n            // clears memory usage\n            this.backend = null;\n        }\n        if (this.drawer) {\n            this.drawer.destroy();\n        }\n        this.isDestroyed = true;\n        this.isReady = false;\n        this.arraybuffer = null;\n    }\n}\n","import * as util from './util';\n\n// using constants to prevent someone writing the string wrong\nconst PLAYING = 'playing';\nconst PAUSED = 'paused';\nconst FINISHED = 'finished';\n\n/**\n * WebAudio backend\n *\n * @extends {Observer}\n */\nexport default class WebAudio extends util.Observer {\n    /** scriptBufferSize: size of the processing buffer */\n    static scriptBufferSize = 256;\n    /** audioContext: allows to process audio with WebAudio API */\n    audioContext = null;\n    /** @private */\n    offlineAudioContext = null;\n    /** @private */\n    stateBehaviors = {\n        [PLAYING]: {\n            init() {\n                this.addOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition + this.getPlayedTime();\n            }\n        },\n        [PAUSED]: {\n            init() {\n                this.removeOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition;\n            }\n        },\n        [FINISHED]: {\n            init() {\n                this.removeOnAudioProcess();\n                this.fireEvent('finish');\n            },\n            getPlayedPercents() {\n                return 1;\n            },\n            getCurrentTime() {\n                return this.getDuration();\n            }\n        }\n    };\n\n    /**\n     * Does the browser support this backend\n     *\n     * @return {boolean} Whether or not this browser supports this backend\n     */\n    supportsWebAudio() {\n        return !!(window.AudioContext || window.webkitAudioContext);\n    }\n\n    /**\n     * Get the audio context used by this backend or create one\n     *\n     * @return {AudioContext} Existing audio context, or creates a new one\n     */\n    getAudioContext() {\n        if (!window.WaveSurferAudioContext) {\n            window.WaveSurferAudioContext = new (window.AudioContext ||\n                window.webkitAudioContext)();\n        }\n        return window.WaveSurferAudioContext;\n    }\n\n    /**\n     * Get the offline audio context used by this backend or create one\n     *\n     * @param {number} sampleRate The sample rate to use\n     * @return {OfflineAudioContext} Existing offline audio context, or creates\n     * a new one\n     */\n    getOfflineAudioContext(sampleRate) {\n        if (!window.WaveSurferOfflineAudioContext) {\n            window.WaveSurferOfflineAudioContext = new (window.OfflineAudioContext ||\n                window.webkitOfflineAudioContext)(1, 2, sampleRate);\n        }\n        return window.WaveSurferOfflineAudioContext;\n    }\n\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super();\n        /** @private */\n        this.params = params;\n        /** ac: Audio Context instance */\n        this.ac =\n            params.audioContext ||\n            (this.supportsWebAudio() ? this.getAudioContext() : {});\n        /**@private */\n        this.lastPlay = this.ac.currentTime;\n        /** @private */\n        this.startPosition = 0;\n        /** @private */\n        this.scheduledPause = null;\n        /** @private */\n        this.states = {\n            [PLAYING]: Object.create(this.stateBehaviors[PLAYING]),\n            [PAUSED]: Object.create(this.stateBehaviors[PAUSED]),\n            [FINISHED]: Object.create(this.stateBehaviors[FINISHED])\n        };\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.filters = [];\n        /** gainNode: allows to control audio volume */\n        this.gainNode = null;\n        /** @private */\n        this.mergedPeaks = null;\n        /** @private */\n        this.offlineAc = null;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** analyser: provides audio analysis information */\n        this.analyser = null;\n        /** scriptNode: allows processing audio */\n        this.scriptNode = null;\n        /** @private */\n        this.source = null;\n        /** @private */\n        this.splitPeaks = [];\n        /** @private */\n        this.state = null;\n        /** @private */\n        this.explicitDuration = params.duration;\n        /**\n         * Boolean indicating if the backend was destroyed.\n         */\n        this.destroyed = false;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n\n        this.setState(PAUSED);\n        this.setPlaybackRate(this.params.audioRate);\n        this.setLength(0);\n    }\n\n    /** @private */\n    disconnectFilters() {\n        if (this.filters) {\n            this.filters.forEach(filter => {\n                filter && filter.disconnect();\n            });\n            this.filters = null;\n            // Reconnect direct path\n            this.analyser.connect(this.gainNode);\n        }\n    }\n\n    /**\n     * @private\n     *\n     * @param {string} state The new state\n     */\n    setState(state) {\n        if (this.state !== this.states[state]) {\n            this.state = this.states[state];\n            this.state.init.call(this);\n        }\n    }\n\n    /**\n     * Unpacked `setFilters()`\n     *\n     * @param {...AudioNode} filters One or more filters to set\n     */\n    setFilter(...filters) {\n        this.setFilters(filters);\n    }\n\n    /**\n     * Insert custom Web Audio nodes into the graph\n     *\n     * @param {AudioNode[]} filters Packed filters array\n     * @example\n     * const lowpass = wavesurfer.backend.ac.createBiquadFilter();\n     * wavesurfer.backend.setFilter(lowpass);\n     */\n    setFilters(filters) {\n        // Remove existing filters\n        this.disconnectFilters();\n\n        // Insert filters if filter array not empty\n        if (filters && filters.length) {\n            this.filters = filters;\n\n            // Disconnect direct path before inserting filters\n            this.analyser.disconnect();\n\n            // Connect each filter in turn\n            filters\n                .reduce((prev, curr) => {\n                    prev.connect(curr);\n                    return curr;\n                }, this.analyser)\n                .connect(this.gainNode);\n        }\n    }\n    /** Create ScriptProcessorNode to process audio */\n    createScriptNode() {\n        if (this.params.audioScriptProcessor) {\n            this.scriptNode = this.params.audioScriptProcessor;\n        } else {\n            if (this.ac.createScriptProcessor) {\n                this.scriptNode = this.ac.createScriptProcessor(\n                    WebAudio.scriptBufferSize\n                );\n            } else {\n                this.scriptNode = this.ac.createJavaScriptNode(\n                    WebAudio.scriptBufferSize\n                );\n            }\n        }\n        this.scriptNode.connect(this.ac.destination);\n    }\n\n    /** @private */\n    addOnAudioProcess() {\n        this.scriptNode.onaudioprocess = () => {\n            const time = this.getCurrentTime();\n\n            if (time >= this.getDuration()) {\n                this.setState(FINISHED);\n                this.fireEvent('pause');\n            } else if (time >= this.scheduledPause) {\n                this.pause();\n            } else if (this.state === this.states[PLAYING]) {\n                this.fireEvent('audioprocess', time);\n            }\n        };\n    }\n\n    /** @private */\n    removeOnAudioProcess() {\n        this.scriptNode.onaudioprocess = null;\n    }\n    /** Create analyser node to perform audio analysis */\n    createAnalyserNode() {\n        this.analyser = this.ac.createAnalyser();\n        this.analyser.connect(this.gainNode);\n    }\n\n    /**\n     * Create the gain node needed to control the playback volume.\n     *\n     */\n    createVolumeNode() {\n        // Create gain node using the AudioContext\n        if (this.ac.createGain) {\n            this.gainNode = this.ac.createGain();\n        } else {\n            this.gainNode = this.ac.createGainNode();\n        }\n        // Add the gain node to the graph\n        this.gainNode.connect(this.ac.destination);\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     * @returns {Promise} A Promise that resolves to `undefined` when there\n     * are no errors.\n     */\n    setSinkId(deviceId) {\n        if (deviceId) {\n            /**\n             * The webaudio API doesn't currently support setting the device\n             * output. Here we create an HTMLAudioElement, connect the\n             * webaudio stream to that element and setSinkId there.\n             */\n            let audio = new window.Audio();\n            if (!audio.setSinkId) {\n                return Promise.reject(\n                    new Error('setSinkId is not supported in your browser')\n                );\n            }\n            audio.autoplay = true;\n            const dest = this.ac.createMediaStreamDestination();\n            this.gainNode.disconnect();\n            this.gainNode.connect(dest);\n            audio.srcObject = dest.stream;\n\n            return audio.setSinkId(deviceId);\n        } else {\n            return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n        }\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.gainNode.gain.setValueAtTime(value, this.ac.currentTime);\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.gainNode.gain.value;\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer The array buffer to decode\n     * @param {function} callback The function to call on complete.\n     * @param {function} errback The function to call on error.\n     */\n    decodeArrayBuffer(arraybuffer, callback, errback) {\n        if (!this.offlineAc) {\n            this.offlineAc = this.getOfflineAudioContext(\n                this.ac && this.ac.sampleRate ? this.ac.sampleRate : 44100\n            );\n        }\n        if ('webkitAudioContext' in window) {\n            // Safari: no support for Promise-based decodeAudioData enabled\n            // Enable it in Safari using the Experimental Features > Modern WebAudio API option\n            this.offlineAc.decodeAudioData(\n                arraybuffer,\n                data => callback(data),\n                errback\n            );\n        } else {\n            this.offlineAc.decodeAudioData(arraybuffer).then(\n                (data) => callback(data)\n            ).catch(\n                (err) => errback(err)\n            );\n        }\n    }\n\n    /**\n     * Set pre-decoded peaks\n     *\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\n     * @param {?number} duration Explicit duration\n     */\n    setPeaks(peaks, duration) {\n        if (duration != null) {\n            this.explicitDuration = duration;\n        }\n        this.peaks = peaks;\n    }\n\n    /**\n     * Set the rendered length (different from the length of the audio)\n     *\n     * @param {number} length The rendered length\n     */\n    setLength(length) {\n        // No resize, we can preserve the cached peaks.\n        if (this.mergedPeaks && length == 2 * this.mergedPeaks.length - 1 + 2) {\n            return;\n        }\n\n        this.splitPeaks = [];\n        this.mergedPeaks = [];\n        // Set the last element of the sparse array so the peak arrays are\n        // appropriately sized for other calculations.\n        const channels = this.buffer ? this.buffer.numberOfChannels : 1;\n        let c;\n        for (c = 0; c < channels; c++) {\n            this.splitPeaks[c] = [];\n            this.splitPeaks[c][2 * (length - 1)] = 0;\n            this.splitPeaks[c][2 * (length - 1) + 1] = 0;\n        }\n        this.mergedPeaks[2 * (length - 1)] = 0;\n        this.mergedPeaks[2 * (length - 1) + 1] = 0;\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of arrays of\n     * peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.peaks) {\n            return this.peaks;\n        }\n        if (!this.buffer) {\n            return [];\n        }\n\n        first = first || 0;\n        last = last || length - 1;\n\n        this.setLength(length);\n\n        if (!this.buffer) {\n            return this.params.splitChannels\n                ? this.splitPeaks\n                : this.mergedPeaks;\n        }\n\n        /**\n         * The following snippet fixes a buffering data issue on the Safari\n         * browser which returned undefined It creates the missing buffer based\n         * on 1 channel, 4096 samples and the sampleRate from the current\n         * webaudio context 4096 samples seemed to be the best fit for rendering\n         * will review this code once a stable version of Safari TP is out\n         */\n        if (!this.buffer.length) {\n            const newBuffer = this.createBuffer(1, 4096, this.sampleRate);\n            this.buffer = newBuffer.buffer;\n        }\n\n        const sampleSize = this.buffer.length / length;\n        const sampleStep = ~~(sampleSize / 10) || 1;\n        const channels = this.buffer.numberOfChannels;\n        let c;\n\n        for (c = 0; c < channels; c++) {\n            const peaks = this.splitPeaks[c];\n            const chan = this.buffer.getChannelData(c);\n            let i;\n\n            for (i = first; i <= last; i++) {\n                const start = ~~(i * sampleSize);\n                const end = ~~(start + sampleSize);\n                /**\n                 * Initialize the max and min to the first sample of this\n                 * subrange, so that even if the samples are entirely\n                 * on one side of zero, we still return the true max and\n                 * min values in the subrange.\n                 */\n                let min = chan[start];\n                let max = min;\n                let j;\n\n                for (j = start; j < end; j += sampleStep) {\n                    const value = chan[j];\n\n                    if (value > max) {\n                        max = value;\n                    }\n\n                    if (value < min) {\n                        min = value;\n                    }\n                }\n\n                peaks[2 * i] = max;\n                peaks[2 * i + 1] = min;\n\n                if (c == 0 || max > this.mergedPeaks[2 * i]) {\n                    this.mergedPeaks[2 * i] = max;\n                }\n\n                if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\n                    this.mergedPeaks[2 * i + 1] = min;\n                }\n            }\n        }\n\n        return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number} Position\n     */\n    getPlayedPercents() {\n        return this.state.getPlayedPercents.call(this);\n    }\n\n    /** @private */\n    disconnectSource() {\n        if (this.source) {\n            this.source.disconnect();\n        }\n    }\n    /**\n     * Destroy all references with WebAudio, disconnecting audio nodes and closing Audio Context\n     */\n    destroyWebAudio() {\n        this.disconnectFilters();\n        this.disconnectSource();\n        this.gainNode.disconnect();\n        this.scriptNode.disconnect();\n        this.analyser.disconnect();\n\n        // close the audioContext if closeAudioContext option is set to true\n        if (this.params.closeAudioContext) {\n            // check if browser supports AudioContext.close()\n            if (\n                typeof this.ac.close === 'function' &&\n                this.ac.state != 'closed'\n            ) {\n                this.ac.close();\n            }\n            // clear the reference to the audiocontext\n            this.ac = null;\n            // clear the actual audiocontext, either passed as param or the\n            // global singleton\n            if (!this.params.audioContext) {\n                window.WaveSurferAudioContext = null;\n            } else {\n                this.params.audioContext = null;\n            }\n            // clear the offlineAudioContext\n            window.WaveSurferOfflineAudioContext = null;\n        }\n    }\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        if (!this.isPaused()) {\n            this.pause();\n        }\n        this.unAll();\n        this.buffer = null;\n        this.destroyed = true;\n\n        this.destroyWebAudio();\n    }\n\n    /**\n     * Loaded a decoded audio buffer\n     *\n     * @param {Object} buffer Decoded audio buffer to load\n     */\n    load(buffer) {\n        this.startPosition = 0;\n        this.lastPlay = this.ac.currentTime;\n        this.buffer = buffer;\n        this.createSource();\n    }\n\n    /** @private */\n    createSource() {\n        this.disconnectSource();\n        this.source = this.ac.createBufferSource();\n\n        // adjust for old browsers\n        this.source.start = this.source.start || this.source.noteGrainOn;\n        this.source.stop = this.source.stop || this.source.noteOff;\n\n        this.setPlaybackRate(this.playbackRate);\n        this.source.buffer = this.buffer;\n        this.source.connect(this.analyser);\n    }\n\n    /**\n     * @private\n     *\n     * some browsers require an explicit call to #resume before they will play back audio\n     */\n    resumeAudioContext() {\n        if (this.ac.state == 'suspended') {\n            this.ac.resume && this.ac.resume();\n        }\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean} Whether or not this backend is currently paused\n     */\n    isPaused() {\n        return this.state !== this.states[PLAYING];\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number} Duration of loaded buffer\n     */\n    getDuration() {\n        if (this.explicitDuration) {\n            return this.explicitDuration;\n        }\n        if (!this.buffer) {\n            return 0;\n        }\n        return this.buffer.duration;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     * @param {number} end Position to end at in seconds\n     * @return {{start: number, end: number}} Object containing start and end\n     * positions\n     */\n    seekTo(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        this.scheduledPause = null;\n\n        if (start == null) {\n            start = this.getCurrentTime();\n            if (start >= this.getDuration()) {\n                start = 0;\n            }\n        }\n        if (end == null) {\n            end = this.getDuration();\n        }\n\n        this.startPosition = start;\n        this.lastPlay = this.ac.currentTime;\n\n        if (this.state === this.states[FINISHED]) {\n            this.setState(PAUSED);\n        }\n\n        return {\n            start: start,\n            end: end\n        };\n    }\n\n    /**\n     * Get the playback position in seconds\n     *\n     * @return {number} The playback position in seconds\n     */\n    getPlayedTime() {\n        return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop relative to the beginning of a clip.\n     */\n    play(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        // need to re-create source on each playback\n        this.createSource();\n\n        const adjustedTime = this.seekTo(start, end);\n\n        start = adjustedTime.start;\n        end = adjustedTime.end;\n\n        this.scheduledPause = end;\n\n        this.source.start(0, start);\n\n        this.resumeAudioContext();\n\n        this.setState(PLAYING);\n\n        this.fireEvent('play');\n    }\n\n    /**\n     * Pauses the loaded audio.\n     */\n    pause() {\n        this.scheduledPause = null;\n\n        this.startPosition += this.getPlayedTime();\n        try {\n            this.source && this.source.stop(0);\n        } catch (err) {\n            // Calling stop can throw the following 2 errors:\n            // - RangeError (The value specified for when is negative.)\n            // - InvalidStateNode (The node has not been started by calling start().)\n            // We can safely ignore both errors, because:\n            // - The range is surely correct\n            // - The node might not have been started yet, in which case we just want to carry on without causing any trouble.\n        }\n\n        this.setState(PAUSED);\n\n        this.fireEvent('pause');\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audio-clip's\n     * duration.\n     *\n     * @return {number} The current time in seconds\n     */\n    getCurrentTime() {\n        return this.state.getCurrentTime.call(this);\n    }\n\n    /**\n     * Returns the current playback rate. (0=no playback, 1=normal playback)\n     *\n     * @return {number} The current playback rate\n     */\n    getPlaybackRate() {\n        return this.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value The playback rate to use\n     */\n    setPlaybackRate(value) {\n        this.playbackRate = value || 1;\n        this.source && this.source.playbackRate.setValueAtTime(\n            this.playbackRate,\n            this.ac.currentTime\n        );\n    }\n\n    /**\n     * Set a point in seconds for playback to stop at.\n     *\n     * @param {number} end Position to end at\n     * @version 3.3.0\n     */\n    setPlayEnd(end) {\n        this.scheduledPause = end;\n    }\n}\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n",null,"// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/wavesurfer.js\");\n",null,"exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","\n/**\n * @typedef {Object} MarkerParams\n * @desc The parameters used to describe a marker.\n * @example wavesurfer.addMarker(regionParams);\n * @property {number} time The time to set the marker at\n * @property {?label} string An optional marker label\n * @property {?color} string Background color for marker\n * @property {?position} string \"top\" or \"bottom\", defaults to \"bottom\"\n * @property {?markerElement} element An HTML element to display instead of the default marker image\n */\n\n\n/**\n * Markers are points in time in the audio that can be jumped to.\n *\n * @implements {PluginClass}\n *\n * @example\n * import MarkersPlugin from 'wavesurfer.markers.js';\n *\n * // if you are using <script> tags\n * var MarkerPlugin = window.WaveSurfer.markers;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     MarkersPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\n\nconst DEFAULT_FILL_COLOR = \"#D8D8D8\";\nconst DEFAULT_POSITION = \"bottom\";\n\nexport default class MarkersPlugin {\n    /**\n     * @typedef {Object} MarkersPluginParams\n     * @property {?MarkerParams[]} markers Initial set of markers\n     * @fires MarkersPlugin#marker-click\n     */\n\n    /**\n     * Markers plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param {MarkersPluginParams} params parameters use to initialise the plugin\n     * @since 4.6.0\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    static create(params) {\n        return {\n            name: 'markers',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            staticProps: {\n                addMarker(options) {\n                    if (!this.initialisedPluginList.markers) {\n                        this.initPlugin('markers');\n                    }\n                    return this.markers.add(options);\n                },\n                clearMarkers() {\n                    this.markers && this.markers.clear();\n                }\n            },\n            instance: MarkersPlugin\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n        this.util = ws.util;\n        this.style = this.util.style;\n        this.markerWidth = 11;\n        this.markerHeight = 22;\n\n\n        this._onResize = () => {\n            this._updateMarkerPositions();\n        };\n\n        this._onBackendCreated = () => {\n            this.wrapper = this.wavesurfer.drawer.wrapper;\n            if (this.params.markers) {\n                this.params.markers.forEach(marker => this.add(marker));\n            }\n            window.addEventListener('resize', this._onResize, true);\n            window.addEventListener('orientationchange', this._onResize, true);\n            this.wavesurfer.on('zoom', this._onResize);\n        };\n\n        this.markers = [];\n        this._onReady = () => {\n            this.wrapper = this.wavesurfer.drawer.wrapper;\n            this._updateMarkerPositions();\n        };\n    }\n\n    init() {\n        // Check if ws is ready\n        if (this.wavesurfer.isReady) {\n            this._onBackendCreated();\n            this._onReady();\n        } else {\n            this.wavesurfer.once('ready', this._onReady);\n            this.wavesurfer.once('backend-created', this._onBackendCreated);\n        }\n    }\n\n    destroy() {\n        this.wavesurfer.un('ready', this._onReady);\n        this.wavesurfer.un('backend-created', this._onBackendCreated);\n\n        this.wavesurfer.un('zoom', this._onResize);\n\n        window.removeEventListener('resize', this._onResize, true);\n        window.removeEventListener('orientationchange', this._onResize, true);\n\n        this.clear();\n    }\n\n    /**\n     * Add a marker\n     *\n     * @param {MarkerParams} params Marker definition\n     * @return {object} The created marker\n     */\n    add(params) {\n        let marker = {\n            time: params.time,\n            label: params.label,\n            color: params.color || DEFAULT_FILL_COLOR,\n            position: params.position || DEFAULT_POSITION\n        };\n\n        if (params.markerElement) {\n            this.markerWidth = params.markerElement.width;\n            this.markerHeight = params.markerElement.height;\n        }\n\n        marker.el = this._createMarkerElement(marker, params.markerElement);\n\n        this.wrapper.appendChild(marker.el);\n        this.markers.push(marker);\n        this._updateMarkerPositions();\n\n        return marker;\n    }\n\n    /**\n     * Remove a marker\n     *\n     * @param {number} index Index of the marker to remove\n     */\n    remove(index) {\n        let marker = this.markers[index];\n        if (!marker) {\n            return;\n        }\n\n        this.wrapper.removeChild(marker.el);\n        this.markers.splice(index, 1);\n    }\n\n    _createPointerSVG(color, position) {\n        const svgNS = \"http://www.w3.org/2000/svg\";\n\n        const el = document.createElementNS(svgNS, \"svg\");\n        const polygon = document.createElementNS(svgNS, \"polygon\");\n\n        el.setAttribute(\"viewBox\", \"0 0 40 80\");\n\n        polygon.setAttribute(\"id\", \"polygon\");\n        polygon.setAttribute(\"stroke\", \"#979797\");\n        polygon.setAttribute(\"fill\", color);\n        polygon.setAttribute(\"points\", \"20 0 40 30 40 80 0 80 0 30\");\n        if ( position == \"top\" ) {\n            polygon.setAttribute(\"transform\", \"rotate(180, 20 40)\");\n        }\n\n        el.appendChild(polygon);\n\n        this.style(el, {\n            width: this.markerWidth + \"px\",\n            height: this.markerHeight + \"px\",\n            \"min-width\": this.markerWidth + \"px\",\n            \"margin-right\": \"5px\",\n            \"z-index\": 4\n        });\n        return el;\n    }\n\n    _createMarkerElement(marker, markerElement) {\n        let label = marker.label;\n        let time = marker.time;\n\n        const el = document.createElement('marker');\n        el.className = \"wavesurfer-marker\";\n\n        this.style(el, {\n            position: \"absolute\",\n            height: \"100%\",\n            display: \"flex\",\n            overflow: \"hidden\",\n            \"flex-direction\": (marker.position == \"top\" ? \"column-reverse\" : \"column\")\n        });\n\n        const line = document.createElement('div');\n        this.style(line, {\n            \"flex-grow\": 1,\n            \"margin-left\": (this.markerWidth / 2 - 0.5) + \"px\",\n            background: \"black\",\n            width: \"1px\",\n            opacity: 0.1\n        });\n        el.appendChild(line);\n\n        const labelDiv = document.createElement('div');\n        const point = markerElement || this._createPointerSVG(marker.color, marker.position);\n        labelDiv.appendChild(point);\n\n        if ( label ) {\n            const labelEl = document.createElement('span');\n            labelEl.innerText = label;\n            this.style(labelEl, {\n                \"font-family\": \"monospace\",\n                \"font-size\": \"90%\"\n            });\n            labelDiv.appendChild(labelEl);\n        }\n\n        this.style(labelDiv, {\n            display: \"flex\",\n            \"align-items\": \"center\",\n            cursor: \"pointer\"\n        });\n\n        el.appendChild(labelDiv);\n\n        labelDiv.addEventListener(\"click\", e => {\n            e.stopPropagation();\n            this.wavesurfer.setCurrentTime(time);\n            this.wavesurfer.fireEvent(\"marker-click\", marker, e);\n        });\n\n        return el;\n    }\n\n    _updateMarkerPositions() {\n        const duration = this.wavesurfer.getDuration();\n\n        for ( let i = 0 ; i < this.markers.length; i++ ) {\n            let marker = this.markers[i];\n            const elementWidth =\n                this.wavesurfer.drawer.width /\n                this.wavesurfer.params.pixelRatio;\n\n            const positionPct = Math.min(marker.time / duration, 1);\n            const leftPx = ((elementWidth * positionPct) - (this.markerWidth / 2));\n            this.style(marker.el, {\n                \"left\":  leftPx + \"px\",\n                \"max-width\": (elementWidth - leftPx) + \"px\"\n            });\n        }\n    }\n\n    /**\n     * Remove all markers\n     */\n    clear() {\n        while ( this.markers.length > 0 ) {\n            this.remove(0);\n        }\n    }\n}\n"],"names":["CanvasEntry","wave","waveCtx","progress","progressCtx","start","end","id","constructor","name","toLowerCase","canvasContextAttributes","element","getContext","elementWidth","totalWidth","width","height","offsetLeft","elementSize","hasProgressCanvas","clearRect","canvas","waveColor","progressColor","fillStyle","vertical","setTransform","x","y","radius","fillRectToContext","ctx","drawRoundedRect","fillRect","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","fill","peaks","absmax","halfH","offsetY","drawLineToContext","length","first","Math","round","last","canvasStart","canvasEnd","scale","halfOffset","absmaxHalf","i","peak","h","halfPixel","j","format","quality","type","Promise","resolve","toBlob","toDataURL","Drawer","container","params","util","withOrientation","pixelRatio","lastPos","wrapper","el","styles","style","appendChild","document","createElement","display","position","userSelect","webkitUserSelect","fillParent","scrollParent","overflowX","hideScrollbar","overflowY","setupWrapperEvents","e","noPrevent","preventDefault","clientX","targetTouches","bbox","getBoundingClientRect","nominalWidth","parentWidth","getWidth","progressPixels","getProgressPixels","scrollLeft","scrollWidth","clamp","wrapperBbox","rtl","right","left","addEventListener","orientedEvent","scrollbarHeight","offsetHeight","clientHeight","clientY","bottom","interact","fireEvent","handleEvent","setWidth","clearWave","barWidth","drawBars","drawWave","percent","recenterOnPosition","immediate","half","clientWidth","maxScroll","target","offset","rate","autoCenterRate","max","min","newWidth","updateSize","minPxDelta","pos","autoCenter","newPos","autoCenterImmediately","updateProgress","unAll","parentNode","domElement","removeChild","channelIndex","Observer","MultiCanvas","maxCanvasWidth","maxCanvasElementWidth","canvases","progressWave","EntryClass","drawingContextAttributes","overlap","ceil","barRadius","createWrapper","createElements","zIndex","top","overflow","boxSizing","borderRightStyle","pointerEvents","addCanvas","updateCursor","borderRightWidth","cursorWidth","borderRightColor","cursorColor","requiredCanvases","removeCanvas","canvasWidth","lastCanvas","forEach","entry","updateDimensions","leftOffset","initWave","initProgress","push","lastEntry","parentElement","destroy","pop","frame","prepareDraw","hasMinVals","ch","undefined","peakIndexScale","bar","gap","barGap","step","floor","barMinHeight","reflectedPeaks","len","drawLine","splitChannelsOptions","channelColors","setFillStyles","applyCanvasTransforms","drawLines","startCanvas","endCanvas","intersection","x1","y1","x2","y2","fillRects","splitChannels","filterChannels","includes","fn","drawIndex","normalizedMax","Array","channels","filteredChannels","filter","c","hideChannel","overlay","setHeight","overallAbsMax","relativeNormalization","map","channelPeaks","absMax","indexOf","barHeight","normalize","some","call","val","all","getImage","images","MediaElementWebAudio","sourceMediaElement","setPlaybackRate","audioRate","createTimer","createVolumeNode","createScriptNode","createAnalyserNode","media","preload","createMediaElementSource","mediaElement","ac","connect","analyser","resumeAudioContext","destroyWebAudio","MediaElement","currentTime","duration","paused","playbackRate","play","pause","volume","mediaType","elementPosition","isMuted","buffer","onPlayEnd","mediaListeners","error","canplay","ended","seeked","event","volumechange","muted","Object","keys","removeEventListener","onAudioProcess","isPaused","getCurrentTime","on","url","controls","mediaControls","autoplay","src","prevMedia","querySelector","_load","elt","HTMLMediaElement","Error","load","_setupMediaListeners","setVolume","explicitDuration","Infinity","seekable","getDuration","value","clearPlayEnd","seekTo","promise","setPlayEnd","_onPlayEnd","time","un","deviceId","setSinkId","reject","destroyed","removeMediaElementOnDestroy","WebAudio","PeakCache","clearPeakCache","peakCacheRanges","peakCacheLength","uncachedRanges","item","arr","concat","sort","a","b","uncachedRangePairs","peakCacheRangePairs","values","ProgressHandler","instance","contentLength","response","_reader","body","getReader","total","parseInt","loaded","controller","read","then","done","onProgress","lengthComputable","close","byteLength","enqueue","catch","fetchFile","options","fetchHeaders","Headers","fetchRequest","Request","AbortController","requestHeaders","header","append","key","responseType","fetchOptions","method","headers","mode","credentials","cache","redirect","referrer","signal","fetch","progressAvailable","get","Response","ReadableStream","errMsg","ok","arrayBuffer","json","blob","text","status","func","args","getId","prefix","random","toString","substring","largest","smallest","Number","_disabledEventEmissions","handlers","callback","splice","handler","apply","setTimeout","eventNames","_isDisabledEventEmission","verticalPropMap","offsetTop","offsetWidth","mapProp","prop","prototype","hasOwnProperty","isProxy","Symbol","Proxy","obj","receiver","bind","set","preventClickHandler","stopPropagation","preventClick","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","ignoreSilenceMode","audioData","tmp","innerHTML","audioSilentMode","children","disableRemotePlayback","remove","PluginClass","ws","WaveSurfer","defaultParams","audioContext","audioScriptProcessor","backend","backgroundColor","dragSelection","desynchronized","forceDecode","loopSelection","mediaContainer","minPxPerSec","partialRender","devicePixelRatio","screen","deviceXDPI","logicalXDPI","plugins","renderer","responsive","skipLength","xhr","backends","assign","transform","setBackgroundColor","savedVolume","tmpEvents","currentRequest","arraybuffer","drawer","peakCache","supportsWebAudio","Backend","initialisedPluginList","isDestroyed","isReady","prevWidth","_onResize","debounce","registerPlugins","createDrawer","createBackend","createPeakCache","plugin","addPlugin","deferInit","initPlugin","staticProps","pluginStaticProp","Instance","observerPrototypeKeys","getOwnPropertyNames","destroyPlugin","init","drawBuffer","getPlayedPercents","newVolume","getVolume","seconds","skip","seekAndCenter","recenter","isFinite","isWebAudioBackend","oldScrollParent","getPlaybackRate","setMute","mute","filters","color","background","channelIndices","newRanges","addRangeToPeakCache","getPeaks","drawPeaks","pxPerSec","decodeArrayBuffer","data","loadDecodedBuffer","reader","FileReader","loadArrayBuffer","result","readAsArrayBuffer","empty","preloadIgnoreReasons","activeReasons","reason","console","warn","join","loadBuffer","loadMediaElement","action","once","getArrayBuffer","setPeaks","urlOrElt","loadElt","err","request","percentComplete","accuracy","noWindow","blobJSON","Blob","JSON","stringify","objURL","URL","createObjectURL","open","revokeObjectURL","cancel","abort","stop","disconnectSource","cancelAjax","clearTmpEvents","destroyAllPlugins","wavesurfer","VERSION","__VERSION__","PLAYING","PAUSED","FINISHED","offlineAudioContext","stateBehaviors","addOnAudioProcess","startPosition","getPlayedTime","removeOnAudioProcess","getAudioContext","lastPlay","scheduledPause","states","create","gainNode","mergedPeaks","offlineAc","scriptNode","source","splitPeaks","state","AudioContext","webkitAudioContext","WaveSurferAudioContext","sampleRate","WaveSurferOfflineAudioContext","OfflineAudioContext","webkitOfflineAudioContext","setState","setLength","disconnect","setFilters","disconnectFilters","reduce","prev","curr","createScriptProcessor","scriptBufferSize","createJavaScriptNode","destination","onaudioprocess","createAnalyser","createGain","createGainNode","audio","Audio","dest","createMediaStreamDestination","srcObject","stream","gain","setValueAtTime","errback","getOfflineAudioContext","decodeAudioData","numberOfChannels","newBuffer","createBuffer","sampleSize","sampleStep","chan","getChannelData","closeAudioContext","createSource","createBufferSource","noteGrainOn","noteOff","resume","adjustedTime"],"version":3,"file":"index.69fdef6e.js.map","sourceRoot":"/__parcel_source_root/"}